{"remainingRequest":"/Users/pstout/fairview_analytics/flask-vue-crud/env/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pstout/fairview_analytics/flask-vue-crud/env/client/src/components/FredContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pstout/fairview_analytics/flask-vue-crud/env/client/src/components/FredContainer.vue","mtime":1586398293965},{"path":"/Users/pstout/fairview_analytics/flask-vue-crud/env/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pstout/fairview_analytics/flask-vue-crud/env/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/pstout/fairview_analytics/flask-vue-crud/env/client/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/pstout/fairview_analytics/flask-vue-crud/env/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pstout/fairview_analytics/flask-vue-crud/env/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBSZXBvc2l0b3J5RmFjdG9yeSBmcm9tICcuLi9yZXBvc2l0b3JpZXMvUmVwb3NpdG9yeUZhY3RvcnknOwoKY29uc3QgUG9zdHNSZXBvc2l0b3J5ID0gUmVwb3NpdG9yeUZhY3RvcnkuZ2V0KCdwb3N0cycpOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogKCkgPT4gKHsKICAgIGZyZWRkYXRhOiBbXSwKICAgIGhlYWRlcnM6IFt7IHRleHQ6ICdEYXRlJywgdmFsdWU6ICdkYXRlJyB9XSwKICAgIHNob3djaGFydDogZmFsc2UsCiAgICBjaGFydFRpdGxlOiAnJywKICAgIGNoYXJ0RGF0YTogW1snRGF0ZScsICdHTlBDJ11dLAogICAgc2VsZWN0aW5kZXg6ICcnLAogICAgZG9tZXN0aWNvcHRpb25zOiBbJ0dEUCcsICdHTlBDQSddLAogIH0pLAogIG1ldGhvZHM6IHsKICAgIENhbGxBZ3JpY3VsdHVyZSgpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9hZ3JpY3VsdHVyZScpOwogICAgfSwKICAgIENhbGxBbHBoYSgpIHsKICAgICAgLy8gdGhpcy4kc3RvcmUuY29tbWl0KCdTaG93QWxwaGEnLCB0cnVlKTsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9hbHBoYScpOwogICAgfSwKICAgIENhbGxFY29ub21pYygpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9lY29ub21pYycpOwogICAgfSwKICAgIGhvbWUoKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvJyk7CiAgICB9LAogICAgQ2FsbFNlYygpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9zZWMnKTsKICAgIH0sCiAgICBkdW1teShhcmcpIHsKICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lCiAgICAgIGNvbnNvbGUubG9nKGFyZyk7CiAgICB9LAogICAgY2xlYXJGcmVkKCkgewogICAgICB0aGlzLmZyZWRkYXRhID0gW107CiAgICAgIHRoaXMuaGVhZGVycy5wb3AoKTsKICAgIH0sCiAgICBhc3luYyBnZXRGcmVkKCkgewogICAgICB0aGlzLmhlYWRlcnMucHVzaCh7IHRleHQ6IHRoaXMuc2VsZWN0aW5kZXgsIHZhbHVlOiAndmFsdWUnIH0pOwogICAgICBjb25zdCB2YWx1ZSA9IHsKICAgICAgICBkYXRhOiB0aGlzLnNlbGVjdGluZGV4LAogICAgICB9OwogICAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IFBvc3RzUmVwb3NpdG9yeS5nZXRGcmVkKHZhbHVlKTsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLm9ic2VydmF0aW9ucy5sZW5ndGg7IGkgKz0gMSkgewogICAgICAgIHRoaXMuZnJlZGRhdGEucHVzaChkYXRhLm9ic2VydmF0aW9uc1tpXSk7CiAgICAgIH0KICAgICAgYXdhaXQgUG9zdHNSZXBvc2l0b3J5LmV4cG9ydERhdGEodGhpcy5mcmVkZGF0YSk7CiAgICB9LAogICAgY2hhcnRGcmVkKCkgewogICAgICB0aGlzLmNoYXJ0VGl0bGUgPSB0aGlzLnNlbGVjdGluZGV4OwogICAgICB0aGlzLmNoYXJ0RGF0YSA9IFtbJ0RhdGUnLCB0aGlzLnNlbGVjdGluZGV4XV07CiAgICAgIGZvciAobGV0IHggPSAwOyB4IDwgdGhpcy5mcmVkZGF0YS5sZW5ndGg7IHggKz0gMSkgewogICAgICAgIHRoaXMuY2hhcnREYXRhLnB1c2goW3RoaXMuZnJlZGRhdGFbeF0uZGF0ZSwKICAgICAgICAgIE51bWJlcih0aGlzLmZyZWRkYXRhW3hdLnZhbHVlKV0pOyAvLyBDYXN0IHRoZSBzdHJpbmcgdmFsdWUgdG8gYSBudW1iZXIKICAgICAgfQogICAgICBjb25zb2xlLmxvZyh0aGlzLmZyZWRkYXRhKTsKICAgICAgdGhpcy5zaG93Y2hhcnQgPSB0cnVlOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["FredContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FredContainer.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <v-app-bar\n      app\n      color=\"blue darken-4\"\n      dark\n      dense\n      >\n      <v-toolbar-title>Global Analytics -- Fred</v-toolbar-title>\n      <v-spacer></v-spacer>\n<!-- <v-toolbar-title v-if=\"stockname\"> Current Commodity: {{ stockname }}</v-toolbar-title> -->\n     <!-- <template>\n        <v-menu offset-y v-if=\"stockname\">\n          <template v-slot:activator=\"{ on }\">\n            <v-btn small icon fab\n              :items=\"menuoptions\"\n              v-if=\"stockname\"\n              v-on=\"on\">\n              <v-icon>mdi-chevron-down</v-icon>\n            </v-btn>\n          </template>\n          <v-list>\n            <v-list-item\n              v-for=\"(item, index) in menuoptions\"\n              :key=\"index\"\n              @click=\"dummy(item)\"\n            >\n              <v-list-item-title>{{ item }}</v-list-item-title>\n            </v-list-item>\n          </v-list>\n        </v-menu>\n      </template>\n      <v-btn v-if=\"stockname\" @click=\"cleardata\" small icon fab>\n        <v-icon>mdi-plus</v-icon>\n      </v-btn>\n      <v-spacer></v-spacer> -->\n      <v-btn @click=\"CallAlpha\" color=\"blue darken-4\">\n        Alpha\n      </v-btn>\n      <v-btn @click=\"CallEconomic\" color=\"blue darken-4\">\n        Economic\n      </v-btn>\n      <v-btn @click=\"dummy('Weather')\" color=\"blue darken-4\">\n        Weather\n      </v-btn>\n      <v-btn @click=\"CallAgriculture\" color=\"blue darken-4\">\n        Agriculture\n      </v-btn>\n      <v-btn @click=\"CallSec\" color=\"blue darken-4\">\n        SEC\n      </v-btn>\n      <v-btn @click=\"home\" color=\"blue darken-4\">\n        Home\n      </v-btn>\n    </v-app-bar>\n    <br><br>\n    <template>\n      <v-select\n        v-if=\"freddata.length < 2\"\n        v-model=\"selectindex\"\n        :items=\"domesticoptions\"\n        label=\"Select an Economic Measure\"\n        chips\n        clearable\n      ></v-select>\n      <v-btn color=\"green\" @click=\"getFred\" v-if=\"freddata.length < 2\">Fred Data</v-btn>\n      <v-btn color=\"info\" v-if=\"freddata.length > 1\" @click=\"chartFred\">Chart Fred</v-btn>\n      <v-btn color=\"error\" v-if=\"freddata.length > 1\" @click=\"clearFred\">Clear</v-btn>\n      <v-data-table\n        v-if=\"freddata.length > 1\"\n        :headers=\"headers\"\n        :items=\"freddata\"\n      >\n      </v-data-table>\n    </template>\n    <template>\n      <GoogleChart v-if=\"showchart\" :title=\"chartTitle\"\n      :chartData=\"chartData\"></GoogleChart>\n    </template>\n  </div>\n</template>\n\n<script>\nimport RepositoryFactory from '../repositories/RepositoryFactory';\n\nconst PostsRepository = RepositoryFactory.get('posts');\nexport default {\n  data: () => ({\n    freddata: [],\n    headers: [{ text: 'Date', value: 'date' }],\n    showchart: false,\n    chartTitle: '',\n    chartData: [['Date', 'GNPC']],\n    selectindex: '',\n    domesticoptions: ['GDP', 'GNPCA'],\n  }),\n  methods: {\n    CallAgriculture() {\n      this.$router.push('/agriculture');\n    },\n    CallAlpha() {\n      // this.$store.commit('ShowAlpha', true);\n      this.$router.push('/alpha');\n    },\n    CallEconomic() {\n      this.$router.push('/economic');\n    },\n    home() {\n      this.$router.push('/');\n    },\n    CallSec() {\n      this.$router.push('/sec');\n    },\n    dummy(arg) {\n      // eslint-disable-next-line\n      console.log(arg);\n    },\n    clearFred() {\n      this.freddata = [];\n      this.headers.pop();\n    },\n    async getFred() {\n      this.headers.push({ text: this.selectindex, value: 'value' });\n      const value = {\n        data: this.selectindex,\n      };\n      const { data } = await PostsRepository.getFred(value);\n      for (let i = 0; i < data.observations.length; i += 1) {\n        this.freddata.push(data.observations[i]);\n      }\n      await PostsRepository.exportData(this.freddata);\n    },\n    chartFred() {\n      this.chartTitle = this.selectindex;\n      this.chartData = [['Date', this.selectindex]];\n      for (let x = 0; x < this.freddata.length; x += 1) {\n        this.chartData.push([this.freddata[x].date,\n          Number(this.freddata[x].value)]); // Cast the string value to a number\n      }\n      console.log(this.freddata);\n      this.showchart = true;\n    },\n  },\n};\n</script>\n"]}]}