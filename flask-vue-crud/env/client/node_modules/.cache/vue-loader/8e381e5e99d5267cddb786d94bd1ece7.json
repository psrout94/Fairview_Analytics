{"remainingRequest":"/Users/pstout/practice_folder/flask-vue-crud/env/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pstout/practice_folder/flask-vue-crud/env/client/src/components/AlphaContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pstout/practice_folder/flask-vue-crud/env/client/src/components/AlphaContainer.vue","mtime":1582767311599},{"path":"/Users/pstout/practice_folder/flask-vue-crud/env/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pstout/practice_folder/flask-vue-crud/env/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/pstout/practice_folder/flask-vue-crud/env/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pstout/practice_folder/flask-vue-crud/env/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBSZXBvc2l0b3J5RmFjdG9yeSBmcm9tICcuLi9yZXBvc2l0b3JpZXMvUmVwb3NpdG9yeUZhY3RvcnknOwoKY29uc3QgUG9zdHNSZXBvc2l0b3J5ID0gUmVwb3NpdG9yeUZhY3RvcnkuZ2V0KCdwb3N0cycpOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFscGhhZGF0YTogW3sKICAgICAgICBNZXRhRGF0YToge30sCiAgICAgICAgVGltZVNlcmllczoge30sCiAgICAgIH1dLAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGdldEFscGhhVmFudGFnZSgpIHsKICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlOwogICAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IFBvc3RzUmVwb3NpdG9yeS5nZXRBbHBoYSgpOwogICAgICB0aGlzLk1hc3NhZ2VSZXNwb25zZShkYXRhKTsKICAgIH0sCgogICAgTWFzc2FnZVJlc3BvbnNlKEFscGhhT2JqZWN0KSB7CiAgICAgIHRoaXMuYWxwaGFkYXRhLk1ldGFEYXRhID0gQWxwaGFPYmplY3QuTWV0YURhdGE7CiAgICAgIHRoaXMuYWxwaGFkYXRhLlRpbWVTZXJpZXMgPSBBbHBoYU9iamVjdC5UaW1lU2VyaWVzMTVtaW47CiAgICB9LAogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0QWxwaGFWYW50YWdlKCk7CiAgfSwKfTsK"},{"version":3,"sources":["AlphaContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AlphaContainer.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-10\">\n        <h1>AlphaVantage Data</h1>\n        <hr><br><br>\n       <!-- <button type=\"button\" class=\"btn btn-success btn-sm\">Add Book</button> -->\n        <br><br>\n        <table class=\"table table-hover\">\n          <thead>\n            <tr v-for=\"(item, index) in alphadata.MetaData\" :key=\"index\">\n              <td scope=\"col\"> {{ item }}</td>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(item, index) in alphadata.TimeSeries\" :key=\"index\">\n              <td scope=\"col\" v-for=\"(items, idx) in item\" :key=\"idx\"> {{idx}} {{ items }} </td>\n              <td>\n              </td>\n              <td>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport RepositoryFactory from '../repositories/RepositoryFactory';\n\nconst PostsRepository = RepositoryFactory.get('posts');\nexport default {\n  data() {\n    return {\n      alphadata: [{\n        MetaData: {},\n        TimeSeries: {},\n      }],\n    };\n  },\n  methods: {\n    async getAlphaVantage() {\n      this.isLoading = true;\n      const { data } = await PostsRepository.getAlpha();\n      this.MassageResponse(data);\n    },\n\n    MassageResponse(AlphaObject) {\n      this.alphadata.MetaData = AlphaObject.MetaData;\n      this.alphadata.TimeSeries = AlphaObject.TimeSeries15min;\n    },\n  },\n  created() {\n    this.getAlphaVantage();\n  },\n};\n</script>\n"]}]}