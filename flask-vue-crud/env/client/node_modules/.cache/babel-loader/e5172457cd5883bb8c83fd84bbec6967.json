{"remainingRequest":"/Users/pstout/fairview_analytics/flask-vue-crud/env/client/node_modules/babel-loader/lib/index.js!/Users/pstout/fairview_analytics/flask-vue-crud/env/client/node_modules/eslint-loader/index.js??ref--13-0!/Users/pstout/fairview_analytics/flask-vue-crud/env/client/src/repositories/PostsRepository.js","dependencies":[{"path":"/Users/pstout/fairview_analytics/flask-vue-crud/env/client/src/repositories/PostsRepository.js","mtime":1586343616651},{"path":"/Users/pstout/fairview_analytics/flask-vue-crud/env/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pstout/fairview_analytics/flask-vue-crud/env/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/pstout/fairview_analytics/flask-vue-crud/env/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0IFJlcG9zaXRvcnkgZnJvbSAnLi9SZXBvc2l0b3J5JzsKdmFyIHJlc291cmNlID0gewogIGFscGhhOiAnL2FscGhhJywKICBuZXdzOiAnL25ld3MnLAogIHNlYzogJy9zZWMnLAogIHlhaG9vOiAnL3lhaG9vJywKICBmcmVkOiAnL2ZyZWQnLAogIGV4cG9ydDogJy9leHBvcnQnCn07CmV4cG9ydCBkZWZhdWx0IHsKICBwb3N0QWxwaGE6IGZ1bmN0aW9uIHBvc3RBbHBoYShwYXlsb2FkKSB7CiAgICByZXR1cm4gUmVwb3NpdG9yeS5wb3N0KCIiLmNvbmNhdChyZXNvdXJjZS5hbHBoYSksIHBheWxvYWQpOwogIH0sCiAgZ2V0UG9zdEFscGhhOiBmdW5jdGlvbiBnZXRQb3N0QWxwaGEocG9zdElkKSB7CiAgICByZXR1cm4gUmVwb3NpdG9yeS5nZXQoIiIuY29uY2F0KHJlc291cmNlLmFscGhhLCAiLyIpLmNvbmNhdChwb3N0SWQpKTsKICB9LAogIGNyZWF0ZVBvc3RhbHBoYTogZnVuY3Rpb24gY3JlYXRlUG9zdGFscGhhKHBheWxvYWQpIHsKICAgIHJldHVybiBSZXBvc2l0b3J5LnBvc3QoIiIuY29uY2F0KHJlc291cmNlLmFscGhhKSwgcGF5bG9hZCk7CiAgfSwKICBwb3N0TmV3czogZnVuY3Rpb24gcG9zdE5ld3MocGF5bG9hZCkgewogICAgcmV0dXJuIFJlcG9zaXRvcnkucG9zdCgiIi5jb25jYXQocmVzb3VyY2UubmV3cyksIHBheWxvYWQpOwogIH0sCiAgcG9zdFNlYzogZnVuY3Rpb24gcG9zdFNlYyhwYXlsb2FkKSB7CiAgICByZXR1cm4gUmVwb3NpdG9yeS5wb3N0KCIiLmNvbmNhdChyZXNvdXJjZS5zZWMpLCBwYXlsb2FkKTsKICB9LAogIGdldFlhaG9vOiBmdW5jdGlvbiBnZXRZYWhvbygpIHsKICAgIHJldHVybiBSZXBvc2l0b3J5LnBvc3QoIiIuY29uY2F0KHJlc291cmNlLnlhaG9vKSk7CiAgfSwKICBnZXRGcmVkOiBmdW5jdGlvbiBnZXRGcmVkKCkgewogICAgcmV0dXJuIFJlcG9zaXRvcnkucG9zdCgiIi5jb25jYXQocmVzb3VyY2UuZnJlZCkpOwogIH0sCiAgZXhwb3J0RGF0YTogZnVuY3Rpb24gZXhwb3J0RGF0YShwYXlsb2FkKSB7CiAgICByZXR1cm4gUmVwb3NpdG9yeS5wb3N0KCIiLmNvbmNhdChyZXNvdXJjZS5leHBvcnQpLCBwYXlsb2FkKTsKICB9Cn07"},{"version":3,"sources":["/Users/pstout/fairview_analytics/flask-vue-crud/env/client/src/repositories/PostsRepository.js"],"names":["Repository","resource","alpha","news","sec","yahoo","fred","export","postAlpha","payload","post","getPostAlpha","postId","get","createPostalpha","postNews","postSec","getYahoo","getFred","exportData"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,cAAvB;AAEA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,KAAK,EAAE,QADQ;AAEfC,EAAAA,IAAI,EAAE,OAFS;AAGfC,EAAAA,GAAG,EAAE,MAHU;AAIfC,EAAAA,KAAK,EAAE,QAJQ;AAKfC,EAAAA,IAAI,EAAE,OALS;AAMfC,EAAAA,MAAM,EAAE;AANO,CAAjB;AAQA,eAAe;AACbC,EAAAA,SADa,qBACHC,OADG,EACM;AACjB,WAAOT,UAAU,CAACU,IAAX,WAAmBT,QAAQ,CAACC,KAA5B,GAAqCO,OAArC,CAAP;AACD,GAHY;AAKbE,EAAAA,YALa,wBAKAC,MALA,EAKQ;AACnB,WAAOZ,UAAU,CAACa,GAAX,WAAkBZ,QAAQ,CAACC,KAA3B,cAAoCU,MAApC,EAAP;AACD,GAPY;AASbE,EAAAA,eATa,2BASGL,OATH,EASY;AACvB,WAAOT,UAAU,CAACU,IAAX,WAAmBT,QAAQ,CAACC,KAA5B,GAAqCO,OAArC,CAAP;AACD,GAXY;AAabM,EAAAA,QAba,oBAaJN,OAbI,EAaK;AAChB,WAAOT,UAAU,CAACU,IAAX,WAAmBT,QAAQ,CAACE,IAA5B,GAAoCM,OAApC,CAAP;AACD,GAfY;AAiBbO,EAAAA,OAjBa,mBAiBLP,OAjBK,EAiBI;AACf,WAAOT,UAAU,CAACU,IAAX,WAAmBT,QAAQ,CAACG,GAA5B,GAAmCK,OAAnC,CAAP;AACD,GAnBY;AAqBbQ,EAAAA,QArBa,sBAqBF;AACT,WAAOjB,UAAU,CAACU,IAAX,WAAmBT,QAAQ,CAACI,KAA5B,EAAP;AACD,GAvBY;AAyBba,EAAAA,OAzBa,qBAyBH;AACR,WAAOlB,UAAU,CAACU,IAAX,WAAmBT,QAAQ,CAACK,IAA5B,EAAP;AACD,GA3BY;AA6Bba,EAAAA,UA7Ba,sBA6BFV,OA7BE,EA6BO;AAClB,WAAOT,UAAU,CAACU,IAAX,WAAmBT,QAAQ,CAACM,MAA5B,GAAsCE,OAAtC,CAAP;AACD;AA/BY,CAAf","sourcesContent":["import Repository from './Repository';\n\nconst resource = {\n  alpha: '/alpha',\n  news: '/news',\n  sec: '/sec',\n  yahoo: '/yahoo',\n  fred: '/fred',\n  export: '/export',\n};\nexport default {\n  postAlpha(payload) {\n    return Repository.post(`${resource.alpha}`, payload);\n  },\n\n  getPostAlpha(postId) {\n    return Repository.get(`${resource.alpha}/${postId}`);\n  },\n\n  createPostalpha(payload) {\n    return Repository.post(`${resource.alpha}`, payload);\n  },\n\n  postNews(payload) {\n    return Repository.post(`${resource.news}`, payload);\n  },\n\n  postSec(payload) {\n    return Repository.post(`${resource.sec}`, payload);\n  },\n\n  getYahoo() {\n    return Repository.post(`${resource.yahoo}`);\n  },\n\n  getFred() {\n    return Repository.post(`${resource.fred}`);\n  },\n\n  exportData(payload) {\n    return Repository.post(`${resource.export}`, payload);\n  },\n};\n"]}]}