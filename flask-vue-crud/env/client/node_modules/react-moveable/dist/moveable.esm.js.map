{"version":3,"file":"moveable.esm.js","sources":["../src/react-moveable/consts.ts","../src/react-moveable/utils.ts","../src/react-moveable/ables/triggerRender.ts","../src/react-moveable/getAbleDragger.ts","../src/react-moveable/MoveableManager.tsx","../src/react-moveable/ables/Pinchable.ts","../src/react-moveable/groupUtils.ts","../src/react-moveable/DraggerUtils.ts","../src/react-moveable/ables/utils.ts","../src/react-moveable/ables/snappable/snap.ts","../src/react-moveable/ables/snappable/innerBounds.ts","../src/react-moveable/ables/snappable/bounds.ts","../src/react-moveable/ables/Snappable.tsx","../src/react-moveable/ables/Draggable.tsx","../src/react-moveable/CustomDragger.ts","../src/react-moveable/ables/Rotatable.tsx","../src/react-moveable/renderDirection.tsx","../src/react-moveable/ables/Resizable.ts","../src/react-moveable/ables/Scalable.ts","../src/react-moveable/ables/Warpable.tsx","../src/react-moveable/classNames.ts","../src/react-moveable/ables/DragArea.tsx","../src/react-moveable/ables/Origin.tsx","../src/react-moveable/ables/Scrollable.ts","../src/react-moveable/ables/Default.ts","../src/react-moveable/ables/consts.ts","../src/react-moveable/ables/Groupable.tsx","../src/react-moveable/MoveableGroup.tsx","../src/react-moveable/Moveable.tsx"],"sourcesContent":["import { prefixCSS } from \"framework-utils\";\nimport getAgent from \"@egjs/agent\";\nimport { IObject } from \"@daybrush/utils\";\n\nfunction getSVGCursor(scale: number, degree: number) {\n    return `data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${32 * scale}px\" height=\"${32 * scale}px\" viewBox=\"0 0 32 32\" ><path d=\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\" stroke-linejoin=\"round\" stroke-width=\"1.2\" fill=\"black\" stroke=\"white\" style=\"transform:rotate(${degree}deg);transform-origin: 16px 16px\"></path></svg>`;\n}\nfunction getCursorCSS(degree: number) {\n    const x1 = getSVGCursor(1, degree);\n    const x2 = getSVGCursor(2, degree);\n    const degree45 = (Math.round(degree / 45) * 45) % 180;\n    const defaultCursor\n        = degree45 === 135\n        ? \"nwse-resize\"\n        : degree45 === 45\n        ? \"nesw-resize\"\n        : degree45 === 90\n        ? \"ew-resize\"\n        : \"ns-resize\"; // 135\n\n    // tslint:disable-next-line: max-line-length\n    return `cursor:${defaultCursor};cursor: url('${x1}') 16 16, ${defaultCursor};cursor: -webkit-image-set(url('${x1}') 1x, url('${x2}') 2x) 16 16, ${defaultCursor};`;\n}\n\nexport const agent = getAgent();\nexport const IS_WEBKIT\n    = agent.os.name.indexOf(\"ios\") > -1 || agent.browser.name.indexOf(\"safari\") > -1;\n\nexport const PREFIX = \"moveable-\";\nexport const MOVEABLE_CSS = prefixCSS(PREFIX, `\n{\n\tposition: fixed;\n\twidth: 0;\n\theight: 0;\n\tleft: 0;\n\ttop: 0;\n    z-index: 3000;\n    --zoom: 1;\n    --zoompx: 1px;\n}\n.control-box {\n    z-index: 0;\n}\n.line, .control {\n\tleft: 0;\n    top: 0;\n    will-change: transform;\n}\n.control {\n\tposition: absolute;\n\twidth: 14px;\n\theight: 14px;\n\tborder-radius: 50%;\n\tborder: 2px solid #fff;\n\tbox-sizing: border-box;\n\tbackground: #4af;\n\tmargin-top: -7px;\n    margin-left: -7px;\n    width: calc(14 * var(--zoompx));\n    height: calc(14 * var(--zoompx));\n    margin-top: calc(-7 * var(--zoompx));\n    margin-left: calc(-7 * var(--zoompx));\n    border: calc(2 * var(--zoompx)) solid #fff;\n    z-index: 10;\n}\n.line {\n\tposition: absolute;\n\twidth: 1px;\n    height: 1px;\n    width: var(--zoompx);\n    height: var(--zoompx);\n\tbackground: #4af;\n\ttransform-origin: 0px 50%;\n}\n.line.dashed {\n    box-sizing: border-box;\n    background: transparent;\n}\n.line.dashed.horizontal {\n    border-top: 1px dashed #4af;\n    border-top: var(--zoompx) dashed #4af;\n}\n.line.dashed.vertical {\n    border-left: 1px dashed #4af;\n    border-left: var(--zoompx) dashed #4af;\n}\n.line.dashed:before {\n    position: absolute;\n    content: attr(data-size);\n    color: #4af;\n    font-size: 12px;\n    font-weight: bold;\n}\n.line.dashed.horizontal:before {\n    left: 50%;\n    transform: translateX(-50%);\n    bottom: 5px;\n}\n.line.dashed.vertical:before {\n    top: 50%;\n    transform: translateY(-50%);\n    left: 5px;\n}\n.line.rotation-line {\n\theight: 40px;\n    width: 1px;\n    transform-origin: 50% calc(100% - 0.5px);\n    top: -40px;\n    width: var(--zoompx);\n    height: calc(40 * var(--zoompx));\n    top: calc(-40 * var(--zoompx));\n    transform-origin: 50% calc(100% - 0.5 * var(--zoompx));\n}\n.line.rotation-line .control {\n\tborder-color: #4af;\n\tbackground:#fff;\n    cursor: alias;\n    left: 50%;\n}\n.line.vertical {\n    transform: translateX(-50%);\n}\n.line.horizontal {\n    transform: translateY(-50%);\n}\n.line.vertical.bold {\n    width: 2px;\n    width: calc(2 * var(--zoompx));\n}\n.line.horizontal.bold {\n    height: 2px;\n    height: calc(2 * var(--zoompx));\n}\n.control.origin {\n\tborder-color: #f55;\n\tbackground: #fff;\n\twidth: 12px;\n\theight: 12px;\n\tmargin-top: -6px;\n    margin-left: -6px;\n    width: calc(12 * var(--zoompx));\n    height: calc(12 * var(--zoompx));\n    margin-top: calc(-6 * var(--zoompx));\n    margin-left: calc(-6 * var(--zoompx));\n\tpointer-events: none;\n}\n${[0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(degree => `\n.direction[data-rotation=\"${degree}\"] {\n\t${getCursorCSS(degree)}\n}\n`).join(\"\\n\")}\n.group {\n    z-index: -1;\n}\n.area {\n    position: absolute;\n}\n.area-pieces {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: none;\n}\n.area.avoid {\n    pointer-events: none;\n}\n.area.avoid+.area-pieces {\n    display: block;\n}\n.area-piece {\n    position: absolute;\n}\n${IS_WEBKIT ? `:global svg *:before {\n\tcontent:\"\";\n\ttransform-origin: inherit;\n}` : \"\"}\n`);\nexport const DRAGGER_EVENTS = [\"dragstart\", \"drag\", \"dragend\", \"pinchstart\", \"pinch\", \"pinchend\"];\n\nexport const NEARBY_POS = [\n    [0, 1, 2],\n    [1, 0, 3],\n    [2, 0, 3],\n    [3, 1, 2],\n];\n\nexport const TINY_NUM = 0.0000001;\nexport const MIN_SCALE = 0.000000001;\nexport const MAX_NUM = Math.pow(10, 10);\nexport const MIN_NUM = -MAX_NUM;\n\nexport const DIRECTION_INDEXES: IObject<number[]> = {\n    n: [0, 1],\n    s: [2, 3],\n    w: [2, 0],\n    e: [1, 3],\n    nw: [0],\n    ne: [1],\n    sw: [2],\n    se: [3],\n};\nexport const DIRECTION_ROTATIONS: IObject<number> = {\n    n: 0,\n    s: 180,\n    w: 270,\n    e: 90,\n    nw: 315,\n    ne: 45,\n    sw: 225,\n    se: 135,\n};\n","import { PREFIX, IS_WEBKIT } from \"./consts\";\nimport { prefixNames } from \"framework-utils\";\nimport { splitBracket, isUndefined, isObject, splitUnit, IObject } from \"@daybrush/utils\";\nimport {\n    multiply, invert,\n    convertCSStoMatrix, convertMatrixtoCSS,\n    convertDimension, createIdentityMatrix,\n    createOriginMatrix, convertPositionMatrix, caculate,\n    multiplies,\n    minus,\n    getOrigin,\n    createScaleMatrix,\n    plus,\n    getRad,\n    ignoreDimension,\n} from \"@moveable/matrix\";\n\nimport MoveableManager from \"./MoveableManager\";\nimport { MoveableManagerState, Able, MoveableClientRect } from \"./types\";\n\nexport function round(num: number) {\n    return Math.round(num);\n}\nexport function multiply2(pos1: number[], pos2: number[]) {\n    return [\n        pos1[0] * pos2[0],\n        pos1[1] * pos2[1],\n    ];\n}\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\n\nexport function createIdentityMatrix3() {\n    return createIdentityMatrix(3);\n}\n\nexport function getTransform(target: SVGElement | HTMLElement, isInit: true): number[];\nexport function getTransform(target: SVGElement | HTMLElement, isInit?: false): \"none\" | number[];\nexport function getTransform(target: SVGElement | HTMLElement, isInit?: boolean) {\n    const transform = getComputedStyle(target).transform!;\n\n    if (!transform || (transform === \"none\" && !isInit)) {\n        return \"none\";\n    }\n    return getTransformMatrix(transform);\n}\n\nexport function getTransformMatrix(transform: string | number[]) {\n    if (!transform || transform === \"none\") {\n        return [1, 0, 0, 1, 0, 0];\n\n    }\n    if (isObject(transform)) {\n        return transform;\n    }\n    const value = splitBracket(transform).value!;\n    return value.split(/s*,\\s*/g).map(v => parseFloat(v));\n}\nexport function getAbsoluteMatrix(matrix: number[], n: number, origin: number[]) {\n\n    return multiplies(\n        n,\n        createOriginMatrix(origin, n),\n        matrix,\n        createOriginMatrix(origin.map(a => -a), n),\n    );\n}\nexport function measureSVGSize(el: SVGElement, unit: string, isHorizontal: boolean) {\n    if (unit === \"%\") {\n        const viewBox = el.ownerSVGElement!.viewBox.baseVal;\n        return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\n    }\n    return 1;\n}\nexport function getBeforeTransformOrigin(el: SVGElement) {\n    const relativeOrigin = getTransformOrigin(getComputedStyle(el, \":before\"));\n\n    return relativeOrigin.map((o, i) => {\n        const { value, unit } = splitUnit(o);\n\n        return value * measureSVGSize(el, unit, i === 0);\n    });\n}\nexport function getTransformOrigin(style: CSSStyleDeclaration) {\n    const transformOrigin = style.transformOrigin;\n\n    return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\n}\nexport function getOffsetInfo(\n    el: SVGElement | HTMLElement | null | undefined,\n    lastParent: SVGElement | HTMLElement | null | undefined,\n    isParent?: boolean,\n) {\n    const body = document.body;\n    let target = !el || isParent ? el : el.parentElement;\n    let isEnd = false;\n    let position = \"relative\";\n\n    while (target && target !== body) {\n        if (lastParent === target) {\n            isEnd = true;\n        }\n        const style = getComputedStyle(target);\n        const transform = style.transform;\n        position = style.position!;\n\n        if (position !== \"static\" || (transform && transform !== \"none\")) {\n            break;\n        }\n        target = target.parentElement;\n        position = \"relative\";\n    }\n    return {\n        isStatic: position === \"static\",\n        isEnd: isEnd || !target || target === body,\n        offsetParent: target as HTMLElement || body,\n    };\n\n}\nexport function getOffsetPosInfo(\n    el: HTMLElement | SVGElement,\n    container: SVGElement | HTMLElement | null,\n    style: CSSStyleDeclaration,\n    isFixed: boolean,\n) {\n    const tagName = el.tagName.toLowerCase();\n    let offsetLeft = (el as HTMLElement).offsetLeft;\n    let offsetTop = (el as HTMLElement).offsetTop;\n\n    if (isFixed) {\n        const containerClientRect = (container || document.documentElement).getBoundingClientRect();\n\n        offsetLeft -= containerClientRect.left;\n        offsetTop -= containerClientRect.top;\n    }\n    // svg\n    const isSVG = isUndefined(offsetLeft);\n    let hasOffset = !isSVG;\n    let origin: number[];\n    // inner svg element\n    if (!hasOffset && tagName !== \"svg\") {\n        origin = IS_WEBKIT\n            ? getBeforeTransformOrigin(el as SVGElement)\n            : getTransformOrigin(style).map(pos => parseFloat(pos));\n\n        hasOffset = true;\n\n        if (tagName === \"g\") {\n            offsetLeft = 0;\n            offsetTop = 0;\n        } else {\n            [\n                offsetLeft, offsetTop, origin[0], origin[1],\n            ] = getSVGGraphicsOffset(el as SVGGraphicsElement, origin);\n        }\n    } else {\n        origin = getTransformOrigin(style).map(pos => parseFloat(pos));\n    }\n    return {\n        isSVG,\n        hasOffset,\n        offset: [offsetLeft, offsetTop],\n        origin,\n    };\n}\nexport function getMatrixStackInfo(\n    target: SVGElement | HTMLElement,\n    container: SVGElement | HTMLElement | null,\n    prevMatrix?: number[],\n) {\n    let el: SVGElement | HTMLElement | null = target;\n    const matrixes: number[][] = [];\n    let isEnd = false;\n    let is3d = false;\n    let n = 3;\n    let transformOrigin!: number[];\n    let targetMatrix!: number[];\n\n    const offsetContainer = getOffsetInfo(container, container, true).offsetParent;\n\n    if (prevMatrix) {\n        isEnd = target === container;\n        if (prevMatrix.length > 10) {\n            is3d = true;\n            n = 4;\n        }\n        container = target.parentElement;\n    }\n\n    while (el && !isEnd) {\n        const style: CSSStyleDeclaration = getComputedStyle(el);\n        const tagName = el.tagName.toLowerCase();\n        const position = style.position;\n        const isFixed = position === \"fixed\";\n        const styleTransform = style.transform!;\n        let matrix: number[] = convertCSStoMatrix(getTransformMatrix(styleTransform));\n\n        // convert 3 to 4\n        const length = matrix.length;\n        if (!is3d && length === 16) {\n            is3d = true;\n            n = 4;\n            const matrixesLength = matrixes.length;\n\n            for (let i = 0; i < matrixesLength; ++i) {\n                matrixes[i] = convertDimension(matrixes[i], 3, 4);\n            }\n        }\n        if (is3d &&  length === 9) {\n            matrix = convertDimension(matrix, 3, 4);\n        }\n        const {\n            hasOffset,\n            isSVG,\n            origin,\n            offset: offsetPos,\n        } = getOffsetPosInfo(el, container, style, isFixed);\n        let [\n            offsetLeft,\n            offsetTop,\n        ] = offsetPos;\n        if (tagName === \"svg\" && targetMatrix) {\n            matrixes.push(\n                // scale matrix for svg's SVGElements.\n                getSVGMatrix(el as SVGSVGElement, n),\n                createIdentityMatrix(n),\n            );\n        }\n        const {\n            offsetParent,\n            isEnd: isOffsetEnd,\n            isStatic,\n        } = getOffsetInfo(el, container);\n\n        if (IS_WEBKIT && hasOffset && !isSVG && isStatic && position === \"relative\") {\n            offsetLeft -= offsetParent.offsetLeft;\n            offsetTop -= offsetParent.offsetTop;\n            isEnd = isEnd || isOffsetEnd;\n        }\n        let parentClientLeft = 0;\n        let parentClientTop = 0;\n\n        if (hasOffset && offsetContainer !== offsetParent) {\n            // border\n            parentClientLeft = offsetParent.clientLeft;\n            parentClientTop = offsetParent.clientTop;\n        }\n        matrixes.push(\n            // absolute matrix\n            getAbsoluteMatrix(matrix, n, origin),\n            // offset matrix (offsetPos + clientPos(border))\n            createOriginMatrix(hasOffset ? [\n                offsetLeft - el.scrollLeft + parentClientLeft,\n                offsetTop - el.scrollTop + parentClientTop,\n            ] : [el, origin] as any, n),\n        );\n        if (!targetMatrix) {\n            targetMatrix = matrix;\n        }\n        if (!transformOrigin) {\n            transformOrigin = origin;\n        }\n        if (isEnd || isFixed) {\n            break;\n        } else {\n            el = offsetParent;\n            isEnd = isOffsetEnd;\n        }\n    }\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(n);\n    }\n    if (!transformOrigin) {\n        transformOrigin = [0, 0];\n    }\n    return {\n        offsetContainer,\n        matrixes,\n        targetMatrix,\n        transformOrigin,\n        is3d,\n    };\n}\nexport function caculateMatrixStack(\n    target: SVGElement | HTMLElement,\n    container: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null,\n    prevMatrix?: number[],\n    prevRootMatrix?: number[],\n    prevN?: number,\n): [number[], number[], number[], number[], number[], string, number[], boolean] {\n    const {\n        matrixes,\n        is3d,\n        targetMatrix: prevTargetMatrix,\n        transformOrigin,\n        offsetContainer,\n    } = getMatrixStackInfo(target, container, prevMatrix);\n    const {\n        matrixes: rootMatrixes,\n        is3d: isRoot3d,\n    } = getMatrixStackInfo(offsetContainer, rootContainer, prevRootMatrix);\n\n    const n = isRoot3d || is3d ? 4 : 3;\n    const isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\n    const originalContainer = container || document.body;\n    let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    let targetMatrix = prevTargetMatrix;\n    let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\n    let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    let offsetMatrix = createIdentityMatrix(n);\n    const length = matrixes.length;\n    const endContainer = getOffsetInfo(originalContainer, originalContainer, true).offsetParent;\n\n    rootMatrixes.reverse();\n    matrixes.reverse();\n\n    if (!is3d && isRoot3d) {\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\n        matrixes.forEach((matrix, i) => {\n            matrixes[i] = convertDimension(matrix, 3, 4);\n        });\n    }\n    if (is3d && !isRoot3d) {\n        rootMatrixes.forEach((matrix, i) => {\n            rootMatrixes[i] = convertDimension(matrix, 3, 4);\n        });\n    }\n\n    // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\n    // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\n    // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\n\n    if (!prevRootMatrix) {\n        rootMatrixes.forEach(matrix => {\n            rootMatrix = multiply(rootMatrix, matrix, n);\n        });\n    }\n    matrixes.forEach((matrix, i) => {\n        if (length - 2 === i) {\n            // length - 3\n            beforeMatrix = allMatrix.slice();\n        }\n        if (length - 1 === i) {\n            // length - 2\n            offsetMatrix = allMatrix.slice();\n        }\n\n        // caculate for SVGElement\n        if (isObject(matrix[n - 1])) {\n            [matrix[n - 1], matrix[2 * n - 1]] =\n                getSVGOffset(\n                    matrix[n - 1] as any,\n                    endContainer,\n                    n,\n                    matrix[2 * n - 1] as any,\n                    allMatrix,\n                    matrixes[i + 1],\n                );\n        }\n        allMatrix = multiply(allMatrix, matrix, n);\n    });\n    const isMatrix3d = !isSVGGraphicElement && is3d;\n\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\n    }\n    const transform = `${isMatrix3d ? \"matrix3d\" : \"matrix\"}(${\n        convertMatrixtoCSS(isSVGGraphicElement && targetMatrix.length === 16\n            ? convertDimension(targetMatrix, 4, 3) : targetMatrix)\n        })`;\n\n    rootMatrix = ignoreDimension(rootMatrix, n, n);\n    return [\n        rootMatrix,\n        beforeMatrix,\n        offsetMatrix,\n        allMatrix,\n        targetMatrix,\n        transform,\n        transformOrigin,\n        is3d || isRoot3d,\n    ];\n}\nexport function getSVGMatrix(\n    el: SVGSVGElement,\n    n: number,\n) {\n    const clientWidth = el.clientWidth;\n    const clientHeight = el.clientHeight;\n    const viewBox = (el as SVGSVGElement).viewBox.baseVal;\n    const viewBoxWidth = viewBox.width || clientWidth;\n    const viewBoxHeight = viewBox.height || clientHeight;\n    const scaleX = clientWidth / viewBoxWidth;\n    const scaleY = clientHeight / viewBoxHeight;\n\n    const preserveAspectRatio = (el as SVGSVGElement).preserveAspectRatio.baseVal;\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n    const align = preserveAspectRatio.align;\n    // 1 : meet 2: slice\n    const meetOrSlice = preserveAspectRatio.meetOrSlice;\n    const svgOrigin = [0, 0];\n    const scale = [scaleX, scaleY];\n    const translate = [0, 0];\n\n    if (align !== 1) {\n        const xAlign = (align - 2) % 3;\n        const yAlign = Math.floor((align - 2) / 3);\n\n        svgOrigin[0] = viewBoxWidth * xAlign / 2;\n        svgOrigin[1] = viewBoxHeight * yAlign / 2;\n\n        const scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\n\n        scale[0] = scaleDimension;\n        scale[1] = scaleDimension;\n\n        translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\n        translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\n    }\n\n    const scaleMatrix = createScaleMatrix(scale, n);\n    [\n        scaleMatrix[n - 1],\n        scaleMatrix[2 * n - 1],\n    ] = translate;\n\n    return getAbsoluteMatrix(\n        scaleMatrix,\n        n,\n        svgOrigin,\n    );\n}\nexport function getSVGGraphicsOffset(\n    el: SVGGraphicsElement,\n    origin: number[],\n) {\n    if (!el.getBBox) {\n        return [0, 0];\n    }\n    const bbox = el.getBBox();\n    const svgElement = el.ownerSVGElement!;\n    const viewBox = svgElement.viewBox.baseVal;\n    const left = bbox.x - viewBox.x;\n    const top = bbox.y - viewBox.y;\n\n    return [\n        left,\n        top,\n        origin[0] - left,\n        origin[1] - top,\n    ];\n}\nexport function caculatePosition(matrix: number[], pos: number[], n: number) {\n    return caculate(matrix, convertPositionMatrix(pos, n), n);\n}\nexport function caculatePoses(matrix: number[], width: number, height: number, n: number) {\n    const pos1 = caculatePosition(matrix, [0, 0], n);\n    const pos2 = caculatePosition(matrix, [width, 0], n);\n    const pos3 = caculatePosition(matrix, [0, height], n);\n    const pos4 = caculatePosition(matrix, [width, height], n);\n\n    return [pos1, pos2, pos3, pos4];\n}\nexport function getRect(poses: number[][]) {\n    const posesX = poses.map(pos => pos[0]);\n    const posesY = poses.map(pos => pos[1]);\n    const left = Math.min(...posesX);\n    const top = Math.min(...posesY);\n    const right = Math.max(...posesX);\n    const bottom = Math.max(...posesY);\n    const rectWidth = right - left;\n    const rectHeight = bottom - top;\n\n    return {\n        left, top,\n        right, bottom,\n        width: rectWidth,\n        height: rectHeight,\n    };\n}\nexport function caculateRect(matrix: number[], width: number, height: number, n: number) {\n    const poses = caculatePoses(matrix, width, height, n);\n\n    return getRect(poses);\n}\nexport function getSVGOffset(\n    el: SVGElement,\n    container: HTMLElement | SVGElement,\n    n: number, origin: number[], beforeMatrix: number[], absoluteMatrix: number[]) {\n\n    const [width, height] = getSize(el);\n    const containerClientRect = container.getBoundingClientRect();\n    const rect = el.getBoundingClientRect();\n    const rectLeft = rect.left - containerClientRect.left + container.scrollLeft;\n    const rectTop = rect.top - containerClientRect.top + container.scrollTop;\n    const rectWidth = rect.width;\n    const rectHeight = rect.height;\n    const mat = multiplies(\n        n,\n        beforeMatrix,\n        absoluteMatrix,\n    );\n    const {\n        left: prevLeft,\n        top: prevTop,\n        width: prevWidth,\n        height: prevHeight,\n    } = caculateRect(mat, width, height, n);\n    const posOrigin = caculatePosition(mat, origin, n);\n    const prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\n    const rectOrigin = [\n        rectLeft + prevOrigin[0] * rectWidth / prevWidth,\n        rectTop + prevOrigin[1] * rectHeight / prevHeight,\n    ];\n    const offset = [0, 0];\n    let count = 0;\n\n    while (++count < 10) {\n        const inverseBeforeMatrix = invert(beforeMatrix, n);\n        [offset[0], offset[1]] = minus(\n            caculatePosition(inverseBeforeMatrix, rectOrigin, n),\n            caculatePosition(inverseBeforeMatrix, posOrigin, n),\n        );\n        const mat2 = multiplies(\n            n,\n            beforeMatrix,\n            createOriginMatrix(offset, n),\n            absoluteMatrix,\n        );\n        const {\n            left: nextLeft,\n            top: nextTop,\n        } = caculateRect(mat2, width, height, n);\n        const distLeft = nextLeft - rectLeft;\n        const distTop = nextTop - rectTop;\n\n        if (Math.abs(distLeft) < 2 && Math.abs(distTop) < 2) {\n            break;\n        }\n        rectOrigin[0] -= distLeft;\n        rectOrigin[1] -= distTop;\n    }\n    return offset.map(p => Math.round(p));\n}\nexport function caculateMoveablePosition(matrix: number[], origin: number[], width: number, height: number): [\n    number[],\n    number[],\n    number[],\n    number[],\n    number[],\n    number[],\n    1 | -1,\n] {\n    const is3d = matrix.length === 16;\n    const n = is3d ? 4 : 3;\n    let [\n        [x1, y1],\n        [x2, y2],\n        [x3, y3],\n        [x4, y4],\n    ] = caculatePoses(matrix, width, height, n);\n    let [originX, originY] = caculatePosition(matrix, origin, n);\n\n    const left = Math.min(x1, x2, x3, x4);\n    const top = Math.min(y1, y2, y3, y4);\n    const right = Math.max(x1, x2, x3, x4);\n    const bottom = Math.max(y1, y2, y3, y4);\n\n    x1 = (x1 - left) || 0;\n    x2 = (x2 - left) || 0;\n    x3 = (x3 - left) || 0;\n    x4 = (x4 - left) || 0;\n\n    y1 = (y1 - top) || 0;\n    y2 = (y2 - top) || 0;\n    y3 = (y3 - top) || 0;\n    y4 = (y4 - top) || 0;\n\n    originX = (originX - left) || 0;\n    originY = (originY - top) || 0;\n\n    const center = [\n        (x1 + x2 + x3 + x4) / 4,\n        (y1 + y2 + y3 + y4) / 4,\n    ];\n    const pos1Rad = getRad(center, [x1, y1]);\n    const pos2Rad = getRad(center, [x2, y2]);\n    const direction =\n        (pos1Rad < pos2Rad && pos2Rad - pos1Rad < Math.PI) || (pos1Rad > pos2Rad && pos2Rad - pos1Rad < -Math.PI)\n            ? 1 : -1;\n\n    return [\n        [left, top, right, bottom],\n        [originX, originY],\n        [x1, y1],\n        [x2, y2],\n        [x3, y3],\n        [x4, y4],\n        direction,\n    ];\n}\nexport function getDistSize(vec: number[]) {\n    return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n}\nexport function getDiagonalSize(pos1: number[], pos2: number[]) {\n    return getDistSize([\n        pos2[0] - pos1[0],\n        pos2[1] - pos1[1],\n    ]);\n}\nexport function getLineStyle(pos1: number[], pos2: number[], rad: number = getRad(pos1, pos2)) {\n    const width = getDiagonalSize(pos1, pos2);\n\n    return {\n        transform: `translateY(-50%) translate(${pos1[0]}px, ${pos1[1]}px) rotate(${rad}rad)`,\n        width: `${width}px`,\n    };\n}\nexport function getControlTransform(rotation: number, ...poses: number[][]) {\n    const length = poses.length;\n\n    const x = poses.reduce((prev, pos) => prev + pos[0], 0) / length;\n    const y = poses.reduce((prev, pos) => prev + pos[1], 0) / length;\n    return {\n        transform: `translate(${x}px, ${y}px) rotate(${rotation}rad)`,\n    };\n}\nexport function getCSSSize(target: SVGElement | HTMLElement) {\n    const style = window.getComputedStyle(target);\n\n    return [\n        parseFloat(style.width!),\n        parseFloat(style.height!),\n    ];\n}\nexport function getSize(\n    target: SVGElement | HTMLElement,\n    style: CSSStyleDeclaration = window.getComputedStyle(target),\n    isOffset?: boolean,\n    isBoxSizing: boolean = isOffset || style.boxSizing === \"border-box\",\n) {\n    let width = (target as HTMLElement).offsetWidth;\n    let height = (target as HTMLElement).offsetHeight;\n    const hasOffset = !isUndefined(width);\n\n    if ((isOffset || isBoxSizing) && hasOffset) {\n        return [width, height];\n    }\n    width = target.clientWidth;\n    height = target.clientHeight;\n\n    if (!hasOffset && !width && !height) {\n        const bbox = (target as SVGGraphicsElement).getBBox();\n\n        return [bbox.width, bbox.height];\n    }\n    if (isOffset || isBoxSizing) {\n        const borderLeft = parseFloat(style.borderLeftWidth!) || 0;\n        const borderRight = parseFloat(style.borderRightWidth!) || 0;\n        const borderTop = parseFloat(style.borderTopWidth!) || 0;\n        const borderBottom = parseFloat(style.borderBottomWidth!) || 0;\n\n        return [\n            width + borderLeft + borderRight,\n            height + borderTop + borderBottom,\n        ];\n    } else {\n        const paddingLeft = parseFloat(style.paddingLeft!) || 0;\n        const paddingRight = parseFloat(style.paddingRight!) || 0;\n        const paddingTop = parseFloat(style.paddingTop!) || 0;\n        const paddingBottom = parseFloat(style.paddingBottom!) || 0;\n\n        return [\n            width - paddingLeft - paddingRight,\n            height - paddingTop - paddingBottom,\n        ];\n    }\n}\nexport function getRotationRad(\n    poses: number[][],\n    direction: number,\n) {\n    return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\n}\nexport function getTargetInfo(\n    target?: HTMLElement | SVGElement,\n    container?: HTMLElement | SVGElement | null,\n    parentContainer?: HTMLElement | SVGElement | null,\n    rootContainer?: HTMLElement | SVGElement | null,\n    state?: Partial<MoveableManagerState> | false | undefined,\n): Partial<MoveableManagerState> {\n    let left = 0;\n    let top = 0;\n    let right = 0;\n    let bottom = 0;\n    let origin = [0, 0];\n    let pos1 = [0, 0];\n    let pos2 = [0, 0];\n    let pos3 = [0, 0];\n    let pos4 = [0, 0];\n    let rootMatrix = createIdentityMatrix3();\n    let offsetMatrix = createIdentityMatrix3();\n    let beforeMatrix = createIdentityMatrix3();\n    let matrix = createIdentityMatrix3();\n    let targetMatrix = createIdentityMatrix3();\n    let width = 0;\n    let height = 0;\n    let transformOrigin = [0, 0];\n    let direction: 1 | -1 = 1;\n    let beforeDirection: 1 | -1 = 1;\n    let is3d = false;\n    let targetTransform = \"\";\n    let beforeOrigin = [0, 0];\n    let targetClientRect = resetClientRect();\n    let containerClientRect = resetClientRect();\n    let rotation = 0;\n\n    const prevMatrix = state ? state.beforeMatrix : undefined;\n    const prevRootMatrix = state ? state.rootMatrix : undefined;\n    const prevN = state ? (state.is3d ? 4 : 3) : undefined;\n\n    if (target) {\n        if (state) {\n            width = state.width!;\n            height = state.height!;\n        } else {\n            const style = getComputedStyle(target);\n\n            width = (target as HTMLElement).offsetWidth;\n            height = (target as HTMLElement).offsetHeight;\n\n            if (isUndefined(width)) {\n                [width, height] = getSize(target, style, true);\n            }\n        }\n        [\n            rootMatrix,\n            beforeMatrix,\n            offsetMatrix,\n            matrix,\n            targetMatrix,\n            targetTransform, transformOrigin, is3d,\n        ] = caculateMatrixStack(\n            target, container!, rootContainer!,\n            prevMatrix, prevRootMatrix, prevN,\n        );\n\n        [\n            [left, top, right, bottom],\n            origin,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            direction,\n        ] = caculateMoveablePosition(matrix, transformOrigin, width, height);\n\n        const n = is3d ? 4 : 3;\n        let beforePos = [0, 0];\n\n        [\n            beforePos, beforeOrigin, , , , , beforeDirection,\n        ] = caculateMoveablePosition(offsetMatrix, plus(transformOrigin, getOrigin(targetMatrix, n)), width, height);\n\n        beforeOrigin = [\n            beforeOrigin[0] + beforePos[0] - left,\n            beforeOrigin[1] + beforePos[1] - top,\n        ];\n\n        targetClientRect = getClientRect(target);\n        containerClientRect = getClientRect(\n            getOffsetInfo(parentContainer, parentContainer, true).offsetParent || document.body,\n            true,\n        );\n        rotation = getRotationRad([pos1, pos2], direction);\n    }\n\n    return {\n        rotation,\n        targetClientRect,\n        containerClientRect,\n        beforeDirection,\n        direction,\n        target,\n        left,\n        top,\n        right,\n        bottom,\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n        width,\n        height,\n        rootMatrix,\n        beforeMatrix,\n        offsetMatrix,\n        targetMatrix,\n        matrix,\n        targetTransform,\n        is3d,\n        beforeOrigin,\n        origin,\n        transformOrigin,\n    };\n}\nexport function resetClientRect(): MoveableClientRect {\n    return {\n        left: 0, right: 0,\n        top: 0, bottom: 0,\n        width: 0, height: 0,\n        clientWidth: 0, clientHeight: 0,\n        scrollWidth: 0, scrollHeight: 0,\n    };\n}\nexport function getClientRect(el: HTMLElement | SVGElement, isExtends?: boolean) {\n    const { left, width, top, bottom, right, height } = el.getBoundingClientRect();\n\n    const rect: MoveableClientRect = {\n        left,\n        right,\n        top,\n        bottom,\n        width,\n        height,\n    };\n\n    if (isExtends) {\n        rect.clientWidth = el.clientWidth;\n        rect.clientHeight = el.clientHeight;\n        rect.scrollWidth = el.scrollWidth;\n        rect.scrollHeight = el.scrollHeight;\n    }\n    return rect;\n}\nexport function getDirection(target: SVGElement | HTMLElement) {\n    if (!target) {\n        return;\n    }\n    const direciton = target.getAttribute(\"data-direction\")!;\n\n    if (!direciton) {\n        return;\n    }\n    const dir = [0, 0];\n\n    (direciton.indexOf(\"w\") > -1) && (dir[0] = -1);\n    (direciton.indexOf(\"e\") > -1) && (dir[0] = 1);\n    (direciton.indexOf(\"n\") > -1) && (dir[1] = -1);\n    (direciton.indexOf(\"s\") > -1) && (dir[1] = 1);\n\n    return dir;\n}\nexport function getAbsolutePoses(poses: number[][], dist: number[]) {\n    return [\n        plus(dist, poses[0]),\n        plus(dist, poses[1]),\n        plus(dist, poses[2]),\n        plus(dist, poses[3]),\n    ];\n}\nexport function getAbsolutePosesByState({\n    left,\n    top,\n    pos1,\n    pos2,\n    pos3,\n    pos4,\n}: {\n    left: number,\n    top: number,\n    pos1: number[],\n    pos2: number[],\n    pos3: number[],\n    pos4: number[],\n}) {\n    return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\n}\nexport function roundSign(num: number) {\n    return Math.round(num % 1 === -0.5 ? num - 1 : num);\n}\nexport function throttle(num: number, unit: number) {\n    if (!unit) {\n        return num;\n    }\n    return Math.round(num / unit) * unit;\n}\nexport function throttleArray(nums: number[], unit: number) {\n    nums.forEach((_, i) => {\n        nums[i] = throttle(nums[i], unit);\n    });\n    return nums;\n}\n\nexport function unset(self: any, name: string) {\n    if (self[name]) {\n        self[name].unset();\n        self[name] = null;\n    }\n}\n\nexport function getOrientationDirection(pos: number[], pos1: number[], pos2: number[]) {\n    return (pos[0] - pos1[0]) * (pos2[1] - pos1[1]) - (pos[1] - pos1[1]) * (pos2[0] - pos1[0]);\n}\nexport function isInside(pos: number[], pos1: number[], pos2: number[], pos3: number[], pos4: number[]) {\n    const k1 = getOrientationDirection(pos, pos1, pos2);\n    const k2 = getOrientationDirection(pos, pos2, pos4);\n    const k3 = getOrientationDirection(pos, pos4, pos1);\n\n    const k4 = getOrientationDirection(pos, pos2, pos4);\n    const k5 = getOrientationDirection(pos, pos4, pos3);\n    const k6 = getOrientationDirection(pos, pos3, pos2);\n    const signs1 = [k1, k2, k3];\n    const signs2 = [k4, k5, k6];\n\n    if (\n        signs1.every(sign => sign >= 0)\n        || signs1.every(sign => sign <= 0)\n        || signs2.every(sign => sign >= 0)\n        || signs2.every(sign => sign <= 0)\n    ) {\n        return true;\n    }\n    return false;\n}\n\nexport function fillParams<T extends IObject<any>>(\n    moveable: MoveableManager,\n    e: any,\n    params: Pick<T, Exclude<keyof T, \"target\" | \"clientX\" | \"clientY\" | \"inputEvent\" | \"datas\" | \"currentTarget\">>,\n): T {\n    const datas = e.datas;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n    return {\n        ...params,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        datas: datas.datas,\n    } as any;\n}\n\nexport function triggerEvent<T extends IObject<any>, U extends keyof T>(\n    moveable: MoveableManager<T>,\n    name: U & string,\n    params: T[U] extends ((e: infer P) => any) | undefined ? P : {},\n): any {\n    return moveable.triggerEvent(name, params);\n}\n\nexport function getComputedStyle(el: HTMLElement | SVGElement, pseudoElt?: string | null) {\n    return window.getComputedStyle(el, pseudoElt);\n}\n\nexport function filterAbles(ables: Able[], methods: Array<keyof Able>) {\n    const enabledAbles: IObject<boolean> = {};\n    const ableGroups: IObject<boolean> = {};\n\n    return ables.filter(able => {\n        const name = able.name;\n\n        if (enabledAbles[name] || !methods.some(method => able[method])) {\n            return false;\n        }\n        if (able.ableGroup) {\n            if (ableGroups[able.ableGroup]) {\n                return false;\n            }\n            ableGroups[able.ableGroup] = true;\n        }\n        enabledAbles[name] = true;\n        return true;\n    });\n}\n\nexport function getKeepRatioHeight(width: number, isWidth: boolean, ratio: number) {\n    return width * (isWidth ? ratio : 1 / ratio);\n}\nexport function getKeepRatioWidth(height: number, isWidth: boolean, ratio: number) {\n    return height * (isWidth ? 1 / ratio : ratio);\n}\n\nexport function equals(a1: any, a2: any) {\n    return a1 === a2 || (a1 == null && a2 == null);\n}\n\nexport function selectValue<T = any>(...values: any[]): T {\n    const length = values.length - 1;\n    for (let i = 0; i < length; ++i) {\n        const value = values[i];\n\n        if (!isUndefined(value)) {\n            return value;\n        }\n    }\n\n    return values[length];\n}\n\nexport function groupBy<T>(arr: T[], func: (el: T, index: number, arr: T[]) => number | string) {\n    const group: T[][] = [];\n    const groupMap: IObject<T[]> = {};\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n\n        if (!groupMap[groupKey]) {\n            groupMap[groupKey] = [];\n            group.push(groupMap[groupKey]);\n        }\n        groupMap[groupKey].push(el);\n    });\n    return group;\n}\n\nexport function flat<T>(arr: T[][]): T[] {\n    return arr.reduce((prev, cur) => {\n        return prev.concat(cur);\n    }, []);\n}\n\nexport function equalSign(a: number, b: number) {\n    return (a >= 0 && b >= 0) || (a < 0 && b < 0);\n}\n\nexport function maxOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(b) - Math.abs(a));\n\n    return args[0];\n}\nexport function miinOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(a) - Math.abs(b));\n\n    return args[0];\n}\n\nexport function convertDragDist(state: MoveableManagerState, e: any) {\n    const {\n        is3d,\n        rootMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n    [\n        e.distX, e.distY,\n    ] = caculate(\n        invert(rootMatrix, n),\n        convertPositionMatrix([e.distX, e.distY], n),\n        n,\n    );\n\n    return e;\n}\n","import MoveableManager from \"../MoveableManager\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport { IObject } from \"@daybrush/utils\";\n\nexport function triggerRenderStart(\n    moveable: MoveableManager<any>,\n    isGroup: boolean,\n    e: any,\n) {\n    const params: IObject<any> = fillParams(moveable, e, {\n        isPinch: !!e.isPinch,\n    });\n\n    const eventAffix = isGroup ? \"Group\" : \"\";\n\n    if (isGroup) {\n        params.targets = moveable.props.targets;\n    }\n    triggerEvent(moveable, `onRender${eventAffix}Start`, params);\n}\nexport function triggerRender(\n    moveable: MoveableManager<any>,\n    isGroup: boolean,\n    e: any,\n) {\n    const params: IObject<any> = fillParams(moveable, e, {\n        isPinch: !!e.isPinch,\n    });\n\n    const eventAffix = isGroup ? \"Group\" : \"\";\n\n    if (isGroup) {\n        params.targets = moveable.props.targets;\n    }\n    triggerEvent(moveable, `onRender${eventAffix}`, params);\n}\nexport function triggerRenderEnd(\n    moveable: MoveableManager<any>,\n    isGroup: boolean,\n    e: any,\n) {\n    const params: IObject<any> = fillParams(moveable, e, {\n        isPinch: !!e.sPinch,\n        isDrag: e.isDrag,\n    });\n\n    const eventAffix = isGroup ? \"Group\" : \"\";\n\n    if (isGroup) {\n        params.targets = moveable.props.targets;\n    }\n    triggerEvent(moveable, `onRender${eventAffix}End`, params);\n}\n","import MoveableManager from \"./MoveableManager\";\nimport Dragger from \"@daybrush/drag\";\nimport { Able } from \"./types\";\nimport { IObject } from \"@daybrush/utils\";\nimport { triggerRenderStart, triggerRenderEnd, triggerRender } from \"./ables/triggerRender\";\nimport MoveableGroup from \"./MoveableGroup\";\nimport { convertDragDist } from \"./utils\";\n\nexport function triggerAble<T extends IObject<any>>(\n    moveable: MoveableManager<any>,\n    ableType: string,\n    eventOperation: string,\n    eventAffix: string,\n    eventType: any,\n    e: any,\n    isReqeust?: boolean,\n) {\n    const isStart = eventType === \"Start\";\n\n    if (isStart && eventAffix.indexOf(\"Control\") > -1 && !e.isRequest && moveable.areaElement === e.inputEvent.target) {\n        return false;\n    }\n    const eventName = `${eventOperation}${eventAffix}${eventType}`;\n    const conditionName = `${eventOperation}${eventAffix}Condition`;\n    const isEnd = eventType === \"End\";\n    const isAfter = eventType.indexOf(\"After\") > -1;\n\n    if (isStart) {\n        moveable.updateRect(eventType, true, false);\n    }\n    if (eventType === \"\" && !isAfter) {\n       convertDragDist(moveable.state, e);\n    }\n    const isGroup = eventAffix.indexOf(\"Group\") > -1;\n    const ables: Array<Able<T>> = (moveable as any)[ableType];\n    const events = ables.filter((able: any) => able[eventName]);\n    const results = events.filter((able: any) => {\n        const condition = isStart && able[conditionName];\n\n        if (!condition || condition(e, moveable)) {\n            return able[eventName](moveable, e);\n        }\n        return false;\n    });\n    const isUpdate = results.length;\n\n    if (isStart) {\n        if (events.length && !isUpdate) {\n            moveable.state.dragger = null;\n\n            if ((moveable as MoveableGroup).moveables) {\n                (moveable as MoveableGroup).moveables.forEach(childeMoveable => {\n                    childeMoveable.state.dragger = null;\n                });\n            }\n            return false;\n        }\n        triggerRenderStart(moveable, isGroup, e);\n    } else if (isEnd) {\n        triggerRenderEnd(moveable, isGroup, e);\n    } else if (isUpdate) {\n        triggerRender(moveable, isGroup, e);\n    }\n    if (isEnd) {\n        moveable.state.dragger = null;\n    }\n    if (!isStart && isUpdate) {\n        if (results.some(able => able.updateRect) && !isGroup) {\n            moveable.updateRect(eventType, false, false);\n        } else {\n            moveable.updateRect(eventType, true, false);\n        }\n    }\n    if (((!isStart && isUpdate) || (isEnd && !isUpdate)) && !isReqeust) {\n        moveable.forceUpdate();\n    }\n    if (!isStart && !isEnd && !isAfter && isUpdate) {\n        triggerAble(moveable, ableType, eventOperation, eventAffix, eventType + \"After\", e);\n    }\n}\nexport function getAbleDragger<T>(\n    moveable: MoveableManager<T>,\n    target: HTMLElement | SVGElement,\n    ableType: string,\n    eventAffix: string,\n) {\n    const options: IObject<any> = {\n        container: window,\n        pinchThreshold: moveable.props.pinchThreshold,\n    };\n    [\"drag\", \"pinch\"].forEach(eventOperation => {\n        [\"Start\", \"\", \"End\"].forEach(eventType => {\n            options[`${eventOperation}${eventType.toLowerCase()}`]\n                = (e: any) => triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e);\n        });\n    });\n\n    return new Dragger(target!, options);\n}\n","import * as React from \"react\";\nimport { MOVEABLE_CSS, PREFIX } from \"./consts\";\nimport {\n    prefix, getLineStyle,\n    getTargetInfo,\n    unset,\n    createIdentityMatrix3,\n    isInside,\n    getAbsolutePosesByState,\n    getRect,\n    filterAbles,\n    equals,\n    resetClientRect,\n    throttle,\n    flat,\n} from \"./utils\";\nimport styled from \"react-css-styled\";\nimport Dragger from \"@daybrush/drag\";\nimport { ref } from \"framework-utils\";\nimport { MoveableManagerProps, MoveableManagerState, Able, RectInfo, Requester } from \"./types\";\nimport { getAbleDragger, triggerAble } from \"./getAbleDragger\";\nimport CustomDragger from \"./CustomDragger\";\nimport { getRad, plus } from \"@moveable/matrix\";\nimport { IObject } from \"@daybrush/utils\";\n\nconst ControlBoxElement = styled(\"div\", MOVEABLE_CSS);\n\nfunction renderLine(direction: string, pos1: number[], pos2: number[], index: number) {\n    const rad = getRad(pos1, pos2);\n    const rotation = direction ? (throttle(rad / Math.PI * 180, 15)) % 180 : -1;\n\n    return <div key={`line${index}`} className={prefix(\"line\", \"direction\", direction)}\n        data-rotation={rotation}\n        data-direction={direction} style={getLineStyle(pos1, pos2, rad)}></div>;\n}\nexport default class MoveableManager<T = {}, U = {}>\n    extends React.PureComponent<MoveableManagerProps<T>, MoveableManagerState<U>> {\n    public static defaultProps: Required<MoveableManagerProps> = {\n        target: null,\n        container: null,\n        rootContainer: null,\n        origin: true,\n        edge: false,\n        parentMoveable: null,\n        parentPosition: null,\n        ables: [],\n        pinchThreshold: 20,\n        dragArea: false,\n        transformOrigin: \"\",\n        className: \"\",\n        zoom: 1,\n    };\n    public state: MoveableManagerState<U> = {\n        container: null,\n        target: null,\n        beforeMatrix: createIdentityMatrix3(),\n        matrix: createIdentityMatrix3(),\n        targetMatrix: createIdentityMatrix3(),\n        targetTransform: \"\",\n        is3d: false,\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0,\n        transformOrigin: [0, 0],\n        direction: 1,\n        beforeDirection: 1,\n        beforeOrigin: [0, 0],\n        origin: [0, 0],\n        pos1: [0, 0],\n        pos2: [0, 0],\n        pos3: [0, 0],\n        pos4: [0, 0],\n        targetClientRect: resetClientRect(),\n        containerClientRect: resetClientRect(),\n        rotation: 0,\n    } as any;\n    public targetAbles: Array<Able<T>> = [];\n    public controlAbles: Array<Able<T>> = [];\n    public controlBox!: typeof ControlBoxElement extends new (...args: any[]) => infer K ? K : never;\n    public areaElement!: HTMLElement;\n    public targetDragger!: Dragger;\n    public controlDragger!: Dragger;\n    public customDragger!: CustomDragger;\n\n    public render() {\n        const props = this.props;\n        const { edge, parentPosition, className, target: propsTarget, zoom } = this.props;\n\n        this.checkUpdate();\n\n        const { left: parentLeft, top: parentTop } = parentPosition! || { left: 0, top: 0 };\n        const { left, top, pos1, pos2, pos3, pos4, target: stateTarget, direction } = this.state;\n        const groupTargets = (props as any).targets;\n        const isDisplay = ((groupTargets && groupTargets.length) || propsTarget) && stateTarget;\n\n        return (\n            <ControlBoxElement\n                ref={ref(this, \"controlBox\")}\n                className={`${prefix(\"control-box\", direction === -1 ? \"reverse\" : \"\")} ${className}`} style={{\n                    \"position\": \"absolute\",\n                    \"display\": isDisplay ? \"block\" : \"none\",\n                    \"transform\": `translate(${left - parentLeft}px, ${top - parentTop}px) translateZ(50px)`,\n                    \"--zoom\": zoom,\n                    \"--zoompx\": `${zoom}px`,\n                }}>\n                {this.renderAbles()}\n                {renderLine(edge ? \"n\" : \"\", pos1, pos2, 0)}\n                {renderLine(edge ? \"e\" : \"\", pos2, pos4, 1)}\n                {renderLine(edge ? \"w\" : \"\", pos1, pos3, 2)}\n                {renderLine(edge ? \"s\" : \"\", pos3, pos4, 3)}\n            </ControlBoxElement>\n        );\n    }\n    public componentDidMount() {\n        this.controlBox.getElement();\n        const props = this.props;\n        const { parentMoveable, container } = props;\n\n        this.updateEvent(props);\n        if (!container && !parentMoveable) {\n            this.updateRect(\"End\", false, true);\n        }\n    }\n    public componentDidUpdate(prevProps: MoveableManagerProps<T>) {\n        this.updateEvent(prevProps);\n    }\n    public componentWillUnmount() {\n        unset(this, \"targetDragger\");\n        unset(this, \"controlDragger\");\n    }\n    public getContainer(): HTMLElement | SVGElement {\n        const { parentMoveable, container } = this.props;\n\n        return container!\n            || (parentMoveable && parentMoveable.getContainer())\n            || this.controlBox.getElement().parentElement!;\n    }\n    public isMoveableElement(target: HTMLElement | SVGElement) {\n        return target && ((target.getAttribute(\"class\") || \"\").indexOf(PREFIX) > -1);\n    }\n    public dragStart(e: MouseEvent | TouchEvent) {\n        if (this.targetDragger) {\n            this.targetDragger.onDragStart(e);\n        }\n    }\n    public isInside(clientX: number, clientY: number) {\n        const { pos1, pos2, pos3, pos4, target, targetClientRect } = this.state;\n\n        if (!target) {\n            return false;\n        }\n        const { left, top } = targetClientRect;\n        const pos = [clientX - left, clientY - top];\n\n        return isInside(pos, pos1, pos2, pos4, pos3);\n    }\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        const props = this.props;\n        const parentMoveable = props.parentMoveable;\n        const state = this.state;\n        const target = (state.target || this.props.target) as HTMLElement | SVGElement;\n        const container = this.getContainer();\n        const rootContainer = parentMoveable\n            ? parentMoveable.props.rootContainer\n            : props.rootContainer;\n        this.updateState(\n            getTargetInfo(target, container, container, rootContainer || container,\n                isTarget ? state : undefined),\n            parentMoveable ? false : isSetState,\n        );\n    }\n    public updateEvent(prevProps: MoveableManagerProps<T>) {\n        const controlBoxElement = this.controlBox.getElement();\n        const hasTargetAble = this.targetAbles.length;\n        const hasControlAble = this.controlAbles.length;\n        const target = this.props.target;\n        const prevTarget = prevProps.target;\n        const dragArea = this.props.dragArea;\n        const prevDragArea = prevProps.dragArea;\n        const isTargetChanged = !dragArea && prevTarget !== target;\n        const isUnset = (!hasTargetAble && this.targetDragger)\n            || isTargetChanged\n            || prevDragArea !== dragArea;\n\n        if (isUnset) {\n            unset(this, \"targetDragger\");\n            this.updateState({ dragger: null });\n        }\n        if (!hasControlAble) {\n            unset(this, \"controlDragger\");\n        }\n\n        if (target && hasTargetAble && !this.targetDragger) {\n            if (dragArea) {\n                this.targetDragger = getAbleDragger(this, this.areaElement!, \"targetAbles\", \"\");\n            } else {\n                this.targetDragger = getAbleDragger(this, target!, \"targetAbles\", \"\");\n            }\n        }\n        if (!this.controlDragger && hasControlAble) {\n            this.controlDragger = getAbleDragger(this, controlBoxElement, \"controlAbles\", \"Control\");\n        }\n        if (isUnset) {\n            this.unsetAbles();\n        }\n    }\n    public isDragging() {\n        return (this.targetDragger ? this.targetDragger.isFlag() : false)\n        || (this.controlDragger ? this.controlDragger.isFlag() : false);\n    }\n    public updateTarget(type?: \"Start\" | \"\" | \"End\") {\n        this.updateRect(type, true);\n    }\n    public getRect(): RectInfo {\n        const state = this.state;\n        const poses = getAbsolutePosesByState(this.state);\n        const [pos1, pos2, pos3, pos4] = poses;\n        const rect = getRect(poses);\n        const {\n            width: offsetWidth,\n            height: offsetHeight,\n        } = state;\n        const {\n            width,\n            height,\n            left,\n            top,\n        } = rect;\n        const statePos = [state.left, state.top];\n        const origin = plus(statePos, state.origin);\n        const beforeOrigin = plus(statePos, state.beforeOrigin);\n        return {\n            width,\n            height,\n            left,\n            top,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            offsetWidth,\n            offsetHeight,\n            beforeOrigin,\n            origin,\n        };\n    }\n    public request(ableName: string, param: IObject<any> = {}, isInstant?: boolean): Requester {\n        const { ables, groupable } = this.props as any;\n        const requsetAble: Able = ables!.filter((able: Able) => able.name === ableName)[0];\n\n        if (this.isDragging() || !requsetAble || !requsetAble.request) {\n            return {\n                request() {\n                    return this;\n                },\n                requestEnd() {\n                    return this;\n                },\n            };\n        }\n        const self = this;\n        const ableRequester = requsetAble.request(this);\n\n        const ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\n        const eventAffix  = `${(groupable ? \"Group\" : \"\")}${ableRequester.isControl ? \"Control\" : \"\"}`;\n\n        const requester = {\n            request(ableParam: IObject<any>) {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"\", {\n                    ...ableRequester.request(ableParam),\n                    isRequest: true,\n                }, isInstant);\n                return this;\n            },\n            requestEnd() {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"End\", {\n                    ...ableRequester.requestEnd(),\n                    isRequest: true,\n                });\n                return this;\n            },\n        };\n\n        triggerAble(self, ableType, \"drag\", eventAffix, \"Start\", {\n            ...ableRequester.requestStart(param),\n            isRequest: true,\n        }, isInstant);\n\n        return param.isInstant ? requester.request(param).requestEnd() : requester;\n    }\n    public checkUpdate() {\n        const { target, container, parentMoveable } = this.props;\n        const {\n            target: stateTarget,\n            container: stateContainer,\n        } = this.state;\n\n        if (!stateTarget && !target) {\n            return;\n        }\n        this.updateAbles();\n\n        const isChanged = !equals(stateTarget, target) || !equals(stateContainer, container);\n\n        if (!isChanged) {\n            return;\n        }\n\n        this.updateState({ target, container });\n\n        if (!parentMoveable && (container || this.controlBox)) {\n            this.updateRect(\"End\", false, false);\n        }\n    }\n    public triggerEvent(name: string, e: any): any {\n        const callback = (this.props as any)[name];\n\n        return callback && callback(e);\n    }\n    protected unsetAbles() {\n        if (this.targetAbles.filter(able => {\n            if (able.unset) {\n                able.unset(this);\n                return true;\n            }\n            return false;\n        }).length) {\n            this.forceUpdate();\n        }\n    }\n    protected updateAbles(\n        ables: Able[] = this.props.ables!,\n        eventAffix: string = \"\",\n    ) {\n        const props = this.props as any;\n\n        const enabledAbles = ables!.filter(able => able && props[able.name]);\n\n        const dragStart = `drag${eventAffix}Start` as \"dragStart\";\n        const pinchStart = `pinch${eventAffix}Start` as \"pinchStart\";\n        const dragControlStart = `drag${eventAffix}ControlStart` as \"dragControlStart\";\n\n        const targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart]);\n        const controlAbles = filterAbles(enabledAbles, [dragControlStart]);\n\n        this.targetAbles = targetAbles;\n        this.controlAbles = controlAbles;\n    }\n    protected updateState(nextState: any, isSetState?: boolean) {\n        if (isSetState) {\n            this.setState(nextState);\n        } else {\n            const state = this.state as any;\n\n            for (const name in nextState) {\n                state[name] = nextState[name];\n            }\n        }\n    }\n    protected renderAbles() {\n        const props = this.props as any;\n        const ables: Able[] = props.ables!;\n        const enabledAbles = ables.filter(able => able && props[able.name]);\n        const Renderer = { createElement: React.createElement };\n\n        return flat(filterAbles(enabledAbles, [\"render\"]).map(({ render }) => {\n            return render!(this, Renderer);\n        }));\n    }\n}\n","import { Client } from \"@daybrush/drag\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport MoveableManager from \"../MoveableManager\";\nimport { PinchableProps, Able, SnappableState, OnPinchStart, OnPinch, OnPinchEnd } from \"../types\";\nimport MoveableGroup from \"../MoveableGroup\";\nimport { getRad } from \"@moveable/matrix\";\n\nfunction getRotatiion(touches: Client[]) {\n    return getRad([\n        touches[0].clientX,\n        touches[0].clientY,\n    ], [\n        touches[1].clientX,\n        touches[1].clientY,\n    ]) / Math.PI * 180;\n}\n\nexport default {\n    name: \"pinchable\",\n    updateRect: true,\n    props: {\n        pinchable: Boolean,\n        pinchThreshold: Number,\n    },\n    pinchStart(\n        moveable: MoveableManager<PinchableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, clientX, clientY, touches, inputEvent, targets } = e;\n        const { pinchable, ables } = moveable.props;\n\n        if (!pinchable) {\n            return false;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}Start` as \"onPinchStart\";\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlStart` as \"dragControlStart\";\n\n        const pinchAbles = (pinchable === true ? moveable.controlAbles : ables!.filter(able => {\n            return pinchable.indexOf(able.name as any) > -1;\n        })).filter(able => able.canPinch && able[controlEventName]);\n\n        const params = fillParams<OnPinchStart>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const result = triggerEvent(moveable, eventName, params);\n\n        datas.isPinch = result !== false;\n        datas.ables = pinchAbles;\n\n        const isPinch = datas.isPinch;\n\n        if (!isPinch) {\n            return false;\n        }\n        const parentRotate = getRotatiion(touches);\n\n        pinchAbles.forEach(able => {\n            datas[able.name + \"Datas\"] = {};\n            const ableEvent: any = {\n                datas: datas[able.name + \"Datas\"],\n                clientX,\n                clientY,\n                inputEvent,\n                parentRotate,\n                pinchFlag: true,\n            };\n            able[controlEventName]!(moveable, ableEvent);\n        });\n\n        moveable.state.snapRenderInfo = {\n            direction: [0, 0],\n        };\n        return isPinch;\n    },\n    pinch(\n        moveable: MoveableManager<PinchableProps>,\n        e: any,\n    ) {\n        const { datas, clientX, clientY, scale: pinchScale, distance, touches, inputEvent, targets } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const parentRotate = getRotatiion(touches);\n        const parentDistance = distance * (1 - 1 / pinchScale);\n        const params = fillParams<OnPinch>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}` as \"onPinch\";\n        triggerEvent(moveable, eventName, params);\n\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}Control` as \"dragControl\";\n\n        ables.forEach(able => {\n            able[controlEventName]!(moveable, {\n                clientX,\n                clientY,\n                datas: datas[able.name + \"Datas\"],\n                inputEvent,\n                parentDistance,\n                parentRotate,\n                pinchFlag: true,\n            } as any);\n        });\n        return params;\n    },\n    pinchEnd(\n        moveable: MoveableManager<PinchableProps>,\n        e: any,\n    ) {\n        const { datas, clientX, clientY, isPinch, inputEvent, targets } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}End` as \"onPinchEnd\";\n\n        const params = fillParams<OnPinchEnd>(moveable, e, { isDrag: isPinch }) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        triggerEvent(moveable, eventName, params);\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlEnd` as \"dragControlEnd\";\n\n        ables.forEach(able => {\n            able[controlEventName]!(moveable, {\n                clientX,\n                clientY,\n                isDrag: isPinch,\n                datas: datas[able.name + \"Datas\"],\n                inputEvent,\n                pinchFlag: true,\n            } as any);\n        });\n        return isPinch;\n    },\n    pinchGroupStart(moveable: MoveableGroup, e: any) {\n        return this.pinchStart(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroup(moveable: MoveableGroup, e: any) {\n        return this.pinch(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroupEnd(moveable: MoveableGroup, e: any) {\n        return this.pinchEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n};\n","import MoveableGroup from \"./MoveableGroup\";\nimport { Able } from \"./types\";\nimport MoveableManager from \"./MoveableManager\";\nimport { IObject, isFunction } from \"@daybrush/utils\";\n\nexport function triggerChildAble<T extends Able>(\n    moveable: MoveableGroup,\n    able: T,\n    type: keyof T & string,\n    datas: IObject<any>,\n    eachEvent: ((movebale: MoveableManager, datas: IObject<any>) => any) | IObject<any>,\n    callback?: (moveable: MoveableManager<any>, datas: IObject<any>, result: any, index: number) => any,\n) {\n    const name = able.name!;\n    const ableDatas = datas[name] || (datas[name] = []);\n    const isEnd = !!type.match(/End$/g);\n    const childs = moveable.moveables.map((child, i) => {\n        const childDatas = ableDatas[i] || (ableDatas[i] = {});\n\n        const childEvent = isFunction(eachEvent) ? eachEvent(child, childDatas) : eachEvent;\n        const result = (able as any)[type]!(child,  { ...childEvent, datas: childDatas, parentFlag: true });\n\n        result && callback && callback(child, childDatas, result, i);\n\n        if (isEnd) {\n            child.state.dragger = null;\n        }\n        return result;\n    });\n\n    return childs;\n}\n","import {\n    invert, caculate, minus, plus,\n    convertPositionMatrix, average,\n    createScaleMatrix, multiply,\n} from \"@moveable/matrix\";\nimport MoveableManager from \"./MoveableManager\";\nimport { caculatePoses, getAbsoluteMatrix, getAbsolutePosesByState } from \"./utils\";\nimport { splitUnit } from \"@daybrush/utils\";\nimport { MoveableManagerState, GroupableProps, ResizableProps } from \"./types\";\n\nexport function setDragStart(moveable: MoveableManager<any>, { datas }: any) {\n    const {\n        matrix,\n        beforeMatrix,\n        is3d,\n        left,\n        top,\n        origin,\n        offsetMatrix,\n        targetMatrix,\n        transformOrigin,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n\n    datas.is3d = is3d;\n    datas.matrix = matrix;\n    datas.targetMatrix = targetMatrix;\n    datas.beforeMatrix = beforeMatrix;\n    datas.offsetMatrix = offsetMatrix;\n    datas.transformOrigin = transformOrigin;\n    datas.inverseMatrix = invert(matrix, n);\n    datas.inverseBeforeMatrix = invert(beforeMatrix, n);\n    datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\n    datas.startDragBeforeDist = caculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\n    datas.startDragDist = caculate(datas.inverseMatrix, datas.absoluteOrigin, n);\n}\nexport function getDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        inverseBeforeMatrix,\n        inverseMatrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        caculate(\n            isBefore ? inverseBeforeMatrix : inverseMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        isBefore ? startDragBeforeDist : startDragDist,\n    );\n}\nexport function getInverseDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        beforeMatrix,\n        matrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        caculate(\n            isBefore ? beforeMatrix : matrix,\n            plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]),\n            n,\n        ),\n        absoluteOrigin,\n    );\n}\nexport function caculateTransformOrigin(\n    transformOrigin: string[],\n    width: number,\n    height: number,\n    prevWidth: number = width,\n    prevHeight: number = height,\n    prevOrigin: number[] = [0, 0],\n) {\n\n    if (!transformOrigin) {\n        return prevOrigin;\n    }\n    return transformOrigin.map((pos, i) => {\n        const { value, unit } = splitUnit(pos);\n\n        const prevSize = (i ? prevHeight : prevWidth);\n        const size = (i ? height : width);\n        if (pos === \"%\" || isNaN(value)) {\n            // no value but %\n\n            const measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\n\n            return size * measureRatio;\n        } else if (unit !== \"%\") {\n            return value;\n        }\n        return size * value / 100;\n    });\n}\nexport function getPosIndexesByDirection(direction: number[]) {\n    const indexes: number[] = [];\n\n    if (direction[1] >= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(3);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(2);\n        }\n    }\n    if (direction[1] <= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(1);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(0);\n        }\n    }\n    return indexes;\n}\nexport function getPosesByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    return getPosIndexesByDirection(direction).map(index => poses[index]);\n}\nexport function getPosByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    const nextPoses = getPosesByDirection(poses, direction);\n\n    return [\n        average(...nextPoses.map(pos => pos[0])),\n        average(...nextPoses.map(pos => pos[1])),\n    ];\n}\nexport function getPosByReverseDirection(\n    [pos1, pos2, pos3, pos4]: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos4)       [0, -1](pos3,pos4)       [1, -1](pos3)\n    [-1, 0](pos2, pos4)                           [1, 0](pos3, pos1)\n    [-1, 1](pos2)        [0, 1](pos1, pos2)       [1, 1](pos1)\n    */\n\n    return getPosByDirection([pos4, pos3, pos2, pos1], direction);\n}\nfunction getStartPos(poses: number[][], direction: number[]) {\n    const [\n        startPos1,\n        startPos2,\n        startPos3,\n        startPos4,\n    ] = poses;\n    return getPosByReverseDirection([startPos1, startPos2, startPos3, startPos4], direction);\n}\nfunction getDist(\n    startPos: number[],\n    matrix: number[],\n    width: number,\n    height: number,\n    n: number,\n    direction: number[],\n) {\n    const poses = caculatePoses(matrix, width, height, n);\n    const pos = getPosByReverseDirection(poses, direction);\n    const distX = startPos[0] - pos[0];\n    const distY = startPos[1] - pos[1];\n\n    return [distX, distY];\n}\nexport function getNextMatrix(\n    offsetMatrix: number[],\n    targetMatrix: number[],\n    origin: number[],\n    n: number,\n) {\n    return multiply(\n        offsetMatrix,\n        getAbsoluteMatrix(targetMatrix, n, origin),\n        n,\n    );\n}\nexport function scaleMatrix(\n    state: MoveableManagerState<any>,\n    scale: number[],\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n        targetMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    return getNextMatrix(\n        offsetMatrix,\n        multiply(targetMatrix, createScaleMatrix(scale, n), n),\n        transformOrigin,\n        n,\n    );\n}\nexport function getScaleDist(\n    moveable: MoveableManager<any>,\n    scale: number[],\n    direction: number[],\n    dragClient?: number[],\n) {\n    const state = moveable.state;\n    const {\n        is3d,\n        left,\n        top,\n        width,\n        height,\n    } = state;\n\n    const n = is3d ? 4 : 3;\n    const groupable = moveable.props.groupable;\n    const nextMatrix = scaleMatrix(moveable.state, scale);\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n\n    const startPos = dragClient ? dragClient : getStartPos(getAbsolutePosesByState(moveable.state), direction);\n\n    const dist = getDist(\n        startPos, nextMatrix, width, height, n,\n        direction,\n    );\n\n    return minus(dist, [groupLeft, groupTop]);\n}\n\nexport function getResizeDist(\n    moveable: MoveableManager<GroupableProps>,\n    width: number,\n    height: number,\n    // prevWidth: number,\n    // prevHeight: number,\n    direction: number[],\n    fixedPosition: number[],\n    transformOrigin: string[],\n) {\n    const {\n        groupable,\n    } = moveable.props;\n    const {\n        transformOrigin: prevOrigin,\n        targetMatrix,\n        offsetMatrix,\n        is3d,\n        width: prevWidth,\n        height: prevHeight,\n        left,\n        top,\n    } = moveable.state;\n\n    const n = is3d ? 4 : 3;\n    const nextOrigin = caculateTransformOrigin(\n        transformOrigin!,\n        width,\n        height,\n        prevWidth,\n        prevHeight,\n        prevOrigin,\n    );\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\n    const dist = getDist(fixedPosition, nextMatrix, width, height, n, direction);\n\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getStartDirection(\n    moveable: MoveableManager<ResizableProps>,\n    direction: number[],\n) {\n    if (!direction[0] && !direction[1]) {\n        return [0, 0];\n    }\n    const {\n        baseDirection = [-1, -1],\n    } = moveable.props;\n    return [\n        direction[0] ? direction[0] : baseDirection[0] * -1,\n        direction[1] ? direction[1] : baseDirection[1] * -1,\n    ];\n}\nexport function getAbsoluteFixedPosition(\n    moveable: MoveableManager<ResizableProps>,\n    direction: number[],\n) {\n    return getStartPos(getAbsolutePosesByState(moveable.state), direction);\n}\n","import { prefix } from \"../utils\";\nimport { hasClass } from \"@daybrush/utils\";\n\nexport function directionCondition(e: any) {\n    if (e.isRequest) {\n        return e.parentDirection!!;\n    }\n    return hasClass(e.inputEvent.target, prefix(\"direction\"));\n}\n","import {\n    SnapInfo, SnappableProps, SnappableState,\n    Guideline, ResizableProps, ScalableProps, SnapOffsetInfo\n} from \"../../types\";\nimport MoveableManager from \"../../MoveableManager\";\nimport { selectValue, throttle } from \"../../utils\";\nimport { getPosByDirection, getPosesByDirection } from \"../../DraggerUtils\";\nimport { TINY_NUM } from \"../../consts\";\nimport { minus } from \"@moveable/matrix\";\n\nexport function getTotalGuidelines(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n) {\n    const {\n        guidelines,\n        containerClientRect: {\n            scrollHeight: containerHeight,\n            scrollWidth: containerWidth,\n        },\n    } = moveable.state;\n    const props = moveable.props;\n    const {\n        snapHorizontal = true,\n        snapVertical = true,\n        verticalGuidelines,\n        horizontalGuidelines,\n    } = props;\n\n    const totalGuidelines = [...guidelines];\n\n    if (snapHorizontal && horizontalGuidelines) {\n        horizontalGuidelines!.forEach(pos => {\n            totalGuidelines.push({ type: \"horizontal\", pos: [0, throttle(pos, 0.1)], size: containerWidth });\n        });\n    }\n    if (snapVertical && verticalGuidelines) {\n        verticalGuidelines!.forEach(pos => {\n            totalGuidelines.push({ type: \"vertical\", pos: [throttle(pos, 0.1), 0], size: containerHeight });\n        });\n    }\n    return totalGuidelines;\n}\nexport function checkSnapPoses(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n    posesX: number[],\n    posesY: number[],\n    snapCenter?: boolean,\n    customSnapThreshold?: number,\n) {\n    const totalGuidelines = getTotalGuidelines(moveable);\n    const props = moveable.props;\n    const {\n        snapElement = true,\n    } = props;\n    const snapThreshold = selectValue<number>(customSnapThreshold, props.snapThreshold, 5);\n\n    return {\n        vertical: checkSnap(\n            totalGuidelines,\n            \"vertical\", posesX, snapThreshold,\n            snapCenter!,\n            snapElement,\n        ),\n        horizontal: checkSnap(\n            totalGuidelines,\n            \"horizontal\", posesY, snapThreshold,\n            snapCenter!,\n            snapElement,\n        ),\n    };\n}\n\nexport function checkSnapKeepRatio(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n): {\n    vertical: SnapOffsetInfo,\n    horizontal: SnapOffsetInfo,\n} {\n    const [endX, endY] = endPos;\n    const [startX, startY] = startPos;\n    const [dx, dy] = minus(endPos, startPos);\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    const verticalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    }\n    const {\n        vertical: verticalSnapInfo,\n        horizontal: horizontalSnapInfo,\n    } = checkSnapPoses(moveable, dx ? [endX] : [], dy ? [endY] : []);\n\n    verticalSnapInfo.posInfos.filter(({ pos }) => {\n        return isRight ? pos >= startX : pos <= startX;\n    });\n    horizontalSnapInfo.posInfos.filter(({ pos }) => {\n        return isBottom ? pos >= startY : pos <= startY;\n    });\n    verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\n    horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\n\n    const {\n        isSnap: isVerticalSnap,\n        guideline: verticalGuideline,\n    } = getNearestSnapGuidelineInfo(verticalSnapInfo);\n    const {\n        isSnap: isHorizontalSnap,\n        guideline: horizontalGuideline,\n    } = getNearestSnapGuidelineInfo(horizontalSnapInfo);\n    const horizontalPos = isHorizontalSnap ? horizontalGuideline!.pos[1] : 0;\n    const verticalPos = isVerticalSnap ? verticalGuideline!.pos[0] : 0;\n\n    if (dx === 0) {\n        if (isHorizontalSnap) {\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = horizontalGuideline!.pos[1];\n            horizontalInfo.offset = endY - horizontalInfo.pos;\n        }\n    } else if (dy === 0) {\n        if (isVerticalSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = verticalPos;\n            verticalInfo.offset = endX - verticalPos;\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isSnap = false;\n\n        if (isVerticalSnap) {\n            x = verticalPos;\n            y = a * x + b;\n            isSnap = true;\n        } else if (isHorizontalSnap) {\n            y = horizontalPos;\n            x = (y - b) / a;\n            isSnap = true;\n        }\n        if (isSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\n\nexport function checkSnaps(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n    rect: {\n        left?: number,\n        top?: number,\n        bottom?: number,\n        right?: number,\n        center?: number,\n        middle?: number,\n    },\n    isCenter: boolean,\n    customSnapThreshold?: number,\n) {\n    const snapCenter = moveable.props.snapCenter;\n    const isSnapCenter = snapCenter! && isCenter;\n\n    let verticalNames: Array<\"left\" | \"center\" | \"right\"> = [\"left\", \"right\"];\n    let horizontalNames: Array<\"top\" | \"middle\" | \"bottom\"> = [\"top\", \"bottom\"];\n\n    if (isSnapCenter) {\n        verticalNames.push(\"center\");\n        horizontalNames.push(\"middle\");\n    }\n    verticalNames = verticalNames.filter(name => name in rect);\n    horizontalNames = horizontalNames.filter(name => name in rect);\n\n    return checkSnapPoses(\n        moveable,\n        verticalNames.map(name => rect[name]!),\n        horizontalNames.map(name => rect[name]!),\n        isSnapCenter,\n        customSnapThreshold,\n    );\n}\n\nexport function getNearestSnapGuidelineInfo(\n    snapInfo: SnapInfo,\n) {\n    const isSnap = snapInfo.isSnap;\n\n    if (!isSnap) {\n        return {\n            isSnap: false,\n            offset: 0,\n            dist: -1,\n            pos: 0,\n            guideline: null,\n        };\n    }\n    const posInfo = snapInfo.posInfos[0];\n    const guidelineInfo = posInfo!.guidelineInfos[0];\n    const offset = guidelineInfo!.offset;\n    const dist = guidelineInfo!.dist;\n    const guideline = guidelineInfo!.guideline;\n\n    return {\n        isSnap,\n        offset,\n        dist,\n        pos: posInfo!.pos,\n        guideline,\n    };\n}\n\nfunction checkSnap(\n    guidelines: Guideline[],\n    targetType: \"horizontal\" | \"vertical\",\n    targetPoses: number[],\n    snapThreshold: number,\n    snapCenter: boolean,\n    snapElement: boolean,\n): SnapInfo {\n    if (!guidelines || !guidelines.length) {\n        return {\n            isSnap: false,\n            posInfos: [],\n        };\n    }\n    const isVertical = targetType === \"vertical\";\n    const posType = isVertical ? 0 : 1;\n\n    const snapPosInfos = targetPoses.map(targetPos => {\n        const guidelineInfos = guidelines.map(guideline => {\n            const { pos } = guideline;\n            const offset = targetPos - pos[posType];\n\n            return {\n                offset,\n                dist: Math.abs(offset),\n                guideline,\n            };\n        }).filter(({ guideline, dist }) => {\n            const { type, center, element } = guideline;\n            if (\n                (!snapElement && element)\n                || (!snapCenter && center)\n                || type !== targetType\n                || dist > snapThreshold\n            ) {\n                return false;\n            }\n            return true;\n        }).sort(\n            (a, b) => a.dist - b.dist,\n        );\n\n        return {\n            pos: targetPos,\n            guidelineInfos,\n        };\n    }).filter(snapPosInfo => {\n        return snapPosInfo.guidelineInfos.length > 0;\n    }).sort((a, b) => {\n        return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\n    });\n\n    return {\n        isSnap: snapPosInfos.length > 0,\n        posInfos: snapPosInfos,\n    };\n}\n\nexport function getSnapInfosByDirection(\n    moveable: MoveableManager<SnappableProps & (ResizableProps | ScalableProps), SnappableState>,\n    poses: number[][],\n    snapDirection: number[],\n) {\n    let nextPoses = [];\n    if (snapDirection[0] && snapDirection[1]) {\n        nextPoses = [\n            snapDirection,\n            [-snapDirection[0], snapDirection[1]],\n            [snapDirection[0], -snapDirection[1]],\n        ].map(direction => getPosByDirection(poses, direction));\n    } else if (!snapDirection[0] && !snapDirection[1]) {\n        const alignPoses = [poses[0], poses[1], poses[3], poses[2], poses[0]];\n\n        for (let i = 0; i < 4; ++i) {\n            nextPoses.push(alignPoses[i]);\n            nextPoses.push([\n                (alignPoses[i][0] + alignPoses[i + 1][0]) / 2,\n                (alignPoses[i][1] + alignPoses[i + 1][1]) / 2,\n            ]);\n        }\n    } else {\n        if (moveable.props.keepRatio) {\n            nextPoses = [\n                [-1, -1],\n                [-1, 1],\n                [1, -1],\n                [1, 1],\n                snapDirection,\n            ].map(dir => getPosByDirection(poses, dir));\n        } else {\n            nextPoses = getPosesByDirection(poses, snapDirection);\n\n            if (nextPoses.length > 1) {\n                nextPoses.push([\n                    (nextPoses[0][0] + nextPoses[1][0]) / 2,\n                    (nextPoses[0][1] + nextPoses[1][1]) / 2,\n                ]);\n            }\n        }\n    }\n    return checkSnapPoses(moveable, nextPoses.map(pos => pos[0]), nextPoses.map(pos => pos[1]), true, 1);\n}\n\nexport function getNearOffsetInfo<T extends { offset: number[], isBound: boolean, isSnap: boolean, sign: number[] }>(\n    offsets: T[],\n    index: number,\n) {\n    return offsets.slice().sort((a, b) => {\n        const aSign = a.sign[index];\n        const bSign = b.sign[index];\n        const aOffset = a.offset[index];\n        const bOffset = b.offset[index];\n        const aDist = Math.abs(aOffset);\n        const bDist = Math.abs(bOffset);\n        // -1 The positions of a and b do not change.\n        // 1 The positions of a and b are reversed.\n        if (!aSign) {\n            return 1;\n        } else if (!bSign) {\n            return -1;\n        } else if (a.isBound && b.isBound) {\n            return bDist - aDist;\n        } else if (a.isBound) {\n            return -1;\n        } else if (b.isBound) {\n            return 1;\n        } else if (a.isSnap && b.isSnap) {\n            return aDist - bDist;\n        } else if (a.isSnap) {\n            return -1;\n        } else if (b.isSnap) {\n            return 1;\n        } else if (aDist < TINY_NUM) {\n            return 1;\n        } else if (bDist < TINY_NUM) {\n            return -1;\n        }\n        return aDist - bDist;\n    })[0];\n}\n","import { maxOffset, getDistSize, throttle } from \"../../utils\";\nimport { average, rotate, getRad } from \"@moveable/matrix\";\nimport MoveableManager from \"../../MoveableManager\";\nimport { SnappableProps, DraggableProps, RotatableProps } from \"../../types\";\nimport { getDragDist, getPosByDirection, getInverseDragDist } from \"../../DraggerUtils\";\nimport { getNearOffsetInfo } from \"./snap\";\nimport { TINY_NUM } from \"../../consts\";\n\nfunction isStartLine(dot: number[], line: number[][]) {\n    // l    o     => true\n    // o    l    => false\n    const cx = average(line[0][0], line[1][0]);\n    const cy = average(line[0][1], line[1][1]);\n\n    return {\n        vertical: cx <= dot[0],\n        horizontal: cy <= dot[1],\n    };\n}\nfunction hitTestLine(\n    dot: number[],\n    [pos1, pos2]: number[][],\n) {\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    let test1: number;\n    let test2: number;\n    if (!dx) {\n        test1 = pos1[0];\n        test2 = dot[0];\n    } else if (!dy) {\n        test1 = pos1[1];\n        test2 = dot[1];\n    } else {\n        const a = dy / dx;\n\n        // y = a * (x - pos1) + pos1\n        test1 = a * (dot[0] - pos1[0]) + pos1[1];\n        test2 = dot[1];\n    }\n    return test1 - test2;\n}\nfunction isSameStartLine(dots: number[][], line: number[][], error: number = TINY_NUM) {\n    const centerSign = hitTestLine(dots[0], line) <= 0;\n\n    return dots.slice(1).every(dot => {\n        const value = hitTestLine(dot, line);\n        const sign = value <= 0;\n        return sign === centerSign || Math.abs(value) <= error;\n    });\n}\nfunction checkInnerBoundDot(\n    pos: number,\n    start: number,\n    end: number,\n    isStart: boolean,\n    threshold: number = 0,\n) {\n    if (\n        (isStart && start - threshold <= pos)\n        || (!isStart && pos <= end + threshold)\n    ) {\n        // false 402 565 602 => 37 ([0, 37])\n        // true 400 524.9712603540036 600 => 124 ([124, 0])\n        // true 400 410 600 => 10 ([10, 0])\n        return {\n            isBound: true,\n            offset: isStart ? start - pos : end - pos,\n        };\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\n\nfunction checkInnerBound(\n    moveable: MoveableManager<SnappableProps>,\n    line: number[][],\n    center: number[],\n) {\n    const bounds = moveable.props.innerBounds;\n\n    if (!bounds) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    const { left, top, width, height } = bounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n    const {\n        horizontal: isHorizontalStart,\n        vertical: isVerticalStart,\n    } = isStartLine(center, line);\n\n    if (isSameStartLine([\n        center,\n        [left, top],\n        [left + width, top],\n        [left, top + height],\n        [left + width, top + height],\n    ], line)) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n\n    // test vertical\n    const topBoundInfo = checkLineBoundCollision(line, topLine, isVerticalStart);\n    const bottomBoundInfo = checkLineBoundCollision(line, bottomLine, isVerticalStart);\n\n    // test horizontal\n    const leftBoundInfo = checkLineBoundCollision(line, leftLine, isHorizontalStart);\n    const rightBoundInfo = checkLineBoundCollision(line, rightLine, isHorizontalStart);\n\n    const isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\n    const isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\n    const isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\n    const isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\n    const verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\n    const horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\n\n    let offset = [0, 0];\n    let isBound = false;\n    let isAllBound = false;\n\n    if (Math.abs(horizontalOffset) < Math.abs(verticalOffset)) {\n        offset = [verticalOffset, 0];\n        isBound = isVerticalBound;\n        isAllBound = isAllVerticalBound;\n    } else {\n        offset = [0, horizontalOffset];\n        isBound = isHorizontalBound;\n        isAllBound = isAllHorizontalBound;\n    }\n    return {\n        isAllBound,\n        isVerticalBound,\n        isHorizontalBound,\n        isBound,\n        offset,\n    };\n}\n\nfunction checkLineBoundCollision(\n    line: number[][],\n    boundLine: number[][],\n    isStart: boolean,\n    threshold?: number,\n) {\n    const dot1 = line[0];\n    const dot2 = line[1];\n    const boundDot1 = boundLine[0];\n    const boundDot2 = boundLine[1];\n    const dy1 = dot2[1] - dot1[1];\n    const dx1 = dot2[0] - dot1[0];\n\n    const dy2 = boundDot2[1] - boundDot1[1];\n    const dx2 = boundDot2[0] - boundDot1[0];\n\n    // dx2 or dy2 is zero\n    if (!dx2) {\n        // vertical\n        if (dx1) {\n            const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\n\n            // boundDot1[1] <= y  <= boundDot2[1]\n            return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\n        }\n    } else if (!dy2) {\n        // horizontal\n\n        if (dy1) {\n            // y = a * (x - x1) + y1\n            // x = (y - y1) / a + x1\n            const a = dy1 / dx1;\n            const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\n\n            // boundDot1[0] <= x && x <= boundDot2[0]\n            return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\n        }\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\nexport function getInnerBoundInfo(\n    moveable: MoveableManager<SnappableProps>,\n    lines: number[][][],\n    center: number[],\n    datas: any,\n) {\n    return lines.map(([multiple, pos1, pos2]) => {\n        const {\n            isBound,\n            offset,\n            isVerticalBound,\n            isHorizontalBound,\n        } = checkInnerBound(moveable, [pos1, pos2], center);\n\n        const sizeOffset = getDragDist({\n            datas,\n            distX: offset[0],\n            distY: offset[1],\n        }).map((size, i) => size * (multiple[i] ?  2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound,\n            isVerticalBound,\n            isHorizontalBound,\n            isSnap: false,\n            offset: sizeOffset,\n        };\n    });\n}\n\nexport function getInnerBoundDragInfo(\n    moveable: MoveableManager<SnappableProps & DraggableProps, any>,\n    poses: number[][],\n    datas: any,\n) {\n    const lines = getCheckSnapLines(poses, [0, 0], false).map(([sign, pos1, pos2]) => {\n        return [\n            sign.map(dir => Math.abs(dir) * 2),\n            pos1,\n            pos2,\n        ];\n    });\n    const innerBoundInfo = getInnerBoundInfo(moveable, lines, getPosByDirection(poses, [0, 0]), datas);\n    const widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\n    const heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\n    let verticalOffset = 0;\n    let horizontalOffset = 0;\n    const isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\n    const isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\n\n    if (isVerticalBound || isHorizontalBound) {\n        [verticalOffset, horizontalOffset] = getInverseDragDist({\n            datas,\n            distX: -widthOffsetInfo.offset[0],\n            distY: -heightOffsetInfo.offset[1],\n        });\n    }\n\n    return {\n        vertical: {\n            isBound: isVerticalBound,\n            offset: verticalOffset,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            offset: horizontalOffset,\n        },\n    };\n}\nexport function getCheckSnapLineDirections(\n    direction: number[],\n    keepRatio: boolean,\n) {\n    const lineDirections: number[][][] = [];\n    const x = direction[0];\n    const y = direction[1];\n    if (x && y) {\n        lineDirections.push(\n            [[0, y * 2], direction, [-x, y]],\n            [[x * 2, 0], direction, [x, -y]],\n        );\n    } else if (x) {\n        // vertcal\n        lineDirections.push(\n            [[x * 2, 0], [x, 1], [x, -1]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[0, -1], [x, -1], [-x, -1]],\n                [[0, 1], [x, 1], [-x, 1]],\n            );\n        }\n    } else if (y) {\n        // horizontal\n        lineDirections.push(\n            [[0, y * 2], [1, y], [-1, y]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[-1, 0], [-1, y], [-1, -y]],\n                [[1, 0], [1, y], [1, -y]],\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        lineDirections.push(\n            [[-1, 0], [-1, -1], [-1, 1]],\n            [[1, 0], [1, -1], [1, 1]],\n            [[0, -1], [-1, -1], [1, -1]],\n            [[0, 1], [-1, 1], [1, 1]],\n        );\n    }\n\n    return lineDirections;\n}\nexport function getCheckSnapLines(\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n) {\n    return getCheckSnapLineDirections(direction, keepRatio).map(([sign, dir1, dir2]) => {\n        return [\n            sign,\n            getPosByDirection(poses, dir1),\n            getPosByDirection(poses, dir2),\n        ];\n    });\n}\n\nfunction isBoundRotate(\n    relativePoses: number[][],\n    boundDots: number[][],\n    center: number[],\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n    const dots = [\n        center,\n        ...boundDots,\n    ];\n    return [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].some((line, i) => !isSameStartLine(dots, line));\n}\nfunction getDistPointLine([pos1, pos2]: number[][]) {\n    // x = 0, y = 0\n    // d = (ax + by + c) / root(a2 + b2)\n\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return Math.abs(pos1[0]);\n    }\n    if (!dy) {\n        return Math.abs(pos1[1]);\n    }\n    // y - y1 = a(x - x1)\n    // 0 = ax -y + -a * x1 + y1\n\n    const a = dy / dx;\n\n    return Math.abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\n}\nfunction solveReverseLine([pos1, pos2]: number[][]) {\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return [pos1[0], 0];\n    }\n    if (!dy) {\n        return [0, pos1[1]];\n    }\n    const a = dy / dx;\n    // y - y1 = a (x  - x1)\n    // y = ax - a * x1 + y1\n    const b = -a * pos1[0] + pos1[1];\n    // y = ax + b = -1/a x\n    // x = -b / (a + 1 / a)\n    // y = b / (1 + 1 / a^2)\n\n    return [\n        -b / (a + 1 / a),\n        b / ((a * a) + 1),\n    ];\n}\nexport function checkRotateInnerBounds(\n    moveable: MoveableManager<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.innerBounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left,\n        top,\n        width,\n        height,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = left + width - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = top + height - origin[1];\n    const dots = [\n        [relativeLeft, relativeTop],\n        [relativeRight, relativeTop],\n        [relativeLeft, relativeBottom],\n        [relativeRight, relativeBottom],\n    ];\n    const center = getPosByDirection(nextPoses, [0, 0]);\n\n    if (!isBoundRotate(nextPoses, dots, center, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    const dotInfos = dots.map(dot => [\n        getDistSize(dot),\n        getRad([0, 0], dot),\n    ]);\n    [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].forEach(line => {\n        const lineRad = getRad([0, 0], solveReverseLine(line));\n        const lineDist = getDistPointLine(line);\n\n        result.push(...dotInfos\n            .filter(([dotDist]) => {\n                return dotDist && lineDist <= dotDist;\n            })\n            .map(([dotDist, dotRad]) => {\n                const distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\n                const nextRad1 = dotRad + distRad;\n                const nextRad2 = dotRad - distRad;\n\n                return [\n                    rad + nextRad1 - lineRad,\n                    rad + nextRad2 - lineRad,\n                ];\n            })\n            .reduce<number[]>((prev, cur) => {\n                prev.push(...cur);\n                return prev;\n            }, [])\n            .filter(nextRad => !isBoundRotate(prevPoses, dots, center, nextRad))\n            .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n    });\n    return result;\n}\n\nexport function checkInnerBoundPoses(\n    moveable: MoveableManager<SnappableProps>,\n) {\n    const innerBounds = moveable.props.innerBounds;\n\n    if (!innerBounds) {\n        return {\n            vertical: [],\n            horizontal: [],\n        };\n    }\n    const {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = moveable.getRect();\n    const poses = [pos1, pos2, pos3, pos4];\n    const center = getPosByDirection(poses, [0, 0]);\n    const { left, top, width, height } = innerBounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n\n    const lines = [\n        [pos1, pos2],\n        [pos2, pos4],\n        [pos4, pos3],\n        [pos3, pos1],\n    ];\n\n    const horizontalPoses: number[] = [];\n    const verticalPoses: number[] = [];\n\n    const boundMap = {\n        top: false,\n        bottom: false,\n        left: false,\n        right: false,\n    };\n\n    lines.forEach(line => {\n        const {\n            horizontal: isHorizontalStart,\n            vertical: isVerticalStart,\n        } = isStartLine(center, line);\n\n        // test vertical\n        const topBoundInfo = checkLineBoundCollision(line, topLine, isVerticalStart, 1);\n        const bottomBoundInfo = checkLineBoundCollision(line, bottomLine, isVerticalStart, 1);\n\n        // test horizontal\n        const leftBoundInfo = checkLineBoundCollision(line, leftLine, isHorizontalStart, 1);\n        const rightBoundInfo = checkLineBoundCollision(line, rightLine, isHorizontalStart, 1);\n\n        if (topBoundInfo.isBound && !boundMap.top) {\n            horizontalPoses.push(top);\n            boundMap.top = true;\n        }\n        if (bottomBoundInfo.isBound && !boundMap.bottom) {\n            horizontalPoses.push(top + height);\n            boundMap.bottom = true;\n        }\n        if (leftBoundInfo.isBound && !boundMap.left) {\n            verticalPoses.push(left);\n            boundMap.left = true;\n        }\n        if (rightBoundInfo.isBound && !boundMap.right) {\n            verticalPoses.push(left + width);\n            boundMap.right = true;\n        }\n    });\n\n    return {\n        horizontal: horizontalPoses,\n        vertical: verticalPoses,\n    };\n}\n","import MoveableManager from \"../../MoveableManager\";\nimport { BoundInfo, SnappableProps, BoundType, RotatableProps } from \"../../types\";\nimport { rotate, getRad, minus } from \"@moveable/matrix\";\nimport { getDistSize, throttle } from \"../../utils\";\nimport { TINY_NUM } from \"../../consts\";\n\nexport function checkBoundPoses(\n    moveable: MoveableManager<SnappableProps>,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n) {\n    const {\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = moveable.props.bounds || {};\n    const bounds = { left, top, right, bottom };\n\n    return {\n        vertical: checkBound(bounds, verticalPoses, true),\n        horizontal: checkBound(bounds, horizontalPoses, false),\n    };\n}\n\nexport function checkBoundKeepRatio(\n    moveable: MoveableManager<SnappableProps>,\n    startPos: number[],\n    endPos: number[],\n) {\n    const {\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = moveable.props.bounds || {};\n\n    const [endX, endY] = endPos;\n    const [dx, dy] = minus(endPos, startPos);\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    const verticalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    } else if (dx === 0) {\n        if (isBottom) {\n            if (bottom < endY) {\n                horizontalInfo.pos = bottom;\n                horizontalInfo.offset = endY - bottom;\n            }\n        } else {\n            if (top > endY) {\n                horizontalInfo.pos = top;\n                horizontalInfo.offset = endY - top;\n            }\n        }\n    } else if (dy === 0) {\n        if (isRight) {\n            if (right < endX) {\n                verticalInfo.pos = right;\n                verticalInfo.offset = endX - right;\n            }\n        } else {\n            if (left > endX) {\n                verticalInfo.pos = left;\n                verticalInfo.offset = endX - left;\n            }\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isBound = false;\n\n        if (isRight && right <= endX) {\n            y = a * right + b;\n            x = right;\n            isBound = true;\n        } else if (!isRight && endX <= left) {\n            y = a * left + b;\n            x = left;\n            isBound = true;\n        } else if (isBottom && bottom <= endY) {\n            y = bottom;\n            x = (y - b) / a;\n            isBound = true;\n        } else if (!isBottom &&  endY <= top) {\n            y = top;\n            x = (y - b) / a;\n            isBound = true;\n        }\n        if (isBound) {\n            verticalInfo.isBound = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isBound = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\nfunction checkBound(\n    bounds: Required<BoundType>,\n    poses: number[],\n    isVertical: boolean,\n): BoundInfo {\n    // 0   [100 - 200]  300\n    const startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\n    const endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"];\n\n    // 450\n    const minPos = Math.min(...poses);\n    const maxPos = Math.max(...poses);\n\n    if (startBoundPos + 1 > minPos) {\n        return {\n            isBound: true,\n            offset: minPos - startBoundPos,\n            pos: startBoundPos,\n        };\n    }\n    if (endBoundPos - 1 < maxPos) {\n        return {\n            isBound: true,\n            offset: maxPos - endBoundPos,\n            pos: endBoundPos,\n        };\n    }\n\n    return {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n}\nexport function isBoundRotate(\n    relativePoses: number[][],\n    boundRect: { left: number, top: number, right: number, bottom: number },\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n\n    return nextPoses.some(pos => {\n        return (pos[0] < boundRect.left && Math.abs(pos[0] - boundRect.left) > 0.1)\n            || (pos[0] > boundRect.right && Math.abs(pos[0] - boundRect.right) > 0.1)\n            || (pos[1] < boundRect.top && Math.abs(pos[1] - boundRect.top) > 0.1)\n            || (pos[1] > boundRect.bottom && Math.abs(pos[1] - boundRect.bottom) > 0.1);\n    });\n}\nexport function boundRotate(\n    vec: number[],\n    boundPos: number,\n    index: number,\n) {\n    const r = getDistSize(vec);\n    const nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\n\n    return [nextPos, -nextPos].sort((a, b) => {\n        return Math.abs(a - vec[index ? 0 : 1]) - Math.abs(b - vec[index ? 0 : 1]);\n    }).map(pos => {\n        return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\n    });\n}\n\nexport function checkRotateBounds(\n    moveable: MoveableManager<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.bounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = right - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = bottom - origin[1];\n    const boundRect = {\n        left: relativeLeft,\n        top: relativeTop,\n        right: relativeRight,\n        bottom: relativeBottom,\n    };\n\n    if (!isBoundRotate(nextPoses, boundRect, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    [\n        [relativeLeft, 0],\n        [relativeRight, 0],\n        [relativeTop, 1],\n        [relativeBottom, 1],\n    ].forEach(([boundPos, index], i) => {\n        nextPoses.forEach(nextPos => {\n            const relativeRad1 = getRad([0, 0], nextPos);\n\n            result.push(...boundRotate(nextPos, boundPos, index)\n                .map(relativeRad2 => rad + relativeRad2 - relativeRad1)\n                .filter(nextRad => !isBoundRotate(prevPoses, boundRect, nextRad))\n                .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n        });\n    });\n\n    return result;\n}\n","import MoveableManager from \"../MoveableManager\";\nimport {\n    Renderer,\n    SnappableProps,\n    SnappableState, Guideline,\n    SnapInfo, BoundInfo,\n    ScalableProps, SnapPosInfo, RotatableProps,\n    RectInfo, DraggableProps, SnapOffsetInfo,\n} from \"../types\";\nimport {\n    prefix, caculatePoses, getRect,\n    getAbsolutePosesByState, getAbsolutePoses, throttle, roundSign, getDistSize, groupBy, flat, maxOffset,\n} from \"../utils\";\nimport { IObject, find } from \"@daybrush/utils\";\nimport {\n    getPosByReverseDirection,\n    getDragDist, scaleMatrix, getPosByDirection,\n} from \"../DraggerUtils\";\nimport { minus, rotate, plus } from \"@moveable/matrix\";\nimport {\n    dragControlCondition as rotatableDragControlCondtion,\n} from \"./Rotatable\";\nimport { TINY_NUM } from \"../consts\";\nimport { directionCondition } from \"./utils\";\nimport {\n    getInnerBoundInfo, getCheckSnapLines,\n    getInnerBoundDragInfo, checkRotateInnerBounds, checkInnerBoundPoses,\n} from \"./snappable/innerBounds\";\nimport { checkBoundPoses, checkRotateBounds, checkBoundKeepRatio } from \"./snappable/bounds\";\nimport {\n    checkSnaps, getSnapInfosByDirection,\n    checkSnapPoses, getNearestSnapGuidelineInfo,\n    getNearOffsetInfo,\n    checkSnapKeepRatio,\n} from \"./snappable/snap\";\n\nexport function snapStart(moveable: MoveableManager<SnappableProps, SnappableState>) {\n    const state = moveable.state;\n    if (state.guidelines && state.guidelines.length) {\n        return;\n    }\n\n    const {\n        horizontalGuidelines = [],\n        verticalGuidelines = [],\n        elementGuidelines = [],\n        bounds,\n        snapCenter,\n    } = moveable.props;\n\n    if (!bounds && !horizontalGuidelines.length && !verticalGuidelines.length && !elementGuidelines.length) {\n        return;\n    }\n\n    const {\n        containerClientRect: {\n            top: containerTop,\n            left: containerLeft,\n        },\n        targetClientRect: {\n            top: clientTop,\n            left: clientLeft,\n        },\n    } = state;\n    const poses = getAbsolutePosesByState(state);\n    const targetLeft = Math.min(...poses.map(pos => pos[0]));\n    const targetTop = Math.min(...poses.map(pos => pos[1]));\n    const distLeft = roundSign(targetLeft - (clientLeft - containerLeft));\n    const distTop = roundSign(targetTop - (clientTop - containerTop));\n    const guidelines: Guideline[] = [];\n\n    elementGuidelines!.forEach(el => {\n        const rect = el.getBoundingClientRect();\n        const { top, left, width, height } = rect;\n        const elementTop = top - containerTop;\n        const elementBottom = elementTop + height;\n        const elementLeft = left - containerLeft;\n        const elementRight = elementLeft + width;\n        guidelines.push({\n            type: \"vertical\", element: el, pos: [\n                throttle(elementLeft + distLeft, 0.1),\n                elementTop,\n            ], size: height,\n        });\n        guidelines.push({\n            type: \"vertical\", element: el, pos: [\n                throttle(elementRight + distLeft, 0.1),\n                elementTop,\n            ], size: height,\n        });\n        guidelines.push({\n            type: \"horizontal\", element: el, pos: [\n                elementLeft,\n                throttle(elementTop + distTop, 0.1),\n            ], size: width,\n        });\n        guidelines.push({\n            type: \"horizontal\", element: el, pos: [\n                elementLeft,\n                throttle(elementBottom + distTop, 0.1),\n            ], size: width,\n        });\n\n        if (snapCenter) {\n            guidelines.push({\n                type: \"vertical\",\n                element: el,\n                pos: [\n                    throttle((elementLeft + elementRight) / 2 + distLeft, 0.1),\n                    elementTop,\n                ],\n                size: height,\n                center: true,\n            });\n            guidelines.push({\n                type: \"horizontal\",\n                element: el,\n                pos: [\n                    elementLeft,\n                    throttle((elementTop + elementBottom) / 2 + distTop, 0.1),\n                ],\n                size: width,\n                center: true,\n            });\n        }\n    });\n\n    state.guidelines = guidelines;\n    state.enableSnap = true;\n}\n\nexport function hasGuidelines(\n    moveable: MoveableManager<any, any>,\n    ableName: string,\n): moveable is MoveableManager<SnappableProps, SnappableState> {\n    const {\n        props: {\n            snappable,\n            bounds,\n            verticalGuidelines,\n            horizontalGuidelines,\n        },\n        state: {\n            guidelines,\n            enableSnap,\n        },\n    } = moveable;\n\n    if (\n        !snappable\n        || !enableSnap\n        || (ableName && snappable !== true && snappable.indexOf(ableName) < 0)\n    ) {\n        return false;\n    }\n    if (\n        bounds\n        || (guidelines && guidelines.length)\n        || (verticalGuidelines && verticalGuidelines.length)\n        || (horizontalGuidelines && horizontalGuidelines.length)\n    ) {\n        return true;\n    }\n    return false;\n}\n\nfunction solveNextOffset(\n    pos1: number[],\n    pos2: number[],\n    offset: number,\n    isVertical: boolean,\n    datas: IObject<any>,\n) {\n    const sizeOffset = solveEquation(\n        pos1,\n        pos2,\n        -offset,\n        isVertical,\n    );\n\n    if (!sizeOffset) {\n        return [0, 0];\n    }\n    const [widthOffset, heightOffset] = getDragDist({\n        datas,\n        distX: sizeOffset[0],\n        distY: sizeOffset[1],\n    });\n\n    return [widthOffset, heightOffset];\n}\nfunction getNextFixedPoses(\n    matrix: number[],\n    width: number,\n    height: number,\n    fixedPos: number[],\n    direction: number[],\n    is3d: boolean,\n) {\n    const nextPoses = caculatePoses(matrix, width, height, is3d ? 4 : 3);\n    const nextPos = getPosByReverseDirection(nextPoses, direction);\n\n    return getAbsolutePoses(nextPoses, minus(fixedPos, nextPos));\n}\nfunction getSnapBoundOffset(boundInfo: BoundInfo, snapInfo: SnapOffsetInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return snapInfo.offset;\n    }\n    return 0;\n}\nfunction getSnapBound(boundInfo: BoundInfo, snapInfo: SnapInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return getNearestSnapGuidelineInfo(snapInfo).offset;\n    }\n    return 0;\n}\nexport function checkSnapBoundsKeepRatio(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n) {\n    const {\n        horizontal: horizontalBoundInfo,\n        vertical: verticalBoundInfo,\n    } = checkBoundKeepRatio(\n        moveable,\n        startPos,\n        endPos,\n    );\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = checkSnapKeepRatio(\n        moveable,\n        startPos,\n        endPos,\n    );\n\n    const horizontalOffset = getSnapBoundOffset(horizontalBoundInfo, horizontalSnapInfo);\n    const verticalOffset = getSnapBoundOffset(verticalBoundInfo, verticalSnapInfo);\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfo.isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n        },\n        vertical: {\n            isBound: verticalBoundInfo.isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            offset: verticalOffset,\n            dist: verticalDist,\n        },\n    };\n}\nexport function checkSnapBounds(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n    poses: number[][],\n    boundPoses: number[][] = poses,\n) {\n    const {\n        horizontal: horizontalBoundInfo,\n        vertical: verticalBoundInfo,\n    } = checkBoundPoses(\n        moveable,\n        boundPoses.map(pos => pos[0]),\n        boundPoses.map(pos => pos[1]),\n    );\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = checkSnapPoses(\n        moveable,\n        poses.map(pos => pos[0]),\n        poses.map(pos => pos[1]),\n    );\n\n    const horizontalOffset = getSnapBound(horizontalBoundInfo, horizontalSnapInfo);\n    const verticalOffset = getSnapBound(verticalBoundInfo, verticalSnapInfo);\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfo.isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n        },\n        vertical: {\n            isBound: verticalBoundInfo.isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            offset: verticalOffset,\n            dist: verticalDist,\n        },\n    };\n}\nexport function checkMaxBounds(\n    moveable: MoveableManager<SnappableProps>,\n    width: number,\n    height: number,\n    poses: number[][],\n    direction: number[],\n    fixedPos: number[],\n    datas: any,\n) {\n    const fixedDirection = [-direction[0], -direction[1]];\n    const bounds = moveable.props.bounds;\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n\n    if (bounds) {\n        const directions = [\n            [direction[0], -direction[1]],\n            [-direction[0], direction[1]],\n        ];\n        const {\n            left = -Infinity,\n            top = -Infinity,\n            right = Infinity,\n            bottom = Infinity,\n        } = bounds;\n\n        directions.forEach(otherDirection => {\n            const isCheckVertical = otherDirection[0] !== fixedDirection[0];\n            const isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\n            const otherPos = getPosByDirection(poses, otherDirection);\n\n            if (isCheckHorizontal) {\n                const [\n                    ,\n                    heightOffset,\n                ] = solveNextOffset(\n                    fixedPos, otherPos,\n                    (fixedPos[1] < otherPos[1] ? bottom : top) - otherPos[1],\n                    false, datas,\n                );\n\n                if (!isNaN(heightOffset)) {\n                    maxHeight = height + heightOffset;\n                }\n            }\n            if (isCheckVertical) {\n                const [\n                    widthOffset,\n                ] = solveNextOffset(\n                    fixedPos, otherPos,\n                    (fixedPos[0] < otherPos[0] ? right : left) - otherPos[0],\n                    true, datas,\n                );\n                if (!isNaN(widthOffset)) {\n                    maxWidth = width + widthOffset;\n                }\n            }\n        });\n    }\n    return {\n        maxWidth,\n        maxHeight,\n    };\n}\nfunction getSnapBoundInfo(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n    poses: number[][],\n    directions: number[][][],\n    keepRatio: boolean,\n    datas: any,\n) {\n    return directions.map(([startDirection, endDirection]) => {\n        const otherStartPos = getPosByDirection(poses, startDirection);\n        const otherEndPos = getPosByDirection(poses, endDirection);\n\n        const snapBoundInfo\n            = keepRatio\n            ? checkSnapBoundsKeepRatio(moveable, otherStartPos, otherEndPos)\n            : checkSnapBounds(moveable, [otherEndPos]);\n\n        const {\n            horizontal: {\n                dist: otherHorizontalDist,\n                offset: otherHorizontalOffset,\n                isBound: isOtherHorizontalBound,\n                isSnap: isOtherHorizontalSnap,\n            },\n            vertical: {\n                dist: otherVerticalDist,\n                offset: otherVerticalOffset,\n                isBound: isOtherVerticalBound,\n                isSnap: isOtherVerticalSnap,\n            },\n        } = snapBoundInfo;\n\n        const multiple = minus(endDirection, startDirection);\n\n        if (!otherVerticalOffset && !otherHorizontalOffset) {\n            return {\n                isBound: isOtherVerticalBound || isOtherHorizontalBound,\n                isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\n                sign: multiple,\n                offset: [0, 0],\n            };\n        }\n        const isVertical = otherHorizontalDist < otherVerticalDist;\n        const sizeOffset = solveNextOffset(\n            otherStartPos,\n            otherEndPos,\n            isVertical ? otherVerticalOffset : otherHorizontalOffset,\n            isVertical,\n            datas,\n        ).map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\n            isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\n            offset: sizeOffset,\n        };\n    });\n}\nexport function getCheckSnapDirections(\n    direction: number[],\n    keepRatio: boolean,\n) {\n    const directions: number[][][] = [];\n    const fixedDirection = [-direction[0], -direction[1]];\n\n    if (direction[0] && direction[1]) {\n        directions.push(\n            [fixedDirection, [direction[0], -direction[1]]],\n            [fixedDirection, [-direction[0], direction[1]]],\n        );\n        if (keepRatio) {\n            // pass two direction condition\n            directions.push(\n                [fixedDirection, direction],\n            );\n        }\n    } else if (direction[0]) {\n        // vertcal\n        if (keepRatio) {\n            directions.push(\n                [fixedDirection, [fixedDirection[0], -1]],\n                [fixedDirection, [fixedDirection[0], 1]],\n                [fixedDirection, [direction[0], -1]],\n                [fixedDirection, direction],\n                [fixedDirection, [direction[0], 1]],\n            );\n        } else {\n            directions.push(\n                [[fixedDirection[0], -1], [direction[0], -1]],\n                [[fixedDirection[0], 0], [direction[0], 0]],\n                [[fixedDirection[0], 1], [direction[0], 1]],\n            );\n        }\n    } else if (direction[1]) {\n        // horizontal\n        if (keepRatio) {\n            directions.push(\n                [fixedDirection, [-1, fixedDirection[1]]],\n                [fixedDirection, [1, fixedDirection[1]]],\n                [fixedDirection, [-1, direction[1]]],\n                [fixedDirection, [1, direction[1]]],\n                [fixedDirection, direction],\n            );\n        } else {\n            directions.push(\n                [[-1, fixedDirection[1]], [-1, direction[1]]],\n                [[0, fixedDirection[1]], [0, direction[1]]],\n                [[1, fixedDirection[1]], [1, direction[1]]],\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        directions.push(\n            [fixedDirection, [1, 0]],\n            [fixedDirection, [-1, 0]],\n            [fixedDirection, [0, -1]],\n            [fixedDirection, [0, 1]],\n\n            [[1, 0], [1, -1]],\n            [[1, 0], [1, 1]],\n            [[0, 1], [1, 1]],\n            [[0, 1], [-1, 1]],\n\n            [[-1, 0], [-1, -1]],\n            [[-1, 0], [-1, 1]],\n            [[0, -1], [1, -1]],\n            [[0, -1], [-1, -1]],\n        );\n    }\n\n    return directions;\n}\nexport function getSizeOffsetInfo(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n    datas: any,\n) {\n    const directions = getCheckSnapDirections(direction, keepRatio);\n    const lines = getCheckSnapLines(poses, direction, keepRatio);\n    const offsets = [\n        ...getSnapBoundInfo(moveable, poses, directions, keepRatio, datas),\n        ...getInnerBoundInfo(moveable, lines, getPosByDirection(poses, [0, 0]), datas),\n    ];\n    const widthOffsetInfo = getNearOffsetInfo(offsets, 0);\n    const heightOffsetInfo = getNearOffsetInfo(offsets, 1);\n\n    return {\n        width: {\n            isBound: widthOffsetInfo.isBound,\n            offset: widthOffsetInfo.offset[0],\n        },\n        height: {\n            isBound: heightOffsetInfo.isBound,\n            offset: heightOffsetInfo.offset[1],\n        },\n    };\n}\nexport function recheckSizeByTwoDirection(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n    poses: number[][],\n    width: number,\n    height: number,\n    maxWidth: number,\n    maxHeight: number,\n    direction: number[],\n    datas: any,\n) {\n    const snapPos = getPosByDirection(poses, direction);\n\n    const {\n        horizontal: {\n            offset: horizontalOffset,\n        },\n        vertical: {\n            offset: verticalOffset,\n        },\n    } = checkSnapBounds(moveable, [snapPos]);\n\n    if (verticalOffset || horizontalOffset) {\n        const [nextWidthOffset, nextHeightOffset] = getDragDist({\n            datas,\n            distX: -verticalOffset,\n            distY: -horizontalOffset,\n        });\n\n        const nextWidth\n            = Math.min(maxWidth || Infinity, width + direction[0] * nextWidthOffset);\n        const nextHeight\n            = Math.min(maxHeight || Infinity, height + direction[1] * nextHeightOffset);\n\n        return [\n            nextWidth - width,\n            nextHeight - height,\n        ];\n    }\n    return [\n        0,\n        0,\n    ];\n}\nexport function checkSizeDist(\n    moveable: MoveableManager<any, any>,\n    getNextPoses: (widthOffset: number, heightOffset: number) => number[][],\n    matrix: number[],\n    width: number,\n    height: number,\n    direction: number[],\n    snapDirection: number[],\n    fixedPos: number[],\n    isRequest: boolean,\n    is3d: boolean,\n    datas: any,\n) {\n    const poses = getAbsolutePosesByState(moveable.state);\n    const keepRatio = moveable.props.keepRatio;\n\n    let widthOffset = 0;\n    let heightOffset = 0;\n\n    for (let i = 0; i < 2; ++i) {\n        const nextPoses = getNextPoses(widthOffset, heightOffset);\n        const {\n            width: widthOffsetInfo,\n            height: heightOffsetInfo,\n        } = getSizeOffsetInfo(\n            moveable,\n            nextPoses,\n            direction,\n            keepRatio,\n            datas,\n        );\n\n        const isWidthBound = widthOffsetInfo.isBound;\n        const isHeightBound = heightOffsetInfo.isBound;\n        let nextWidthOffset = widthOffsetInfo.offset;\n        let nextHeightOffset = heightOffsetInfo.offset;\n\n        if (i === 1) {\n            if (!isWidthBound) {\n                nextWidthOffset = 0;\n            }\n            if (!isHeightBound) {\n                nextHeightOffset = 0;\n            }\n        }\n        if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\n            return [0, 0];\n        }\n        if (keepRatio) {\n            const widthDist = Math.abs(nextWidthOffset) * (width ? 1 / width : 1);\n            const heightDist = Math.abs(nextHeightOffset) * (height ? 1 / height : 1);\n            const isGetWidthOffset\n                = isWidthBound && isHeightBound ? widthDist < heightDist\n                    : isHeightBound || (!isWidthBound && widthDist < heightDist);\n\n            // height * widthOffset = width * heighOffset\n            if (isGetWidthOffset) {\n                // width : height = ? : heightOffset\n                nextWidthOffset = width * nextHeightOffset / height;\n            } else {\n                // width : height = widthOffset : ?\n                nextHeightOffset = height * nextWidthOffset / width;\n            }\n        }\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n\n        return [\n            widthOffset,\n            heightOffset,\n        ];\n    }\n\n    if (direction[0] && direction[1]) {\n        const {\n            maxWidth,\n            maxHeight,\n        } = checkMaxBounds(moveable, width, height, poses, direction, fixedPos, datas);\n\n        const [nextWidthOffset, nextHeightOffset] = recheckSizeByTwoDirection(\n            moveable,\n            getNextPoses(widthOffset, heightOffset),\n            width + widthOffset,\n            height + heightOffset,\n            maxWidth,\n            maxHeight,\n            direction,\n            datas,\n        );\n\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    return [\n        widthOffset,\n        heightOffset,\n    ];\n}\n\nexport function checkSnapRotate(\n    moveable: MoveableManager<SnappableProps & RotatableProps, any>,\n    rect: RectInfo,\n    origin: number[],\n    rotation: number,\n) {\n    if (!hasGuidelines(moveable, \"rotatable\")) {\n        return rotation;\n    }\n\n    const {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = rect;\n    const rad = rotation * Math.PI / 180;\n    const prevPoses = [pos1, pos2, pos3, pos4].map(pos => minus(pos, origin));\n    const nextPoses = prevPoses.map(pos => rotate(pos, rad));\n\n    const result = [\n        ...checkRotateBounds(moveable, prevPoses, nextPoses, origin, rotation),\n        ...checkRotateInnerBounds(moveable, prevPoses, nextPoses, origin, rotation),\n    ];\n    result.sort((a, b) => Math.abs(a - rotation) - Math.abs(b - rotation));\n\n    if (result.length) {\n        return result[0];\n    } else {\n        return rotation;\n    }\n}\nexport function checkSnapSize(\n    moveable: MoveableManager<any, any>,\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPos: number[],\n    isRequest: boolean,\n    datas: any,\n) {\n    if (!hasGuidelines(moveable, \"resizable\")) {\n        return [0, 0];\n    }\n    const {\n        matrix,\n        is3d,\n    } = moveable.state;\n    return checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                matrix,\n                width + widthOffset,\n                height + heightOffset,\n                fixedPos,\n                direction,\n                is3d,\n            );\n        }, matrix, width, height, direction, direction, fixedPos, isRequest, is3d, datas,\n    );\n}\nexport function checkSnapScale(\n    moveable: MoveableManager<ScalableProps, any>,\n    scale: number[],\n    direction: number[],\n    snapDirection: number[],\n    fixedPos: number[],\n    isRequest: boolean,\n    datas: any,\n) {\n    const {\n        width,\n        height,\n    } = datas;\n    if (!hasGuidelines(moveable, \"scalable\")) {\n        return [0, 0];\n    }\n    const is3d = datas.is3d;\n    const sizeDist = checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                scaleMatrix(datas, plus(scale, [widthOffset / width, heightOffset / height])),\n                width,\n                height,\n                fixedPos,\n                direction,\n                is3d,\n            );\n        },\n        scaleMatrix(datas, scale),\n        width, height,\n        direction,\n        snapDirection,\n        fixedPos,\n        isRequest,\n        is3d,\n        datas,\n    );\n\n    return [\n        sizeDist[0] / width,\n        sizeDist[1] / height,\n    ];\n}\nexport function solveEquation(\n    pos1: number[],\n    pos2: number[],\n    snapOffset: number,\n    isVertical: boolean,\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    if (!dx) {\n        // y = 0 * x + b\n        // only horizontal\n        if (!isVertical) {\n            return [0, snapOffset];\n        }\n        return [0, 0];\n    }\n    if (!dy) {\n        // only vertical\n        if (isVertical) {\n            return [snapOffset, 0];\n        }\n        return [0, 0];\n    }\n    // y = ax + b\n    const a = dy / dx;\n    const b = pos1[1] - a * pos1[0];\n\n    if (isVertical) {\n        // y = a * x + b\n        const y = a * (pos2[0] + snapOffset) + b;\n\n        return [snapOffset, y - pos2[1]];\n    } else {\n        // x = (y - b) / a\n        const x = (pos2[1] + snapOffset - b) / a;\n\n        return [x - pos2[0], snapOffset];\n    }\n}\n\nexport function startCheckSnapDrag(\n    moveable: MoveableManager<any, any>,\n    datas: any,\n) {\n    datas.absolutePoses = getAbsolutePosesByState(moveable.state);\n}\n\nexport function checkThrottleDragRotate(\n    throttleDragRotate: number,\n    [distX, distY]: number[],\n    [isVerticalBound, isHorizontalBound]: boolean[],\n    [isVerticalSnap, isHorizontalSnap]: boolean[],\n    [verticalOffset, horizontalOffset]: number[],\n) {\n    let offsetX = -verticalOffset;\n    let offsetY = -horizontalOffset;\n\n    if (throttleDragRotate && distX && distY) {\n        offsetX = 0;\n        offsetY = 0;\n        const adjustPoses = [];\n        if (isVerticalBound && isHorizontalBound) {\n            adjustPoses.push(\n                [0, horizontalOffset],\n                [verticalOffset, 0],\n            );\n        } else if (isVerticalBound) {\n            adjustPoses.push(\n                [verticalOffset, 0],\n            );\n        } else if (isHorizontalBound) {\n            adjustPoses.push(\n                [0, horizontalOffset],\n            );\n        } else if (isVerticalSnap && isHorizontalSnap) {\n            adjustPoses.push(\n                [0, horizontalOffset],\n                [verticalOffset, 0],\n            );\n        } else if (isVerticalSnap) {\n            adjustPoses.push(\n                [verticalOffset, 0],\n            );\n        } else if (isHorizontalSnap) {\n            adjustPoses.push(\n                [0, horizontalOffset],\n            );\n        }\n        if (adjustPoses.length) {\n            adjustPoses.sort((a, b) => {\n                return getDistSize(minus([distX, distY], a)) - getDistSize(minus([distX, distY], b));\n            });\n            const adjustPos = adjustPoses[0];\n\n            if (adjustPos[0] && Math.abs(distX) > TINY_NUM) {\n                offsetX = -adjustPos[0];\n                offsetY = distY * Math.abs(distX + offsetX) / Math.abs(distX) - distY;\n            } else if (adjustPos[1] && Math.abs(distY) > TINY_NUM) {\n                const prevDistY = distY;\n                offsetY = -adjustPos[1];\n                offsetX = distX * Math.abs(distY + offsetY) / Math.abs(prevDistY) - distX;\n            }\n            if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\n                if (Math.abs(offsetX) > TINY_NUM && Math.abs(offsetX) < Math.abs(verticalOffset)) {\n                    const scale = Math.abs(verticalOffset) / Math.abs(offsetX);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else if (Math.abs(offsetY) > TINY_NUM && Math.abs(offsetY) < Math.abs(horizontalOffset)) {\n                    const scale = Math.abs(horizontalOffset) / Math.abs(offsetY);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else {\n                    offsetX = maxOffset(-verticalOffset, offsetX);\n                    offsetY = maxOffset(-horizontalOffset, offsetY);\n                }\n            }\n        }\n    } else {\n        offsetX = (distX || isVerticalBound) ? -verticalOffset : 0;\n        offsetY = (distY || isHorizontalBound) ? -horizontalOffset : 0;\n    }\n    return [offsetX, offsetY];\n}\nexport function checkSnapDrag(\n    moveable: MoveableManager<SnappableProps & DraggableProps, any>,\n    distX: number,\n    distY: number,\n    throttleDragRotate: number,\n    datas: any,\n) {\n\n    if (!hasGuidelines(moveable, \"draggable\")) {\n        return [\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n        ];\n    }\n    const poses = getAbsolutePoses(\n        datas.absolutePoses,\n        [distX, distY],\n    );\n    const { left, right, top, bottom } = getRect(poses);\n    const snapCenter = moveable.props.snapCenter;\n    const snapPoses = [\n        [left, top],\n        [right, top],\n        [left, bottom],\n        [right, bottom],\n    ];\n\n    if (snapCenter) {\n        snapPoses.push([(left + right) / 2, (top + bottom) / 2]);\n    }\n    const {\n        vertical: verticalSnapBoundInfo,\n        horizontal: horizontalSnapBoundInfo,\n    } = checkSnapBounds(moveable, snapPoses, poses);\n    const {\n        vertical: verticalInnerBoundInfo,\n        horizontal: horizontalInnerBoundInfo,\n    } = getInnerBoundDragInfo(moveable, poses, datas);\n\n    const isVerticalSnap = verticalSnapBoundInfo.isSnap;\n    const isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\n    const isVerticalBound\n        = verticalSnapBoundInfo.isBound\n        || verticalInnerBoundInfo.isBound;\n    const isHorizontalBound\n        = horizontalSnapBoundInfo.isBound\n        || horizontalInnerBoundInfo.isBound;\n    const verticalOffset = maxOffset(verticalSnapBoundInfo.offset, verticalInnerBoundInfo.offset);\n    const horizontalOffset = maxOffset(horizontalSnapBoundInfo.offset, horizontalInnerBoundInfo.offset);\n    const [offsetX, offsetY] = checkThrottleDragRotate(\n        throttleDragRotate,\n        [distX, distY],\n        [isVerticalBound, isHorizontalBound],\n        [isVerticalSnap, isHorizontalSnap],\n        [verticalOffset, horizontalOffset],\n    );\n    return [\n        {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            offset: offsetX,\n        },\n        {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            offset: offsetY,\n        },\n    ];\n}\n\nfunction getSnapGuidelines(posInfos: SnapPosInfo[]) {\n    const guidelines: Guideline[] = [];\n\n    posInfos.forEach(posInfo => {\n        posInfo.guidelineInfos.forEach(({ guideline }) => {\n            if (guidelines.indexOf(guideline) > -1) {\n                return;\n            }\n            guidelines.push(guideline);\n        });\n    });\n\n    return guidelines;\n}\n\nfunction getElementGuidelineDist(\n    elementPos: number,\n    elementSize: number,\n    targetPos: number,\n    targetSize: number,\n) {\n    // relativePos < 0  => element(l)  ---  (r)target\n    // relativePos > 0  => target(l)   ---  (r)element\n    const relativePos = elementPos - targetPos;\n    const startPos = relativePos < 0 ? relativePos + elementSize : targetSize;\n    const endPos = relativePos < 0 ? 0 : relativePos;\n    const size = endPos - startPos;\n\n    return {\n        size,\n        pos: startPos,\n    };\n}\nfunction groupByElementGuidelines(\n    guidelines: Guideline[],\n    clientPos: number,\n    size: number,\n    index: number,\n) {\n    const groupInfos: Array<[Element, number, any]> = [];\n\n    const group = groupBy(guidelines.filter(({ element }) => element), ({ element, pos, size: size2 }) => {\n        const elementPos = pos[index];\n        const sign = Math.min(0, elementPos - clientPos) < 0 ? -1 : 1;\n        const groupKey = `${sign}_${pos[index ? 0 : 1]}`;\n        const groupInfo = find(groupInfos, ([groupElement, groupPos]) => {\n            return element === groupElement && elementPos === groupPos;\n        });\n        if (groupInfo) {\n            return groupInfo[2];\n        }\n        groupInfos.push([element!, elementPos, groupKey]);\n        return groupKey;\n    });\n    group.forEach(elementGuidelines => {\n        elementGuidelines.sort((a, b) => {\n            const result = getElementGuidelineDist(a.pos[index], a.size, clientPos, size).size\n                - getElementGuidelineDist(b.pos[index], a.size, clientPos, size).size;\n\n            return result || a.pos[index ? 0 : 1] - b.pos[index ? 0 : 1];\n        });\n    });\n    return group;\n}\nfunction renderElementGroup(\n    group: Guideline[][],\n    [directionName, posName1, posName2, sizeName]: readonly [string, string, string, string],\n    minPos: number,\n    clientPos: number,\n    clientSize: number,\n    targetPos: number,\n    snapThreshold: number,\n    isDisplaySnapDigit: boolean,\n    snapDigit: number,\n    index: number,\n    React: Renderer,\n) {\n    return flat(group.map((elementGuidelines, i) => {\n        let isFirstRenderSize = true;\n\n        return elementGuidelines.map(({ pos, size }, j) => {\n            const {\n                pos: linePos,\n                size: lineSize,\n            } = getElementGuidelineDist(pos[index], size, clientPos, clientSize);\n\n            if (lineSize < snapThreshold) {\n                return null;\n            }\n            const isRenderSize = isFirstRenderSize;\n\n            isFirstRenderSize = false;\n            const snapSize = isDisplaySnapDigit && isRenderSize ? parseFloat(lineSize.toFixed(snapDigit)) : 0;\n\n            return <div className={prefix(\n                \"line\",\n                directionName,\n                \"guideline\",\n                \"dashed\",\n            )}\n                data-size={snapSize > 0 ? snapSize : \"\"}\n                key={`${directionName}LinkGuidline${i}-${j}`} style={{\n                    [posName1]: `${minPos + linePos}px`,\n                    [posName2]: `${-targetPos + pos[index ? 0 : 1]}px`,\n                    [sizeName]: `${lineSize}px`,\n                }} />;\n        });\n    }));\n}\nfunction renderSnapPoses(\n    snapPoses: number[],\n    [directionName, posName1, posName2, sizeName]: readonly [string, string, string, string],\n    minPos: number,\n    targetPos: number,\n    size: number,\n    React: Renderer,\n) {\n    return snapPoses.map((pos, i) => {\n        return <div className={prefix(\n            \"line\",\n            directionName,\n            \"guideline\",\n            \"target\",\n            \"bold\",\n        )} key={`${directionName}TargetGuidline${i}`} style={{\n            [posName1]: `${minPos}px`,\n            [posName2]: `${-targetPos + pos}px`,\n            [sizeName]: `${size}px`,\n        }} />;\n    });\n}\nfunction renderGuidelines(\n    guidelines: Guideline[],\n    [directionName, posName1, posName2, sizeName]: readonly [string, string, string, string],\n    targetPos1: number,\n    targetPos2: number,\n    index: number,\n    React: Renderer,\n) {\n    return guidelines.map((guideline, i) => {\n        const { pos, size, element } = guideline;\n\n        return <div className={prefix(\n            \"line\",\n            directionName,\n            \"guideline\",\n            element ? \"bold\" : \"\",\n        )} key={`${directionName}Guidline${i}`} style={{\n            [posName1]: `${-targetPos1 + pos[index]}px`,\n            [posName2]: `${-targetPos2 + pos[index ? 0 : 1]}px`,\n            [sizeName]: `${size}px`,\n        }} />;\n    });\n}\n\nfunction addBoundGuidelines(\n    moveable: MoveableManager<SnappableProps, SnappableState>,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n    verticalSnapPoses: number[],\n    horizontalSnapPoses: number[],\n) {\n    const {\n        vertical: {\n            isBound: isVerticalBound,\n            pos: verticalBoundPos,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            pos: horizontalBoundPos,\n        },\n    } = checkBoundPoses(moveable, verticalPoses, horizontalPoses);\n\n    if (isVerticalBound && verticalSnapPoses.indexOf(verticalBoundPos) < 0) {\n        verticalSnapPoses.push(verticalBoundPos);\n    }\n    if (isHorizontalBound && horizontalSnapPoses.indexOf(horizontalBoundPos) < 0) {\n        horizontalSnapPoses.push(horizontalBoundPos);\n    }\n    const {\n        vertical: verticalInnerBoundPoses,\n        horizontal: horizontalInnerBoundPoses,\n    } = checkInnerBoundPoses(moveable);\n\n    verticalSnapPoses.push(\n        ...verticalInnerBoundPoses.filter(pos => verticalSnapPoses.indexOf(pos) < 0),\n    );\n    horizontalSnapPoses.push(\n        ...horizontalInnerBoundPoses.filter(pos => horizontalSnapPoses.indexOf(pos) < 0),\n    );\n}\nexport default {\n    name: \"snappable\",\n    props: {\n        snappable: [Boolean, Array],\n        snapCenter: Boolean,\n        snapHorizontal: Boolean,\n        snapVertical: Boolean,\n        snapElement: Boolean,\n        isDisplaySnapDigit: Boolean,\n        snapDigit: Number,\n        snapThreshold: Number,\n        horizontalGuidelines: Array,\n        verticalGuidelines: Array,\n        elementGuidelines: Array,\n        bounds: Object,\n        innerBounds: Object,\n    } as const,\n    render(moveable: MoveableManager<SnappableProps, SnappableState>, React: Renderer): any[] {\n        const {\n            top: targetTop,\n            left: targetLeft,\n            pos1, pos2, pos3, pos4,\n            snapRenderInfo,\n            targetClientRect,\n            containerClientRect,\n        } = moveable.state;\n        const clientLeft = targetClientRect.left - containerClientRect.left;\n        const clientTop = targetClientRect.top - containerClientRect.top;\n\n        const minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\n        const minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\n\n        if (!snapRenderInfo || !hasGuidelines(moveable, \"\")) {\n            return [];\n        }\n        const {\n            snapThreshold = 5,\n            snapDigit = 0,\n            isDisplaySnapDigit = true,\n        } = moveable.props;\n        const poses = getAbsolutePosesByState(moveable.state);\n        const { width, height, top, left, bottom, right } = getRect(poses);\n        const verticalSnapPoses: number[] = [];\n        const horizontalSnapPoses: number[] = [];\n        const verticalGuildelines: Guideline[] = [];\n        const horizontalGuidelines: Guideline[] = [];\n        const snapInfos: Array<{ vertical: SnapInfo, horizontal: SnapInfo }> = [];\n\n        if (snapRenderInfo.direction) {\n            snapInfos.push(getSnapInfosByDirection(moveable, poses, snapRenderInfo.direction));\n        }\n        if (snapRenderInfo.snap) {\n            const rect = getRect(poses);\n\n            if (snapRenderInfo.center) {\n                (rect as any).middle = (rect.top + rect.bottom) / 2;\n                (rect as any).center = (rect.left + rect.right) / 2;\n            }\n            snapInfos.push(checkSnaps(moveable, rect, true, 1));\n        }\n        snapInfos.forEach(snapInfo => {\n            const {\n                vertical: {\n                    posInfos: verticalPosInfos,\n                },\n                horizontal: {\n                    posInfos: horizontalPosInfos,\n                },\n            } = snapInfo;\n            verticalSnapPoses.push(...verticalPosInfos.map(posInfo => posInfo.pos));\n            horizontalSnapPoses.push(...horizontalPosInfos.map(posInfo => posInfo.pos));\n            verticalGuildelines.push(...getSnapGuidelines(verticalPosInfos));\n            horizontalGuidelines.push(...getSnapGuidelines(horizontalPosInfos));\n        });\n\n        addBoundGuidelines(\n            moveable,\n            [left, right],\n            [top, bottom],\n            verticalSnapPoses,\n            horizontalSnapPoses,\n        );\n        const elementHorizontalGroup = groupByElementGuidelines(\n            horizontalGuidelines,\n            clientLeft,\n            width,\n            0,\n        );\n        const elementVerticalGroup = groupByElementGuidelines(\n            verticalGuildelines,\n            clientTop,\n            height,\n            1,\n        );\n        const horizontalNames = [\"horizontal\", \"left\", \"top\", \"width\"] as const;\n        const verticalNames = [\"vertical\", \"top\", \"left\", \"height\"] as const;\n        return [\n            ...renderElementGroup(\n                elementHorizontalGroup,\n                horizontalNames,\n                minLeft,\n                clientLeft,\n                width,\n                targetTop,\n                snapThreshold,\n                isDisplaySnapDigit,\n                snapDigit,\n                0,\n                React,\n            ),\n            ...renderElementGroup(\n                elementVerticalGroup,\n                verticalNames,\n                minTop,\n                clientTop,\n                height,\n                targetLeft,\n                snapThreshold,\n                isDisplaySnapDigit,\n                snapDigit,\n                1,\n                React,\n            ),\n            ...renderSnapPoses(\n                horizontalSnapPoses,\n                horizontalNames,\n                minLeft,\n                targetTop,\n                width,\n                React,\n            ),\n            ...renderSnapPoses(\n                verticalSnapPoses,\n                verticalNames,\n                minTop,\n                targetLeft,\n                height,\n                React,\n            ),\n            ...renderGuidelines(\n                horizontalGuidelines,\n                horizontalNames,\n                targetLeft,\n                targetTop,\n                0,\n                React,\n            ),\n            ...renderGuidelines(\n                verticalGuildelines,\n                verticalNames,\n                targetTop,\n                targetLeft,\n                1,\n                React,\n            ),\n        ];\n    },\n    dragStart(moveable: MoveableManager<SnappableProps, SnappableState>, e: any) {\n        moveable.state.snapRenderInfo = {\n            snap: true,\n            center: true,\n        };\n        snapStart(moveable);\n    },\n    pinchStart(moveable: MoveableManager<SnappableProps, SnappableState>) {\n        this.unset(moveable);\n    },\n    dragEnd(moveable: MoveableManager<SnappableProps, SnappableState>) {\n        this.unset(moveable);\n    },\n    dragControlCondition(e: any) {\n        return directionCondition(e) || rotatableDragControlCondtion(e);\n    },\n    dragControlStart(moveable: MoveableManager<SnappableProps, SnappableState>, e: any) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragControlEnd(moveable: MoveableManager<SnappableProps, SnappableState>) {\n        this.unset(moveable);\n    },\n    dragGroupStart(moveable: any, e: any) {\n        this.dragStart(moveable, e);\n    },\n    dragGroupEnd(moveable: any) {\n        this.unset(moveable);\n    },\n    dragGroupControlStart(moveable: any, e: any) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragGroupControlEnd(moveable: any) {\n        this.unset(moveable);\n    },\n    unset(moveable: any) {\n        const state = moveable.state;\n\n        state.enableSnap = false;\n        state.guidelines = [];\n        state.snapRenderInfo = null;\n    },\n};\n","import { getDragDist, setDragStart } from \"../DraggerUtils\";\nimport { throttleArray, triggerEvent, fillParams, throttle, getDistSize, prefix } from \"../utils\";\nimport { minus, plus, getRad } from \"@moveable/matrix\";\nimport MoveableManager from \"../MoveableManager\";\nimport {\n    DraggableProps, OnDrag, OnDragGroup,\n    OnDragGroupStart, OnDragStart, OnDragEnd, DraggableState, Renderer,\n} from \"../types\";\nimport MoveableGroup from \"../MoveableGroup\";\nimport { triggerChildAble } from \"../groupUtils\";\nimport { checkSnapDrag, startCheckSnapDrag } from \"./Snappable\";\nimport { IObject } from \"@daybrush/utils\";\n\n/**\n * @namespace Draggable\n * @memberof Moveable\n */\nexport default {\n    name: \"draggable\",\n    props: {\n        draggable: Boolean,\n        throttleDrag: Number,\n        throttleDragRotate: Number,\n    },\n    render(\n        moveable: MoveableManager<DraggableProps, DraggableState>,\n        React: Renderer,\n    ) {\n        const throttleDragRotate = moveable.props.throttleDragRotate;\n        const { dragInfo, beforeOrigin } = moveable.state;\n\n        if (!throttleDragRotate || !dragInfo) {\n            return;\n        }\n        const dist = dragInfo.dist;\n\n        if (!dist[0] && !dist[1]) {\n            return;\n        }\n\n        const width = getDistSize(dist);\n        const rad = getRad(dist, [0, 0]);\n\n        return <div className={prefix(\n            \"line\",\n            \"horizontal\",\n            \"dragline\",\n            \"dashed\",\n        )} key={`dragRotateGuideline`} style={{\n            width: `${width}px`,\n            transform: `translate(${beforeOrigin[0]}px, ${beforeOrigin[1]}px) rotate(${rad}rad)`,\n        }} />;\n    },\n    dragStart(\n        moveable: MoveableManager<DraggableProps, any>,\n        e: any,\n    ) {\n        const { datas, parentEvent, parentDragger } = e;\n        const state = moveable.state;\n        const {\n            targetTransform,\n            target,\n            dragger,\n        } = state;\n\n        if (dragger) {\n            return false;\n        }\n        state.dragger = parentDragger || moveable.targetDragger;\n        const style = window.getComputedStyle(target!);\n\n        datas.datas = {};\n        datas.left = parseFloat(style.left || \"\") || 0;\n        datas.top = parseFloat(style.top || \"\") || 0;\n        datas.bottom = parseFloat(style.bottom || \"\") || 0;\n        datas.right = parseFloat(style.right || \"\") || 0;\n        datas.transform = targetTransform;\n        datas.startTranslate = [0, 0];\n\n        setDragStart(moveable, { datas });\n\n        datas.prevDist = [0, 0];\n        datas.prevBeforeDist = [0, 0];\n        datas.isDrag = false;\n\n        startCheckSnapDrag(moveable, datas);\n        const params = fillParams<OnDragStart>(moveable, e, {\n            set: (translate: number[]) => {\n                datas.startTranslate = translate;\n            },\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\n\n        if (result !== false) {\n            datas.isDrag = true;\n            moveable.state.dragInfo = {\n                startRect: moveable.getRect(),\n                dist: [0, 0],\n            };\n        } else {\n            state.dragger = null;\n            datas.isPinch = false;\n        }\n        return datas.isDrag ? params : false;\n    },\n    drag(\n        moveable: MoveableManager<DraggableProps, any>,\n        e: any,\n    ): OnDrag | undefined {\n        const { datas, parentEvent, parentFlag } = e;\n        let { distX, distY } = e;\n        const { isPinch, isDrag, prevDist, prevBeforeDist, transform, startTranslate } = datas;\n\n        if (!isDrag) {\n            return;\n        }\n        const props = moveable.props;\n\n        const parentMoveable = props.parentMoveable;\n        const throttleDrag = parentEvent ? 0 : (props.throttleDrag || 0);\n        const throttleDragRotate = parentEvent ? 0 : (props.throttleDragRotate || 0);\n\n        let isSnap = false;\n        let dragRotateRad = 0;\n\n        if (throttleDragRotate > 0 && (distX || distY)) {\n            const deg = throttle(getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate);\n            const r = getDistSize([distX, distY]);\n            dragRotateRad = deg * Math.PI / 180;\n\n            distX = r * Math.cos(dragRotateRad);\n            distY = r * Math.sin(dragRotateRad);\n        }\n\n        if (!isPinch && !parentEvent && !parentFlag && (distX || distY)) {\n            const [verticalInfo, horizontalInfo] = checkSnapDrag(\n                moveable, distX, distY, throttleDragRotate, datas,\n            );\n            const {\n                isSnap: isVerticalSnap,\n                isBound: isVerticalBound,\n                offset: verticalOffset,\n            } = verticalInfo;\n            const {\n                isSnap: isHorizontalSnap,\n                isBound: isHorizontalBound,\n                offset: horizontalOffset,\n            } = horizontalInfo;\n            isSnap = isVerticalSnap || isHorizontalSnap || isVerticalBound || isHorizontalBound;\n\n            distX += verticalOffset;\n            distY += horizontalOffset;\n        }\n        datas.passDistX = distX;\n        datas.passDistY = distY;\n        const beforeTranslate = plus(getDragDist({ datas, distX, distY }, true), startTranslate);\n        const translate = plus(getDragDist({ datas, distX, distY }, false), startTranslate);\n\n        if (!throttleDragRotate && !isSnap) {\n            throttleArray(translate, throttleDrag);\n            throttleArray(beforeTranslate, throttleDrag);\n        }\n\n        const beforeDist = minus(beforeTranslate, startTranslate);\n        const dist = minus(translate, startTranslate);\n        const delta = minus(dist, prevDist);\n        const beforeDelta = minus(beforeDist, prevBeforeDist);\n\n        datas.prevDist = dist;\n        datas.prevBeforeDist = beforeDist;\n\n        const left = datas.left + beforeDist[0];\n        const top = datas.top + beforeDist[1];\n        const right = datas.right - beforeDist[0];\n        const bottom = datas.bottom - beforeDist[1];\n        const nextTransform = `${transform} translate(${dist[0]}px, ${dist[1]}px)`;\n\n        moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\n        if (!parentEvent && !parentMoveable && delta.every(num => !num) && beforeDelta.some(num => !num)) {\n            return;\n        }\n        const params = fillParams<OnDrag>(moveable, e, {\n            transform: nextTransform,\n            dist,\n            delta,\n            translate,\n            beforeDist,\n            beforeDelta,\n            beforeTranslate,\n            left,\n            top,\n            right,\n            bottom,\n            isPinch,\n        });\n\n        !parentEvent && triggerEvent(moveable, \"onDrag\", params);\n        return params;\n    },\n    dragEnd(\n        moveable: MoveableManager<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const { parentEvent, datas, isDrag } = e;\n\n        moveable.state.dragger = null;\n        moveable.state.dragInfo = null;\n        if (!datas.isDrag) {\n            return;\n        }\n        datas.isDrag = false;\n        !parentEvent && triggerEvent(moveable, \"onDragEnd\", fillParams<OnDragEnd>(moveable, e, {\n            isDrag,\n        }));\n        return isDrag;\n    },\n    dragGroupStart(moveable: MoveableGroup, e: any) {\n        const datas = e.datas;\n\n        const params = this.dragStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const events = triggerChildAble(moveable, this, \"dragStart\", datas, e);\n        const nextParams: OnDragGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\n\n        datas.isDrag = result !== false;\n\n        return datas.isDrag ? params : false;\n    },\n    dragGroup(moveable: MoveableGroup, e: any) {\n        const datas = e.datas;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        const params = this.drag(moveable, e);\n        const { passDistX, passDistY } = e.datas;\n        const events = triggerChildAble(moveable, this, \"drag\", datas, { ...e, distX: passDistX, distY: passDistY });\n\n        if (!params) {\n            return;\n        }\n        const nextParams: OnDragGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onDragGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupEnd(moveable: MoveableGroup, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        this.dragEnd(moveable, e);\n        triggerChildAble(moveable, this, \"dragEnd\", datas, e);\n        triggerEvent(moveable, \"onDragGroupEnd\", fillParams(moveable, e, {\n            targets: moveable.props.targets!,\n            isDrag,\n        }));\n\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Draggable#request\n     * @param {object} [e] - the draggable's request parameter\n     * @param {number} [e.x] - x position\n     * @param {number} [e.y] - y position\n     * @param {number} [e.deltaX] - X number to move\n     * @param {number} [e.deltaY] - Y number to move\n     * @param {number} [e.isInstant] - Whether to execute the request instantly\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10, isInstant: true });\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100, isInstant: true });\n     *\n     * // requestStart\n     * const requester = moveable.request(\"draggable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100, isInstant: true });\n     * moveable.request(\"draggable\", { x: 220, y: 100, isInstant: true });\n     * moveable.request(\"draggable\", { x: 240, y: 100, isInstant: true });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManager<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        return {\n            isControl: false,\n            requestStart(e: IObject<any>) {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"x\" in e) {\n                    distX = e.x - rect.left;\n                } else if (\"deltaX\" in e) {\n                    distX += e.deltaX;\n                }\n                if (\"y\" in e) {\n                    distY = e.y - rect.top;\n                } else if (\"deltaY\" in e) {\n                    distY += e.deltaY;\n                }\n\n                return { datas, distX, distY };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n    unset(moveable: any) {\n        moveable.state.dragInfo = null;\n    },\n};\n","import { MoveableManagerState, OnCustomDrag } from \"./types\";\nimport { convertDragDist } from \"./utils\";\n\nexport function setCustomDrag(\n    state: MoveableManagerState<any>,\n    delta: number[], inputEvent: any,\n    isConvert: boolean = true,\n) {\n    const result = state.dragger!.move(delta, inputEvent);\n    return {\n        ...(isConvert ? convertDragDist(state, result) : result),\n        parentEvent: true,\n    };\n}\n\nexport default class CustomDragger {\n    private prevX = 0;\n    private prevY = 0;\n    private startX = 0;\n    private startY = 0;\n    private isDrag = false;\n    private isFlag = false;\n    private datas = {};\n\n    public dragStart(client: number[], inputEvent: any)  {\n        this.isDrag = false;\n        this.isFlag = false;\n        this.datas = {};\n\n        return this.move(client, inputEvent);\n    }\n    public drag(client: number[], inputEvent: any) {\n        return this.move([\n            client[0] - this.prevX,\n            client[1] - this.prevY,\n        ], inputEvent);\n    }\n    public move(delta: number[], inputEvent: any): OnCustomDrag {\n        let clientX!: number;\n        let clientY!: number;\n        if (!this.isFlag) {\n            this.prevX = delta[0];\n            this.prevY = delta[1];\n            this.startX = delta[0];\n            this.startY = delta[1];\n\n            clientX = delta[0];\n            clientY = delta[1];\n\n            this.isFlag = true;\n        } else {\n\n            clientX = this.prevX + delta[0];\n            clientY = this.prevY + delta[1];\n            this.isDrag = true;\n        }\n\n        this.prevX = clientX;\n        this.prevY = clientY;\n\n        return {\n            clientX,\n            clientY,\n            inputEvent,\n            isDrag: this.isDrag,\n            distX: clientX - this.startX,\n            distY: clientY - this.startY,\n            deltaX: delta[0],\n            deltaY: delta[1],\n            datas: this.datas,\n            parentEvent: true,\n            parentDragger: this,\n        };\n    }\n}\n","import { throttle, prefix, triggerEvent, fillParams, getRotationRad, getClientRect, caculatePosition } from \"../utils\";\nimport { IObject, hasClass } from \"@daybrush/utils\";\nimport MoveableManager from \"../MoveableManager\";\nimport {\n    RotatableProps, OnRotateGroup, OnRotateGroupEnd,\n    Renderer, OnRotateGroupStart, OnRotateStart, OnRotate,\n    OnRotateEnd, MoveableClientRect, SnappableProps, SnappableState,\n} from \"../types\";\nimport MoveableGroup from \"../MoveableGroup\";\nimport { triggerChildAble } from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { minus, plus, getRad, rotate as rotateMatrix } from \"@moveable/matrix\";\nimport CustomDragger, { setCustomDrag } from \"../CustomDragger\";\nimport { checkSnapRotate } from \"./Snappable\";\n\n/**\n * @namespace Rotatable\n * @memberof Moveable\n */\n\nfunction setRotateStartInfo(\n    moveable: MoveableManager<any, any>,\n    datas: IObject<any>, clientX: number, clientY: number, origin: number[], rect: MoveableClientRect) {\n\n    const n = moveable.state.is3d ? 4 : 3;\n    const nextOrigin = caculatePosition(moveable.state.rootMatrix, origin, n);\n    const startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\n\n    datas.startAbsoluteOrigin = startAbsoluteOrigin;\n    datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\n    datas.prevSnapDeg = datas.prevDeg;\n    datas.startDeg = datas.prevDeg;\n    datas.loop = 0;\n}\nfunction getParentDeg(\n    moveable: MoveableManager<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    parentDist: number,\n    direction: number,\n    startRotate: number,\n) {\n    const {\n        prevDeg,\n    } = datas;\n\n    const absoluteDeg = startRotate + parentDist;\n    const dist = checkSnapRotate(\n        moveable,\n        moveableRect,\n        datas.origin,\n        parentDist,\n    );\n    datas.prevDeg = dist;\n\n    const delta = direction * (dist - prevDeg);\n\n    return [delta, dist, absoluteDeg];\n}\nfunction getDeg(\n    moveable: MoveableManager<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    deg: number,\n    direction: number,\n    startRotate: number,\n    throttleRotate: number,\n    isSnap?: boolean,\n) {\n    const {\n        prevDeg,\n        prevSnapDeg,\n        startDeg,\n        loop: prevLoop,\n    } = datas;\n\n    if (prevDeg > deg && prevDeg > 270 && deg < 90) {\n        // 360 => 0\n        ++datas.loop;\n    } else if (prevDeg < deg && prevDeg < 90 && deg > 270) {\n        // 0 => 360\n        --datas.loop;\n    }\n    const loop = datas.loop;\n    const absolutePrevSnapDeg = prevLoop * 360 + prevSnapDeg - startDeg + startRotate;\n    let absoluteDeg = loop * 360 + deg - startDeg + startRotate;\n\n    datas.prevDeg = absoluteDeg - loop * 360 + startDeg - startRotate;\n\n    absoluteDeg = throttle(absoluteDeg, throttleRotate);\n    let dist = direction * (absoluteDeg - startRotate);\n    if (isSnap) {\n        dist = checkSnapRotate(moveable, moveableRect, datas.origin, dist);\n        absoluteDeg = dist / direction + startRotate;\n    }\n    datas.prevSnapDeg = absoluteDeg - loop * 360 + startDeg - startRotate;\n\n    const delta = direction * (absoluteDeg - absolutePrevSnapDeg);\n\n    return [delta, dist, absoluteDeg];\n}\nfunction getRotateInfo(\n    moveable: MoveableManager<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    direction: number,\n    clientX: number, clientY: number,\n    startRotate: number,\n    throttleRotate: number,\n) {\n    return getDeg(\n        moveable,\n        moveableRect,\n        datas,\n        getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180,\n        direction,\n        startRotate,\n        throttleRotate,\n        true,\n    );\n}\n\nexport function getPositions(\n    rotationPosition: \"top\" | \"bottom\" | \"left\" | \"right\",\n    pos1: number[],\n    pos2: number[],\n    pos3: number[],\n    pos4: number[],\n) {\n    if (rotationPosition === \"left\") {\n        return [pos3, pos1];\n    } else if (rotationPosition === \"right\") {\n        return [pos2, pos4];\n    } else if (rotationPosition === \"bottom\") {\n        return [pos4, pos3];\n    }\n    return [pos1, pos2];\n}\n\nexport function dragControlCondition(e: any) {\n    if (e.isRequest) {\n        return true;\n    }\n    return hasClass(e.inputEvent.target, prefix(\"rotation\"));\n}\n\nexport default {\n    name: \"rotatable\",\n    canPinch: true,\n    props: {\n        rotatable: Boolean,\n        rotationPosition: String,\n        throttleRotate: Number,\n    },\n    render(moveable: MoveableManager<RotatableProps>, React: Renderer): any {\n        const {\n            rotatable,\n            rotationPosition,\n        } = moveable.props;\n        if (!rotatable) {\n            return null;\n        }\n        const { pos1, pos2, pos3, pos4, direction } = moveable.state;\n        const poses = getPositions(rotationPosition!, pos1, pos2, pos3, pos4);\n        const rotationRad = getRotationRad(poses, direction);\n\n        return (\n            <div key=\"rotation\" className={prefix(\"line rotation-line\")} style={{\n                // tslint:disable-next-line: max-line-length\n                transform: `translate(-50%) translate(${(poses[0][0] + poses[1][0]) / 2}px, ${(poses[0][1] + poses[1][1]) / 2}px) rotate(${rotationRad}rad)`,\n            }}>\n                <div className={prefix(\"control\", \"rotation\")}></div>\n            </div>\n        );\n    },\n    dragControlCondition,\n    dragControlStart(\n        moveable: MoveableManager<RotatableProps & SnappableProps, SnappableState>,\n        e: any) {\n        const {\n            datas,\n            clientX, clientY,\n            parentRotate, parentFlag, pinchFlag,\n            isRequest,\n        } = e;\n        const {\n            target, left, top, origin, beforeOrigin,\n            direction, beforeDirection, targetTransform,\n        } = moveable.state;\n\n        if (!isRequest && !target) {\n            return false;\n        }\n\n        const rect = moveable.getRect();\n        datas.rect = rect;\n        datas.transform = targetTransform;\n        datas.left = left;\n        datas.top = top;\n\n        if (isRequest || pinchFlag || parentFlag) {\n            const externalRotate = parentRotate || 0;\n\n            datas.beforeInfo = {\n                origin: rect.beforeOrigin,\n                prevDeg: externalRotate,\n                startDeg: externalRotate,\n                prevSnapDeg: externalRotate, loop: 0,\n            };\n            datas.afterInfo = {\n                origin: rect.origin,\n                prevDeg: externalRotate, startDeg: externalRotate,\n                prevSnapDeg: externalRotate, loop: 0,\n            };\n        } else {\n            datas.beforeInfo = { origin: rect.beforeOrigin };\n            datas.afterInfo = { origin: rect.origin };\n\n            const controlRect = getClientRect(moveable.controlBox.getElement());\n\n            setRotateStartInfo(moveable, datas.beforeInfo, clientX, clientY, beforeOrigin, controlRect);\n            setRotateStartInfo(moveable, datas.afterInfo, clientX, clientY, origin, controlRect);\n        }\n\n        datas.direction = direction;\n        datas.beforeDirection = beforeDirection;\n        datas.startRotate = 0;\n        datas.datas = {};\n\n        const params = fillParams<OnRotateStart>(moveable, e, {\n            set: (rotatation: number) => {\n                datas.startRotate = rotatation;\n            },\n        });\n        const result = triggerEvent(moveable, \"onRotateStart\", params);\n        datas.isRotate = result !== false;\n        moveable.state.snapRenderInfo = {};\n\n        return datas.isRotate ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManager<RotatableProps>,\n        e: any,\n    ) {\n        const { datas, clientX, clientY, parentRotate, parentFlag, pinchFlag } = e;\n        const {\n            direction,\n            beforeDirection,\n            beforeInfo,\n            afterInfo,\n            isRotate,\n            startRotate,\n            rect,\n        } = datas;\n\n        if (!isRotate) {\n            return;\n        }\n        const {\n            throttleRotate = 0,\n            parentMoveable,\n        } = moveable.props;\n\n        let delta: number;\n        let dist: number;\n        let rotate: number;\n        let beforeDelta: number;\n        let beforeDist: number;\n        let beforeRotate: number;\n\n        if (\"parentDist\" in e) {\n            const parentDist = e.parentDist;\n\n            [delta, dist, rotate]\n                = getParentDeg(moveable, rect, afterInfo, parentDist, direction, startRotate);\n            [beforeDelta, beforeDist, beforeRotate]\n                = getParentDeg(moveable, rect, beforeInfo, parentDist, direction, startRotate);\n        } else if (pinchFlag || parentFlag) {\n            [delta, dist, rotate]\n                = getDeg(moveable, rect, afterInfo, parentRotate, direction, startRotate, throttleRotate);\n            [beforeDelta, beforeDist, beforeRotate]\n                = getDeg(moveable, rect, beforeInfo, parentRotate, direction, startRotate, throttleRotate);\n        } else {\n            [delta, dist, rotate]\n                = getRotateInfo(moveable, rect, afterInfo, direction, clientX, clientY, startRotate, throttleRotate);\n            [beforeDelta, beforeDist, beforeRotate] = getRotateInfo(\n                moveable, rect, beforeInfo, beforeDirection, clientX, clientY, startRotate, throttleRotate,\n            );\n        }\n\n        if (!delta && !beforeDelta && !parentMoveable) {\n            return;\n        }\n        const params = fillParams<OnRotate>(moveable, e, {\n            delta,\n            dist,\n            rotate,\n            beforeDist,\n            beforeDelta,\n            beforeRotate,\n            transform: `${datas.transform} rotate(${dist}deg)`,\n            isPinch: !!pinchFlag,\n        });\n        triggerEvent(moveable, \"onRotate\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManager<RotatableProps>, e: any) {\n        const { datas, isDrag } = e;\n\n        if (!datas.isRotate) {\n            return false;\n        }\n        datas.isRotate = false;\n\n        triggerEvent(moveable, \"onRotateEnd\", fillParams<OnRotateEnd>(moveable, e, {\n            isDrag,\n        }));\n        return isDrag;\n    },\n    dragGroupControlCondition: dragControlCondition,\n    dragGroupControlStart(moveable: MoveableGroup, e: any) {\n        const { datas, inputEvent } = e;\n        const {\n            left: parentLeft,\n            top: parentTop,\n            beforeOrigin: parentBeforeOrigin,\n        } = moveable.state;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        params.set(moveable.rotation);\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControlStart\",\n            datas,\n            { ...e, parentRotate: 0 },\n            (child, childDatas, eventParams) => {\n                const { left, top, beforeOrigin } = child.state;\n                const childClient = plus(\n                    minus([left, top], [parentLeft, parentTop]),\n                    minus(beforeOrigin, parentBeforeOrigin),\n                );\n\n                childDatas.prevClient = childClient;\n                eventParams.dragStart = Draggable.dragStart(\n                    child,\n                    new CustomDragger().dragStart(childClient, inputEvent),\n                );\n            },\n        );\n\n        const nextParams: OnRotateGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\n\n        datas.isRotate = result !== false;\n\n        return datas.isRotate ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroup, e: any) {\n        const { inputEvent, datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const parentRotate = params.beforeDist;\n        const deg = params.beforeDelta;\n        const rad = deg / 180 * Math.PI;\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControl\",\n            datas,\n            { ...e, parentRotate },\n            (child, childDatas, result, i) => {\n                const [prevX, prevY] = childDatas.prevClient;\n                const [clientX, clientY] = rotateMatrix([prevX, prevY], rad);\n                const delta = [clientX - prevX, clientY - prevY];\n\n                childDatas.prevClient = [clientX, clientY];\n\n                const dragResult = Draggable.drag(\n                    child,\n                    setCustomDrag(child.state, delta, inputEvent, false),\n                );\n                result.drag = dragResult;\n            },\n        );\n        moveable.rotation = params.beforeRotate;\n\n        const nextParams: OnRotateGroup = {\n            targets: moveable.props.targets!,\n            events,\n            set: (rotation: number) => {\n                moveable.rotation = rotation;\n            },\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onRotateGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroup, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        triggerChildAble(moveable, this, \"dragControlEnd\", datas, e);\n\n        const nextParams: OnRotateGroupEnd = fillParams(moveable, e, {\n            targets: moveable.props.targets!,\n            isDrag,\n        });\n\n        triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Rotatable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.deltaRotate=0] -  delta number of rotation\n     * @param {number} [e.isInstant] - Whether to execute the request instantly\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"rotatable\", { deltaRotate: 10, isInstant: true });\n     *\n     * // requestStart\n     * const requester = moveable.request(\"rotatable\");\n     *\n     * // request\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request() {\n        const datas = {};\n        let distRotate = 0;\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                distRotate += e.deltaRotate;\n\n                return { datas, parentDist: distRotate };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n","import MoveableManager from \"./MoveableManager\";\nimport { prefix, getControlTransform, throttle } from \"./utils\";\nimport { ResizableProps, ScalableProps, WarpableProps, Renderer } from \"./types\";\nimport { DIRECTION_INDEXES, DIRECTION_ROTATIONS } from \"./consts\";\nimport { IObject } from \"@daybrush/utils\";\n\nexport function renderControls(\n    moveable: MoveableManager<Partial<ResizableProps & ScalableProps & WarpableProps>>,\n    defaultDirections: string[],\n    React: Renderer,\n): any[] {\n    const {\n        pos1, pos2, pos3, pos4,\n        rotation,\n    } = moveable.state;\n    const {\n        renderDirections: directions = defaultDirections,\n    } = moveable.props;\n    const poses = [pos1, pos2, pos3, pos4];\n\n    const directionMap: IObject<boolean> = {};\n    directions.forEach(direction => {\n        directionMap[direction] = true;\n    });\n    return directions.map(direction => {\n        const indexes = DIRECTION_INDEXES[direction];\n\n        if (!indexes || !directionMap[direction]) {\n            return null;\n        }\n        const directionRotation = (throttle(rotation / Math.PI * 180, 15) + DIRECTION_ROTATIONS[direction]) % 180;\n\n        return (\n            <div className={prefix(\"control\", \"direction\", direction)}\n                data-rotation={directionRotation} data-direction={direction} key={`direction-${direction}`}\n                style={getControlTransform(rotation, ...indexes.map(index => poses[index]))}></div>\n        );\n    });\n}\nexport function renderAllDirections(\n    moveable: MoveableManager<Partial<ResizableProps & ScalableProps & WarpableProps>>,\n    React: Renderer,\n) {\n    return renderControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\", \"n\", \"w\", \"s\", \"e\"], React);\n}\nexport function renderDiagonalDirections(\n    moveable: MoveableManager<Partial<ResizableProps & ScalableProps & WarpableProps>>,\n    React: Renderer,\n): any[] {\n    return renderControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], React);\n}\n","import {\n    throttle, getDirection, triggerEvent,\n    getAbsolutePosesByState, fillParams, getKeepRatioHeight, getKeepRatioWidth, getCSSSize, getDistSize,\n} from \"../utils\";\nimport {\n    setDragStart,\n    getDragDist,\n    getResizeDist,\n    getPosByReverseDirection,\n    getStartDirection,\n    getAbsoluteFixedPosition,\n} from \"../DraggerUtils\";\nimport {\n    ResizableProps, OnResizeGroup, OnResizeGroupEnd,\n    Renderer, OnResizeGroupStart, DraggableProps, OnDrag, OnResizeStart, SnappableState,\n    OnResize, OnResizeEnd,\n} from \"../types\";\nimport MoveableManager from \"../MoveableManager\";\nimport { renderAllDirections, renderDiagonalDirections } from \"../renderDirection\";\nimport MoveableGroup from \"../MoveableGroup\";\nimport {\n    triggerChildAble,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { getRad, caculate, createRotateMatrix, plus } from \"@moveable/matrix\";\nimport CustomDragger, { setCustomDrag } from \"../CustomDragger\";\nimport { checkSnapSize } from \"./Snappable\";\nimport {\n    directionCondition,\n} from \"./utils\";\nimport { IObject } from \"@daybrush/utils\";\nimport { TINY_NUM } from \"../consts\";\n\n/**\n * @namespace Resizable\n * @memberof Moveable\n */\n\nexport default {\n    name: \"resizable\",\n    ableGroup: \"size\",\n    updateRect: true,\n    canPinch: true,\n    props: {\n        resizable: Boolean,\n        throttleResize: Number,\n        renderDirections: Array,\n        baseDirection: Array,\n        keepRatio: Boolean,\n    },\n    render(moveable: MoveableManager<Partial<ResizableProps>>, React: Renderer): any[] | undefined {\n        const { resizable, edge } = moveable.props;\n        if (resizable) {\n            if (edge) {\n                return renderDiagonalDirections(moveable, React);\n            }\n            return renderAllDirections(moveable, React);\n        }\n    },\n    dragControlCondition: directionCondition,\n    dragControlStart(\n        moveable: MoveableManager<ResizableProps & DraggableProps, SnappableState>,\n        e: any,\n    ) {\n        const {\n            inputEvent,\n            pinchFlag,\n            parentDirection,\n            datas,\n        } = e;\n\n        const direction = parentDirection || (pinchFlag ? [1, 1] : getDirection(inputEvent.target));\n\n        const { target, width, height } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        !pinchFlag && setDragStart(moveable, { datas });\n\n        datas.datas = {};\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.prevWidth = 0;\n        datas.prevHeight = 0;\n        [\n            datas.startWidth,\n            datas.startHeight,\n        ] = getCSSSize(target);\n        datas.transformOrigin = moveable.props.transformOrigin;\n        datas.startDirection = getStartDirection(moveable, direction);\n        datas.fixedPosition = getAbsoluteFixedPosition(moveable, datas.startDirection);\n        datas.fixedOriginalPosition = getAbsoluteFixedPosition(moveable, direction);\n\n        const params = fillParams<OnResizeStart>(moveable, e, {\n            direction,\n            set: ([startWidth, startHeight]: number[]) => {\n                datas.startWidth = startWidth;\n                datas.startHeight = startHeight;\n            },\n            setOrigin: (origin: Array<string | number>) => {\n                datas.transformOrigin = origin;\n            },\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomDragger().dragStart([0, 0], inputEvent),\n            ),\n        });\n        const result = triggerEvent(moveable, \"onResizeStart\", params);\n        if (result !== false) {\n            datas.isResize = true;\n            moveable.state.snapRenderInfo = {\n                direction,\n            };\n        }\n        return datas.isResize ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManager<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const {\n            datas,\n            distX, distY,\n            parentFlag, pinchFlag,\n            parentDistance, parentScale, inputEvent,\n            parentKeepRatio,\n            dragClient,\n            parentDist,\n        } = e;\n        const {\n            direction,\n            isResize,\n            transformOrigin,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        const {\n            startWidth,\n            startHeight,\n            startOffsetWidth,\n            startOffsetHeight,\n            prevWidth,\n            prevHeight,\n        } = datas;\n        const {\n            throttleResize = 0,\n            parentMoveable,\n        } = moveable.props;\n        let sizeDirection = direction;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = moveable.props.keepRatio || parentKeepRatio;\n        const isWidth = sizeDirection[0] || !sizeDirection[1];\n        const ratio = isWidth ? startOffsetHeight / startOffsetWidth : startOffsetWidth / startOffsetHeight;\n        const startDirection = keepRatio || parentFlag ? direction : datas.startDirection;\n        const fixedPosition = dragClient || (keepRatio ? datas.fixedOriginalPosition : datas.fixedPosition);\n        let distWidth: number = 0;\n        let distHeight: number = 0;\n\n        if (parentDist) {\n            distWidth = parentDist[0];\n            distHeight = parentDist[1];\n        } else if (parentScale) {\n            distWidth = (parentScale[0] - 1) * startOffsetWidth;\n            distHeight = (parentScale[1] - 1) * startOffsetHeight;\n\n        } else if (pinchFlag) {\n            if (parentDistance) {\n                distWidth = parentDistance;\n                distHeight = parentDistance * startOffsetHeight / startOffsetWidth;\n            }\n        } else {\n            const dist = getDragDist({ datas, distX, distY });\n\n            distWidth = sizeDirection[0] * dist[0];\n            distHeight = sizeDirection[1] * dist[1];\n\n            if (keepRatio && startOffsetWidth && startOffsetHeight) {\n                const rad = getRad([0, 0], dist);\n                const standardRad = getRad([0, 0], sizeDirection);\n                const ratioRad = getRad([0, 0], [startOffsetWidth, startOffsetHeight]);\n                const size = getDistSize([distWidth, distHeight]);\n                const signSize = Math.cos(rad - standardRad) * size;\n\n                if (!sizeDirection[0]) {\n                    // top, bottom\n                    distHeight = signSize;\n                    distWidth = getKeepRatioWidth(distHeight, isWidth, ratio);\n                } else if (!sizeDirection[1]) {\n                    // left, right\n                    distWidth = signSize;\n                    distHeight = getKeepRatioHeight(distWidth, isWidth, ratio);\n                } else {\n                    // two-way\n                    distWidth = Math.cos(ratioRad) * signSize;\n                    distHeight = Math.sin(ratioRad) * signSize;\n                }\n            }\n        }\n        let nextWidth = sizeDirection[0] || keepRatio\n            ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\n        let nextHeight = sizeDirection[1] || keepRatio\n            ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\n\n        if (keepRatio && startOffsetWidth && startOffsetHeight) {\n            // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\n            nextHeight = nextWidth * startOffsetHeight / startOffsetWidth;\n        }\n        let snapDist = [0, 0];\n\n        if (!pinchFlag) {\n            snapDist = checkSnapSize(\n                moveable, nextWidth,\n                nextHeight, direction,\n                datas.fixedOriginalPosition,\n                parentDist,\n                datas,\n            );\n        }\n        if (parentDist) {\n            !parentDist[0] && (snapDist[0] = 0);\n            !parentDist[1] && (snapDist[1] = 0);\n        }\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    nextWidth = throttle(nextWidth, throttleResize!);\n                } else {\n                    nextHeight = throttle(nextHeight, throttleResize!);\n                }\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                nextWidth += snapDist[0];\n                nextHeight = getKeepRatioHeight(nextWidth, isWidth, ratio);\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                nextHeight += snapDist[1];\n                nextWidth = getKeepRatioWidth(nextHeight, isWidth, ratio);\n            }\n        } else {\n            nextWidth += snapDist[0];\n            nextHeight += snapDist[1];\n            if (!snapDist[0]) {\n                nextWidth = throttle(nextWidth, throttleResize!);\n            }\n            if (!snapDist[1]) {\n                nextHeight = throttle(nextHeight, throttleResize!);\n            }\n        }\n        nextWidth = Math.round(nextWidth);\n        nextHeight = Math.round(nextHeight);\n\n        distWidth = nextWidth - startOffsetWidth;\n        distHeight = nextHeight - startOffsetHeight;\n\n        const delta = [distWidth - prevWidth, distHeight - prevHeight];\n\n        datas.prevWidth = distWidth;\n        datas.prevHeight = distHeight;\n\n        if (!parentMoveable && delta.every(num => !num)) {\n            return;\n        }\n\n        const inverseDelta = !parentFlag && pinchFlag\n            ? [0, 0]\n            : getResizeDist(\n                moveable,\n                nextWidth, nextHeight,\n                startDirection, fixedPosition, transformOrigin);\n\n        const params = fillParams<OnResize>(moveable, e, {\n            width: startWidth + distWidth,\n            height: startHeight + distHeight,\n            offsetWidth: nextWidth,\n            offsetHeight: nextHeight,\n            direction,\n            dist: [distWidth, distHeight],\n            delta,\n            isPinch: !!pinchFlag,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(moveable.state, inverseDelta, inputEvent, false),\n            ) as OnDrag,\n        });\n        triggerEvent(moveable, \"onResize\", params);\n        return params;\n    },\n    dragControlAfter(\n        moveable: MoveableManager<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            isResize,\n            startOffsetWidth,\n            startOffsetHeight,\n            prevWidth,\n            prevHeight,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const errorWidth = width - (startOffsetWidth + prevWidth);\n        const errorHeight = height - (startOffsetHeight + prevHeight);\n        const isErrorWidth = Math.abs(errorWidth) > 3;\n        const isErrorHeight = Math.abs(errorHeight) > 3;\n\n        if (isErrorWidth) {\n            datas.startWidth += errorWidth;\n            datas.startOffsetWidth += errorWidth;\n            datas.prevWidth += errorWidth;\n        }\n        if (isErrorHeight) {\n            datas.startHeight += errorHeight;\n            datas.startOffsetHeight += errorHeight;\n            datas.prevHeight += errorHeight;\n        }\n        if (isErrorWidth || isErrorHeight) {\n            this.dragControl(moveable, e);\n            return true;\n        }\n    },\n    dragControlEnd(\n        moveable: MoveableManager<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isResize) {\n            return false;\n        }\n        datas.isResize = false;\n\n        const params = fillParams<OnResizeEnd>(moveable, e, {\n            isDrag,\n        });\n        triggerEvent(moveable, \"onResizeEnd\", params);\n        return isDrag;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroup, e: any) {\n        const { datas } = e;\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const direction = params.direction;\n        const startPos = getPosByReverseDirection(getAbsolutePosesByState(moveable.state), direction);\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControlStart\",\n            datas,\n            (child, childDatas) => {\n                const pos = getPosByReverseDirection(getAbsolutePosesByState(child.state), direction);\n                const [originalX, originalY] = caculate(\n                    createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                    [pos[0] - startPos[0], pos[1] - startPos[1], 1],\n                    3,\n                );\n                childDatas.originalX = originalX;\n                childDatas.originalY = originalY;\n\n                return e;\n            },\n        );\n\n        const nextParams: OnResizeGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onResizeGroupStart\", nextParams);\n\n        datas.isResize = result !== false;\n        return datas.isResize ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroup, e: any) {\n        const { datas } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const {\n            offsetWidth, offsetHeight, dist,\n        } = params;\n\n        const keepRatio = moveable.props.keepRatio;\n\n        const parentScale = [\n            offsetWidth / (offsetWidth - dist[0]),\n            offsetHeight / (offsetHeight - dist[1]),\n        ];\n        const fixedPosition = datas.fixedOriginalPosition;\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControl\",\n            datas,\n            (_, childDatas) => {\n                const [clientX, clientY] = caculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        childDatas.originalX * parentScale[0],\n                        childDatas.originalY * parentScale[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...e,\n                    parentScale,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                    parentKeepRatio: keepRatio,\n                };\n            },\n        );\n        const nextParams: OnResizeGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onResizeGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroup, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isResize) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        triggerChildAble(moveable, this, \"dragControlEnd\", datas, e);\n\n        const nextParams: OnResizeGroupEnd = fillParams<OnResizeGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            isDrag,\n        });\n\n        triggerEvent(moveable, \"onResizeGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Resizable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.direction=[1, 1]] - Direction to resize\n     * @param {number} [e.deltaWidth] - delta number of width\n     * @param {number} [e.deltaHeight] - delta number of height\n     * @param {number} [e.isInstant] - Whether to execute the request instantly\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10, isInstant: true });\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100, isInstant: true });\n     *\n     * // requestStart\n     * const requester = moveable.request(\"resizable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100, isInstant: true });\n     * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100, isInstant: true });\n     * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100, isInstant: true });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManager<any>) {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n        const rect = moveable.getRect();\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                if (\"offsetWidth\" in e) {\n                    distWidth = e.offsetWidth - rect.offsetWidth;\n                } else if (\"deltaWidth\" in e) {\n                    distWidth += e.deltaWidth;\n                }\n                if (\"offsetHeight\" in e) {\n                    distHeight = e.offsetHeight - rect.offsetHeight;\n                } else if (\"deltaHeight\" in e) {\n                    distHeight += e.deltaHeight;\n                }\n\n                return { datas, parentDist: [distWidth, distHeight] };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n","import {\n    throttle, getDirection, triggerEvent, multiply2,\n    fillParams, getKeepRatioHeight, getKeepRatioWidth, getDistSize,\n} from \"../utils\";\nimport { MIN_SCALE } from \"../consts\";\nimport {\n    setDragStart, getDragDist,\n    getScaleDist,\n    getAbsoluteFixedPosition,\n} from \"../DraggerUtils\";\nimport MoveableManager from \"../MoveableManager\";\nimport { renderAllDirections, renderDiagonalDirections } from \"../renderDirection\";\nimport {\n    ScalableProps, ResizableProps, OnScaleGroup, OnScaleGroupEnd,\n    Renderer, OnScaleGroupStart, DraggableProps, OnDragStart,\n    OnDrag, SnappableState, GroupableProps, OnScaleStart, OnScale, OnScaleEnd,\n} from \"../types\";\nimport {\n    triggerChildAble,\n} from \"../groupUtils\";\nimport MoveableGroup from \"../MoveableGroup\";\nimport Draggable from \"./Draggable\";\nimport { getRad, caculate, createRotateMatrix, plus } from \"@moveable/matrix\";\nimport CustomDragger, { setCustomDrag } from \"../CustomDragger\";\nimport { checkSnapScale } from \"./Snappable\";\nimport { isArray, IObject } from \"@daybrush/utils\";\nimport {\n    directionCondition,\n} from \"./utils\";\n\n/**\n * @namespace Scalable\n * @memberof Moveable\n */\nexport default {\n    name: \"scalable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        scalable: Boolean,\n        throttleScale: Number,\n        renderDirections: String,\n        keepRatio: Boolean,\n    },\n    render(moveable: MoveableManager<Partial<ResizableProps & ScalableProps>>, React: Renderer): any[] | undefined {\n        const { resizable, scalable, edge } = moveable.props;\n        if (!resizable && scalable) {\n            if (edge) {\n                return renderDiagonalDirections(moveable, React);\n            }\n            return renderAllDirections(moveable, React);\n        }\n    },\n    dragControlCondition: directionCondition,\n    dragControlStart(\n        moveable: MoveableManager<ScalableProps & DraggableProps, SnappableState>,\n        e: any) {\n\n        const { datas, pinchFlag, inputEvent, parentDirection } = e;\n        const direction = parentDirection || (pinchFlag ? [1, 1] : getDirection(inputEvent.target));\n        const {\n            width,\n            height,\n            targetTransform,\n            target,\n        } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (!pinchFlag) {\n            setDragStart(moveable, { datas });\n        }\n\n        datas.datas = {};\n        datas.transform = targetTransform;\n        datas.prevDist = [1, 1];\n        datas.direction = direction;\n        datas.width = width;\n        datas.height = height;\n        datas.startScale = [1, 1];\n        datas.fixedPosition = getAbsoluteFixedPosition(moveable, direction);\n\n        const params = fillParams<OnScaleStart>(moveable, e, {\n            direction,\n            set: (scale: number[]) => {\n                datas.startScale = scale;\n            },\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomDragger().dragStart([0, 0], inputEvent),\n            ) as OnDragStart,\n        });\n        const result = triggerEvent(moveable, \"onScaleStart\", params);\n\n        if (result !== false) {\n            datas.isScale = true;\n            moveable.state.snapRenderInfo = {\n                direction,\n            };\n\n        }\n        return datas.isScale ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManager<ScalableProps & DraggableProps & GroupableProps, SnappableState>,\n        e: any) {\n        const {\n            datas, distX, distY,\n            parentScale,\n            parentDistance,\n            parentKeepRatio,\n            parentFlag, pinchFlag, inputEvent,\n            dragClient,\n            parentDist,\n        } = e;\n        const {\n            prevDist,\n            direction,\n            width,\n            height,\n            transform,\n            isScale,\n            startScale,\n        } = datas;\n\n        if (!isScale) {\n            return false;\n        }\n\n        const {\n            throttleScale,\n            parentMoveable,\n        } = moveable.props;\n        const keepRatio = moveable.props.keepRatio || parentKeepRatio;\n        const state = moveable.state;\n        const isWidth = direction[0] || !direction[1];\n        const startWidth = width * startScale[0];\n        const startHeight = height * startScale[1];\n        const ratio = isWidth ? startHeight / startWidth : startWidth / startHeight;\n        let scaleX: number = 1;\n        let scaleY: number = 1;\n\n        if (parentScale) {\n            scaleX = parentScale[0];\n            scaleY = parentScale[1];\n        } else if (pinchFlag) {\n            if (parentDistance) {\n                scaleX = (width + parentDistance) / width;\n                scaleY = (height + parentDistance * height / width) / height;\n            }\n        } else {\n            const dist = getDragDist({ datas, distX, distY });\n            let distWidth = direction[0] * dist[0];\n            let distHeight = direction[1] * dist[1];\n\n            if (keepRatio && width && height) {\n                const rad = getRad([0, 0], dist);\n                const standardRad = getRad([0, 0], direction);\n                const ratioRad = getRad([0, 0], [startWidth, startHeight]);\n                const size = getDistSize([distWidth, distHeight]);\n                const signSize = Math.cos(rad - standardRad) * size;\n\n                if (!direction[0]) {\n                    // top, bottom\n                    distHeight = signSize;\n                    distWidth = getKeepRatioWidth(distHeight, isWidth, ratio);\n                } else if (!direction[1]) {\n                    // left, right\n                    distWidth = signSize;\n                    distHeight = getKeepRatioHeight(distWidth, isWidth, ratio);\n                } else {\n                    // two-way\n                    distWidth = Math.cos(ratioRad) * signSize;\n                    distHeight = Math.sin(ratioRad) * signSize;\n                }\n            }\n            scaleX = (width + distWidth) / width;\n            scaleY = (height + distHeight) / height;\n        }\n        scaleX = direction[0] || keepRatio ? scaleX * startScale[0] : startScale[0];\n        scaleY = direction[1] || keepRatio ? scaleY * startScale[1] : startScale[1];\n\n        if (scaleX === 0) {\n            scaleX = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (scaleY === 0) {\n            scaleY = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n\n        const nowDist = [scaleX / startScale[0], scaleY / startScale[1]];\n        let scale = [scaleX, scaleY];\n        let snapDirection = direction;\n\n        if (moveable.props.groupable) {\n            snapDirection = [\n                (nowDist[0] >= 0 ? 1 : -1) * direction[0],\n                (nowDist[1] >= 0 ? 1 : -1) * direction[1],\n            ];\n            const snapRenderInfo = state.snapRenderInfo || {};\n            const stateDirection = snapRenderInfo.direction;\n\n            if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\n                state.snapRenderInfo = { direction };\n            }\n        }\n        let snapDist = [0, 0];\n\n        if (!pinchFlag) {\n            snapDist = checkSnapScale(\n                moveable,\n                nowDist,\n                direction,\n                snapDirection,\n                datas.fixedPosition,\n                parentDist,\n                datas,\n            );\n        }\n\n        if (keepRatio) {\n            if (direction[0] && direction[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    nowDist[0] = throttle(nowDist[0] * startScale[0], throttleScale!) / startScale[0];\n                } else {\n                    nowDist[1] = throttle(nowDist[1] * startScale[1], throttleScale!) / startScale[1];\n                }\n            }\n\n            if (\n                (direction[0] && !direction[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                nowDist[0] += snapDist[0];\n                const snapHeight = getKeepRatioHeight(width * nowDist[0] * startScale[0], isWidth, ratio);\n\n                nowDist[1] = snapHeight / height / startScale[1];\n            } else if (\n                (!direction[0] && direction[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                nowDist[1] += snapDist[1];\n                const snapWidth = getKeepRatioWidth(height * nowDist[1] * startScale[1], isWidth, ratio);\n\n                nowDist[0] = snapWidth / width / startScale[0];\n            }\n        } else {\n            nowDist[0] += snapDist[0];\n            nowDist[1] += snapDist[1];\n            if (!snapDist[0]) {\n                nowDist[0] = throttle(nowDist[0] * startScale[0], throttleScale!) / startScale[0];\n            }\n            if (!snapDist[1]) {\n                nowDist[1] = throttle(nowDist[1] * startScale[1], throttleScale!) / startScale[1];\n            }\n        }\n        if (nowDist[0] === 0) {\n            nowDist[0] = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (nowDist[1] === 0) {\n            nowDist[1] = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        const delta = [nowDist[0] / prevDist[0], nowDist[1] / prevDist[1]];\n        scale = multiply2(nowDist, startScale);\n\n        datas.prevDist = nowDist;\n\n        if (scaleX === prevDist[0] && scaleY === prevDist[1] && !parentMoveable) {\n            return false;\n        }\n        const inverseDelta = !parentFlag && pinchFlag\n            ? [0, 0]\n            : getScaleDist(moveable, delta, direction, dragClient);\n\n        const params = fillParams<OnScale>(moveable, e, {\n            scale,\n            direction,\n            dist: nowDist,\n            delta,\n            transform: `${transform} scale(${scaleX}, ${scaleY})`,\n            isPinch: !!pinchFlag,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(moveable.state, inverseDelta, inputEvent, false),\n            ) as OnDrag,\n        });\n        triggerEvent(moveable, \"onScale\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManager<ScalableProps>, e: any) {\n        const { datas, isDrag } = e;\n        if (!datas.isScale) {\n            return false;\n        }\n\n        datas.isScale = false;\n\n        triggerEvent(moveable, \"onScaleEnd\", fillParams<OnScaleEnd>(moveable, e, {\n            isDrag,\n        }));\n        return isDrag;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroup, e: any) {\n        const { datas } = e;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const direction = params.direction;\n        const startPos = getAbsoluteFixedPosition(moveable, direction);\n\n        datas.startPos = startPos;\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControlStart\",\n            datas,\n            (child, childDatas) => {\n                const pos = getAbsoluteFixedPosition(child, direction);\n                const [originalX, originalY] = caculate(\n                    createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                    [pos[0] - startPos[0], pos[1] - startPos[1], 1],\n                    3,\n                );\n                childDatas.originalX = originalX;\n                childDatas.originalY = originalY;\n\n                return e;\n            },\n        );\n\n        const nextParams: OnScaleGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\n\n        datas.isScale = result !== false;\n        return datas.isScale ? nextParams : false;\n    },\n    dragGroupControl(moveable: MoveableGroup, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n        if (!params) {\n            return;\n        }\n        const keepRatio = moveable.props.keepRatio;\n        const { scale } = params;\n        const startPos = datas.startPos;\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControl\",\n            datas,\n            (_, childDatas) => {\n                const [clientX, clientY] = caculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        childDatas.originalX * scale[0],\n                        childDatas.originalY * scale[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...e,\n                    parentScale: scale,\n                    parentKeepRatio: keepRatio,\n                    dragClient: plus(startPos, [clientX, clientY]),\n                };\n            },\n        );\n        const nextParams: OnScaleGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onScaleGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroup, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isScale) {\n            return;\n        }\n        this.dragControlEnd(moveable, e);\n        triggerChildAble(moveable, this, \"dragControlEnd\", datas, e);\n\n        const nextParams = fillParams<OnScaleGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            isDrag,\n        });\n\n        triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Scalable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.direction=[1, 1]] - Direction to scale\n     * @param {number} [e.deltaWidth] - delta number of width\n     * @param {number} [e.deltaHeight] - delta number of height\n     * @param {number} [e.isInstant] - Whether to execute the request instantly\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10, isInstant: true });\n     *\n     * // requestStart\n     * const requester = moveable.request(\"scalable\");\n     *\n     * // request\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request() {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                distWidth += e.deltaWidth;\n                distHeight += e.deltaHeight;\n\n                return { datas, parentDist: [distWidth, distHeight] };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n","import { prefix, getLineStyle, getDirection, getAbsolutePosesByState, triggerEvent, fillParams } from \"../utils\";\nimport {\n    convertDimension, invert, multiply,\n    convertMatrixtoCSS, caculate,\n    createIdentityMatrix,\n    ignoreDimension,\n    multiplyCSS,\n    minus,\n    createWarpMatrix,\n    getRad,\n    plus,\n} from \"@moveable/matrix\";\nimport { NEARBY_POS } from \"../consts\";\nimport { setDragStart, getDragDist, getPosIndexesByDirection } from \"../DraggerUtils\";\nimport MoveableManager from \"../MoveableManager\";\nimport {\n    WarpableProps, ScalableProps, ResizableProps,\n    Renderer, SnappableProps, SnappableState,\n    OnWarpStart, OnWarp, OnWarpEnd,\n} from \"../types\";\nimport { hasClass, dot } from \"@daybrush/utils\";\nimport { renderAllDirections } from \"../renderDirection\";\nimport { hasGuidelines, checkSnapBounds } from \"./Snappable\";\n\nfunction getMiddleLinePos(pos1: number[], pos2: number[]) {\n    return pos1.map((pos, i) => dot(pos, pos2[i], 1, 2));\n}\n\nfunction getTriangleRad(pos1: number[], pos2: number[], pos3: number[]) {\n    // pos1 Rad\n    const rad1 = getRad(pos1, pos2);\n    const rad2 = getRad(pos1, pos3);\n\n    const rad = rad2 - rad1;\n\n    return rad >= 0 ? rad : rad + 2 * Math.PI;\n}\n\nfunction isValidPos(poses1: number[][], poses2: number[][]) {\n    const rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\n    const rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\n    const pi = Math.PI;\n\n    if ((rad1 >= pi && rad2 <= pi) || (rad1 <= pi && rad2 >= pi)) {\n        return false;\n    }\n    return true;\n}\n\nexport default {\n    name: \"warpable\",\n    ableGroup: \"size\",\n    props: {\n        warpable: Boolean,\n        renderDirections: Array,\n    },\n    render(moveable: MoveableManager<ResizableProps & ScalableProps & WarpableProps>, React: Renderer) {\n        const { resizable, scalable, warpable } = moveable.props;\n\n        if (resizable || scalable || !warpable) {\n            return;\n        }\n        const { pos1, pos2, pos3, pos4 } = moveable.state;\n\n        const linePosFrom1 = getMiddleLinePos(pos1, pos2);\n        const linePosFrom2 = getMiddleLinePos(pos2, pos1);\n        const linePosFrom3 = getMiddleLinePos(pos1, pos3);\n        const linePosFrom4 = getMiddleLinePos(pos3, pos1);\n        const linePosTo1 = getMiddleLinePos(pos3, pos4);\n        const linePosTo2 = getMiddleLinePos(pos4, pos3);\n        const linePosTo3 = getMiddleLinePos(pos2, pos4);\n        const linePosTo4 = getMiddleLinePos(pos4, pos2);\n\n        return [\n            <div className={prefix(\"line\")} key=\"middeLine1\" style={getLineStyle(linePosFrom1, linePosTo1)}></div>,\n            <div className={prefix(\"line\")} key=\"middeLine2\" style={getLineStyle(linePosFrom2, linePosTo2)}></div>,\n            <div className={prefix(\"line\")} key=\"middeLine3\" style={getLineStyle(linePosFrom3, linePosTo3)}></div>,\n            <div className={prefix(\"line\")} key=\"middeLine4\" style={getLineStyle(linePosFrom4, linePosTo4)}></div>,\n            ...renderAllDirections(moveable, React),\n        ];\n    },\n    dragControlCondition(e: any) {\n        if (e.isRequest) {\n            return false;\n        }\n        return hasClass(e.inputEvent.target, prefix(\"direction\"));\n    },\n    dragControlStart(\n        moveable: MoveableManager<WarpableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, inputEvent } = e;\n        const { target } = moveable.props;\n        const { target: inputTarget } = inputEvent;\n        const direction = getDirection(inputTarget);\n\n        if (!direction || !target) {\n            return false;\n        }\n        const state = moveable.state;\n        const {\n            transformOrigin, is3d,\n            targetTransform, targetMatrix,\n            width, height,\n            left, top,\n        } = state;\n\n        datas.datas = {};\n        datas.targetTransform = targetTransform;\n        datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\n        datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\n        datas.direction = direction;\n        datas.left = left;\n        datas.top = top;\n\n        setDragStart(moveable, { datas });\n        datas.poses = [\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n        ].map((p, i) => minus(p, transformOrigin));\n\n        datas.nextPoses = datas.poses.map(([x, y]: number[]) => caculate(datas.warpTargetMatrix, [x, y, 0, 1], 4));\n        datas.startMatrix = createIdentityMatrix(4);\n        datas.prevMatrix = createIdentityMatrix(4);\n        datas.absolutePoses = getAbsolutePosesByState(state);\n        datas.posIndexes = getPosIndexesByDirection(direction);\n        state.snapRenderInfo = {\n            direction,\n        };\n\n        const params = fillParams<OnWarpStart>(moveable, e, {\n            set: (matrix: number[]) => {\n                datas.startMatrix = matrix;\n            },\n        });\n        const result = triggerEvent(moveable, \"onWarpStart\", params);\n        if (result !== false) {\n            datas.isWarp = true;\n        }\n        return datas.isWarp;\n    },\n    dragControl(\n        moveable: MoveableManager<WarpableProps & SnappableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas } = e;\n        let { distX, distY } = e;\n        const {\n            targetInverseMatrix, prevMatrix, isWarp, startMatrix,\n            poses,\n            posIndexes,\n            absolutePoses,\n        } = datas;\n\n        if (!isWarp) {\n            return false;\n        }\n\n        if (hasGuidelines(moveable, \"warpable\")) {\n            const selectedPoses: number[][] = posIndexes.map((index: number) => absolutePoses[index]);\n\n            if (selectedPoses.length > 1) {\n                selectedPoses.push([\n                    (selectedPoses[0][0] + selectedPoses[1][0]) / 2,\n                    (selectedPoses[0][1] + selectedPoses[1][1]) / 2,\n                ]);\n            }\n\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkSnapBounds(\n                moveable,\n                selectedPoses.map(pos => [pos[0] + distX, pos[1] + distY]),\n            );\n\n            distY -= horizontalSnapInfo.offset;\n            distX -= verticalSnapInfo.offset;\n        }\n\n        const dist = getDragDist({ datas, distX, distY }, true);\n        const nextPoses = datas.nextPoses.slice();\n\n        posIndexes.forEach((index: number) => {\n            nextPoses[index] = plus(nextPoses[index], dist);\n        });\n\n        if (!NEARBY_POS.every(\n            nearByPoses => isValidPos(nearByPoses.map(i => poses[i]), nearByPoses.map(i => nextPoses[i])),\n        )) {\n            return false;\n        }\n        const h = createWarpMatrix(\n            poses[0],\n            poses[1],\n            poses[2],\n            poses[3],\n            nextPoses[0],\n            nextPoses[1],\n            nextPoses[2],\n            nextPoses[3],\n        );\n\n        if (!h.length) {\n            return false;\n        }\n\n        const matrix = convertMatrixtoCSS(multiply(targetInverseMatrix, h, 4));\n        const transform = `${datas.targetTransform} matrix3d(${matrix.join(\",\")})`;\n\n        const delta = multiplyCSS(invert(prevMatrix, 4), matrix, 4);\n\n        datas.prevMatrix = matrix;\n\n        triggerEvent(moveable, \"onWarp\", fillParams<OnWarp>(moveable, e, {\n            delta,\n            matrix: multiplyCSS(startMatrix, matrix, 4),\n            multiply: multiplyCSS,\n            dist: matrix,\n            transform,\n        }));\n        return true;\n    },\n    dragControlEnd(\n        moveable: MoveableManager<WarpableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isWarp) {\n            return false;\n        }\n        datas.isWarp = false;\n\n        triggerEvent(moveable, \"onWarpEnd\", fillParams<OnWarpEnd>(moveable, e, {\n            isDrag,\n        }));\n        return isDrag;\n    },\n};\n","import { prefix } from \"./utils\";\n\nexport const AREA = prefix(\"area\");\nexport const AREA_PIECES = prefix(\"area-pieces\");\nexport const AREA_PIECE = prefix(\"area-piece\");\nexport const AVOID = prefix(\"avoid\");\n","import MoveableManager from \"../MoveableManager\";\nimport {\n    createWarpMatrix, convertMatrixtoCSS,\n    caculate, convertPositionMatrix, invert, minus, plus,\n} from \"@moveable/matrix\";\nimport { ref } from \"framework-utils\";\nimport { triggerEvent, fillParams, getRect, caculatePoses } from \"../utils\";\nimport { Renderer, GroupableProps, DragAreaProps, OnClick } from \"../types\";\nimport { AREA_PIECE, AREA, AVOID, AREA_PIECES } from \"../classNames\";\nimport MoveableGroup from \"../MoveableGroup\";\nimport { addClass, findIndex, removeClass } from \"@daybrush/utils\";\n\nfunction restoreStyle(moveable: MoveableManager) {\n    const el = moveable.areaElement;\n    const { width, height } = moveable.state;\n\n    removeClass(el, AVOID);\n\n    el.style.cssText += `left: 0px; top: 0px; width: ${width}px; height: ${height}px`;\n}\n\nfunction renderPieces(React: Renderer): any {\n    return (<div key=\"area_pieces\" className={AREA_PIECES}>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n    </div>);\n}\nexport default {\n    name: \"dragArea\",\n    props: {\n        dragArea: Boolean,\n    },\n    render(moveable: MoveableManager<GroupableProps>, React: Renderer): any[] {\n        const { target, dragArea, groupable } = moveable.props;\n        const { width, height, pos1, pos2, pos3, pos4 } = moveable.state;\n\n        if (groupable) {\n            return [\n                <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={AREA}></div>,\n                renderPieces(React),\n            ];\n        }\n        if (!target || !dragArea) {\n            return [];\n        }\n        const h = createWarpMatrix(\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        );\n        const transform = h.length ? `matrix3d(${convertMatrixtoCSS(h).join(\",\")})` : \"none\";\n\n        return [\n            <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={AREA} style={{\n                top: \"0px\",\n                left: \"0px\",\n                width: `${width}px`,\n                height: `${height}px`,\n                transformOrigin: \"0 0\",\n                transform,\n            }}></div>,\n            renderPieces(React),\n        ];\n    },\n    dragStart(moveable: MoveableManager, { datas, clientX, clientY, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        datas.isDragArea = false;\n        datas.inputTarget = inputEvent.target;\n        const areaElement = moveable.areaElement;\n        const {\n            targetClientRect,\n            pos1, pos2, pos3, pos4,\n            width, height,\n            rootMatrix,\n            is3d,\n        } = moveable.state;\n        const { left, top } = targetClientRect;\n        const {\n            left: relativeLeft,\n            top: relativeTop,\n        } = getRect([pos1, pos2, pos3, pos4]);\n        const n = is3d ? 4 : 3;\n        const poses = caculatePoses(rootMatrix, width, height, n);\n        const {\n            left: rootLeft,\n            top: rootTop,\n        } = getRect(poses);\n\n        const rootRelativePos = minus(\n            [clientX, clientY],\n            plus([left - rootLeft, top - rootTop], poses[0]),\n        );\n\n        const [posX, posY] = caculate(\n            invert(rootMatrix, n),\n            convertPositionMatrix(rootRelativePos, n),\n            n,\n        );\n\n        const rects = [\n            { left: relativeLeft, top: relativeTop, width, height: posY - 10 },\n            { left: relativeLeft, top: relativeTop, width: posX - 10, height },\n            { left: relativeLeft, top: relativeTop + posY + 10, width, height: height - posY - 10 },\n            { left: relativeLeft + posX + 10, top: relativeTop, width: width - posX - 10, height },\n        ];\n\n        const children = [].slice.call(areaElement.nextElementSibling!.children) as HTMLElement[];\n        rects.forEach((rect, i) => {\n            children[i].style.cssText\n                = `left: ${rect.left}px;top: ${rect.top}px; width: ${rect.width}px; height: ${rect.height}px;`;\n        });\n        addClass(areaElement, AVOID);\n    },\n    drag(moveable: MoveableManager, { datas, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            datas.isDragArea = true;\n            restoreStyle(moveable);\n        }\n    },\n    dragEnd(moveable: MoveableManager<DragAreaProps>, e: any) {\n        if (!e.inputEvent) {\n            return false;\n        }\n        const { inputEvent, isDragArea, datas } = e;\n        if (!datas.isDragArea) {\n            restoreStyle(moveable);\n        }\n\n        const target = moveable.state.target!;\n        const inputTarget = inputEvent.target;\n\n        if (isDragArea || moveable.isMoveableElement(inputTarget)) {\n            return;\n        }\n        const containsTarget = target.contains(inputTarget);\n\n        triggerEvent(moveable, \"onClick\", fillParams<OnClick>(moveable, e, {\n            inputTarget,\n            isTarget: target === inputTarget,\n            containsTarget,\n        }));\n    },\n    dragGroupStart(moveable: MoveableGroup, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragGroup(moveable: MoveableGroup, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroup,\n        e: any,\n    ) {\n        const { inputEvent, isDragArea, datas } = e;\n        if (!inputEvent) {\n            return false;\n        }\n        if (!isDragArea) {\n            restoreStyle(moveable);\n        }\n        const prevInputTarget = datas.inputTarget;\n        const inputTarget = inputEvent.target;\n\n        if (isDragArea || moveable.isMoveableElement(inputTarget) || prevInputTarget === inputTarget) {\n            return;\n        }\n        const targets = moveable.props.targets!;\n        let targetIndex = targets.indexOf(inputTarget);\n        const isTarget = targetIndex > -1;\n        let containsTarget = false;\n\n        if (targetIndex === -1) {\n            targetIndex = findIndex(targets, parentTarget => parentTarget.contains(inputTarget));\n            containsTarget = targetIndex > -1;\n        }\n\n        triggerEvent(moveable, \"onClickGroup\", fillParams(moveable, e, {\n            targets,\n            inputTarget,\n            targetIndex,\n            isTarget,\n            containsTarget,\n        }));\n    },\n};\n","import MoveableManager from \"../MoveableManager\";\nimport { prefix, getControlTransform } from \"../utils\";\nimport { Renderer } from \"../types\";\n\nexport default {\n    name: \"origin\",\n    props: {\n        origin: Boolean,\n    },\n    render(moveable: MoveableManager, React: Renderer): any {\n        if (!moveable.props.origin) {\n            return null;\n        }\n        const { beforeOrigin, rotation } = moveable.state;\n\n        return [\n            <div className={prefix(\"control\", \"origin\")}\n                style={getControlTransform(rotation, beforeOrigin)} key=\"beforeOrigin\"></div>,\n        ];\n    },\n};\n","import MoveableManager from \"../MoveableManager\";\nimport { ScrollableProps, OnScroll } from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport MoveableGroup from \"../MoveableGroup\";\nimport DragScroll from \"@scena/dragscroll\";\n\nfunction getDefaultScrollPosition(e: { scrollContainer: HTMLElement, direction: number[] }) {\n    const scrollContainer = e.scrollContainer;\n\n    return [\n        scrollContainer.scrollLeft,\n        scrollContainer.scrollTop,\n    ];\n}\n\nexport default {\n    name: \"scrollable\",\n    canPinch: true,\n    props: {\n        scrollable: Boolean,\n        scrollContainer: Object,\n        scrollThreshold: Number,\n    },\n    dragStart(moveable: MoveableManager<ScrollableProps>, e: any) {\n        const props = moveable.props;\n        const {\n            scrollContainer = moveable.getContainer(),\n        } = props;\n\n        const dragScroll = new DragScroll();\n\n        e.datas.dragScroll = dragScroll;\n\n        const draggerName = e.isControl ? \"controlDragger\" : \"targetDragger\";\n        const targets = e.targets;\n\n        dragScroll.on(\"scroll\", ({ container, direction }) => {\n            const params = fillParams<OnScroll>(moveable, e, {\n                scrollContainer: container,\n                direction,\n            }) as any;\n\n            const eventName = targets ? \"onScrollGroup\" : \"onScroll\" as any;\n            if (targets) {\n                params.targets = targets;\n            }\n            triggerEvent(moveable, eventName, params);\n        }).on(\"move\", ({ offsetX, offsetY }) => {\n            moveable[draggerName].scrollBy(offsetX, offsetY, e.inputEvent, false);\n        });\n        dragScroll.dragStart(e, {\n            container: scrollContainer as HTMLElement,\n        });\n    },\n    checkScroll(moveable: MoveableManager<ScrollableProps>, e: any) {\n        const {\n            dragScroll,\n        } = e.datas;\n        if (!dragScroll) {\n            return;\n        }\n        const {\n            scrollContainer = moveable.getContainer(),\n            scrollThreshold = 0,\n            getScrollPosition = getDefaultScrollPosition,\n        } = moveable.props;\n\n        dragScroll.drag(e, {\n            container: scrollContainer,\n            threshold: scrollThreshold,\n            getScrollPosition: (ev: any) => {\n                return getScrollPosition({ scrollContainer: ev.container, direction: ev.direction });\n            },\n        });\n\n        return true;\n    },\n    drag(moveable: MoveableManager<ScrollableProps>, e: any) {\n        return this.checkScroll(moveable, e);\n    },\n    dragEnd(moveable: MoveableManager<ScrollableProps>, e: any) {\n        e.datas.dragScroll.dragEnd();\n        e.datas.dragScroll = null;\n    },\n    dragControlStart(moveable: MoveableManager<ScrollableProps>, e: any) {\n        return this.dragStart(moveable, { ...e, isControl: true });\n    },\n    dragControl(moveable: MoveableManager<ScrollableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManager<ScrollableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupStart(moveable: MoveableGroup, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragGroup(moveable: MoveableGroup, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupEnd(moveable: MoveableGroup, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroup, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragGroupContro(moveable: MoveableGroup, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControEnd(moveable: MoveableGroup, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n};\n","export default {\n    name: \"\",\n    props: {\n        target: Object,\n        container: Object,\n        dragArea: Boolean,\n        origin: Boolean,\n        transformOrigin: Array,\n        edge: Boolean,\n        ables: Array,\n        className: String,\n        pinchThreshold: Number,\n    },\n};\n","import Pinchable from \"./Pinchable\";\nimport Rotatable from \"./Rotatable\";\nimport Draggable from \"./Draggable\";\nimport Resizable from \"./Resizable\";\nimport Scalable from \"./Scalable\";\nimport Warpable from \"./Warpable\";\nimport Snappable from \"./Snappable\";\nimport DragArea from \"./DragArea\";\nimport Origin from \"./Origin\";\nimport Scrollable from \"./Scrollable\";\nimport Default from \"./Default\";\n\nexport const MOVEABLE_ABLES = [\n    Default, Snappable, Pinchable, Draggable, Rotatable, Resizable, Scalable, Warpable, Scrollable, DragArea, Origin,\n] as const;\n","import { refs } from \"framework-utils\";\nimport MoveableGroup from \"../MoveableGroup\";\nimport MoveableManager from \"../MoveableManager\";\nimport { Renderer } from \"../types\";\n\nexport default {\n    name: \"groupable\",\n    props: {\n        defaultGroupRotate: Number,\n        groupable: Boolean,\n    },\n    render(moveable: MoveableGroup, React: Renderer): any[] {\n        const targets = moveable.props.targets || [];\n\n        moveable.moveables = [];\n        const { left, top } = moveable.state;\n        const position = { left, top };\n\n        return targets.map((target, i) => {\n            return <MoveableManager\n                key={\"moveable\" + i}\n                ref={refs(moveable, \"moveables\", i)}\n                target={target}\n                origin={false}\n                parentMoveable={moveable}\n                parentPosition={position}\n            />;\n        });\n    },\n};\n","import MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, MoveableManagerProps } from \"./types\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\nimport { getAbleDragger } from \"./getAbleDragger\";\nimport Groupable from \"./ables/Groupable\";\nimport { MIN_NUM, MAX_NUM, TINY_NUM } from \"./consts\";\nimport { getTargetInfo, throttle, getAbsolutePosesByState, equals } from \"./utils\";\nimport { plus, rotate } from \"@moveable/matrix\";\n\nfunction getMaxPos(poses: number[][][], index: number) {\n    return Math.max(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getMinPos(poses: number[][][], index: number) {\n    return Math.min(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getGroupRect(moveables: MoveableManager[], rotation: number) {\n    if (!moveables.length) {\n        return [0, 0, 0, 0];\n    }\n\n    const moveablePoses = moveables.map(({ state }) => getAbsolutePosesByState(state));\n    let minX = MAX_NUM;\n    let minY = MAX_NUM;\n    let groupWidth = 0;\n    let groupHeight = 0;\n    const fixedRotation = throttle(rotation, TINY_NUM);\n\n    if (fixedRotation % 90) {\n        const rad = rotation / 180 * Math.PI;\n        const a1 = Math.tan(rad);\n        const a2 = -1 / a1;\n        const b1s = [MIN_NUM, MAX_NUM];\n        const b2s = [MIN_NUM, MAX_NUM];\n\n        moveablePoses.forEach(poses => {\n            poses.forEach(pos => {\n                // ax + b = y\n                // ㅠ = y - ax\n                const b1 = pos[1] - a1 * pos[0];\n                const b2 = pos[1] - a2 * pos[0];\n\n                b1s[0] = Math.max(b1s[0], b1);\n                b1s[1] = Math.min(b1s[1], b1);\n                b2s[0] = Math.max(b2s[0], b2);\n                b2s[1] = Math.min(b2s[1], b2);\n            });\n        });\n\n        b1s.forEach(b1 => {\n            // a1x + b1 = a2x + b2\n            b2s.forEach(b2 => {\n                // (a1 - a2)x = b2 - b1\n                const x = (b2 - b1) / (a1 - a2);\n                const y = a1 * x + b1;\n\n                minX = Math.min(minX, x);\n                minY = Math.min(minY, y);\n            });\n        });\n        const rotatePoses = moveablePoses.map(([pos1, pos2, pos3, pos4]) => {\n\n            return [\n                rotate(pos1, -rad),\n                rotate(pos2, -rad),\n                rotate(pos3, -rad),\n                rotate(pos4, -rad),\n            ];\n        });\n        groupWidth = getMaxPos(rotatePoses, 0) - getMinPos(rotatePoses, 0);\n        groupHeight = getMaxPos(rotatePoses, 1) - getMinPos(rotatePoses, 1);\n\n    } else {\n        minX = getMinPos(moveablePoses, 0);\n        minY = getMinPos(moveablePoses, 1);\n        groupWidth = getMaxPos(moveablePoses, 0) - minX;\n        groupHeight = getMaxPos(moveablePoses, 1) - minY;\n\n        if (fixedRotation % 180) {\n            const changedWidth = groupWidth;\n\n            groupWidth = groupHeight;\n            groupHeight = changedWidth;\n        }\n    }\n    return [minX, minY, groupWidth, groupHeight];\n}\n\nclass MoveableGroup extends MoveableManager<GroupableProps, any> {\n    public static defaultProps = {\n        ...MoveableManager.defaultProps,\n        transformOrigin: [\"50%\", \"50%\"],\n        groupable: true,\n        dragArea: true,\n        keepRatio: true,\n        targets: [],\n        defaultGroupRotate: 0,\n    };\n    public differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    public moveables: MoveableManager[] = [];\n    public rotation: number = 0;\n\n    public updateEvent(prevProps: MoveableManagerProps<GroupableProps>) {\n        const state = this.state;\n        const props = this.props;\n\n        if (!state.target) {\n            state.target = this.areaElement;\n\n            this.controlBox.getElement().style.display = \"block\";\n            this.targetDragger = getAbleDragger(this, state.target!, \"targetAbles\", \"Group\");\n            this.controlDragger = getAbleDragger(this, this.controlBox.getElement(), \"controlAbles\", \"GroupControl\");\n        }\n        const isContainerChanged = !equals(prevProps.container, props.container);\n\n        if (isContainerChanged) {\n            state.container = props.container;\n        }\n        const { added, changed, removed } = this.differ.update(props.targets!);\n\n        if (isContainerChanged || added.length || changed.length || removed.length) {\n            this.updateRect();\n        }\n    }\n    public checkUpdate() {\n        this.updateAbles();\n    }\n\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        if (!this.controlBox) {\n            return;\n        }\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, false, false);\n        });\n\n        const state = this.state;\n        const props = this.props;\n        const target = state.target! || props.target!;\n\n        if (!isTarget || (type !== \"\" && props.updateGroup)) {\n            // reset rotataion\n            this.rotation = props.defaultGroupRotate!;\n        }\n        const rotation = this.rotation;\n        const [left, top, width, height] = getGroupRect(this.moveables, rotation);\n\n        // tslint:disable-next-line: max-line-length\n        target.style.cssText += `left:0px;top:0px;width:${width}px; height:${height}px;transform:rotate(${rotation}deg)`;\n        state.width = width;\n        state.height = height;\n\n        const container = this.getContainer();\n        const info = getTargetInfo(\n            target,\n            this.controlBox.getElement(),\n            this.getContainer(),\n            this.props.rootContainer || container,\n            state,\n        );\n        const pos = [info.left!, info.top!];\n        [\n            info.pos1,\n            info.pos2,\n            info.pos3,\n            info.pos4,\n        ] = getAbsolutePosesByState(info as Required<typeof info>);\n        info.origin = plus(pos, info.origin!);\n        info.beforeOrigin = plus(pos, info.beforeOrigin!);\n\n        const clientRect = info.targetClientRect!;\n\n        clientRect.top += (top - info.top!) - state.top;\n        clientRect.left += (left - info.left!) - state.left;\n\n        this.updateState(\n            {\n                ...info,\n                left: left - info.left!,\n                top: top - info.top!,\n            },\n            isSetState,\n        );\n    }\n    public triggerEvent(name: string, e: any): any {\n        if (name.indexOf(\"Group\") > -1) {\n            return super.triggerEvent(name as any, e);\n        }\n    }\n    protected updateAbles() {\n        super.updateAbles([...this.props.ables!, Groupable], \"Group\");\n    }\n}\n\nexport default MoveableGroup;\n","import * as React from \"react\";\nimport { MoveableProps, Able, MoveableInterface, RectInfo, AbleRequestParam, Requester } from \"./types\";\nimport MoveableManager from \"./MoveableManager\";\nimport { MOVEABLE_ABLES } from \"./ables/consts\";\nimport MoveableGroup from \"./MoveableGroup\";\nimport { ref } from \"framework-utils\";\nimport { isArray } from \"@daybrush/utils\";\nimport Groupable from \"./ables/Groupable\";\n\nexport default class Moveable<T = {}> extends React.PureComponent<MoveableProps & T> implements MoveableInterface {\n    public moveable!: MoveableManager<MoveableProps> | MoveableGroup;\n    public render() {\n        const props = this.props;\n        const ables: Able[] = props.ables as Able[] || [];\n        const target = this.props.target || this.props.targets;\n        const isArr = isArray(target);\n        const isGroup = isArr && (target as any[]).length > 1;\n\n        if (isGroup) {\n            const nextProps = {\n                ...this.props,\n                target: null,\n                targets: target as any[],\n                ables: [...MOVEABLE_ABLES, Groupable, ...ables],\n            };\n            return <MoveableGroup key=\"group\" ref={ref(this, \"moveable\")}\n                {...nextProps} />;\n        } else {\n            const moveableTarget = isArr ? (target as any[])[0] : target;\n\n            return <MoveableManager<MoveableProps> key=\"single\" ref={ref(this, \"moveable\")}\n                {...{ ...this.props, target: moveableTarget, ables: [...MOVEABLE_ABLES, ...ables] }} />;\n        }\n    }\n    /**\n     * Check if the target is an element included in the moveable.\n     * @method Moveable#isMoveableElement\n     * @param - the target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"click\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *         moveable.target = e.target;\n     *     }\n     * });\n     */\n    public isMoveableElement(target: HTMLElement | SVGElement): boolean {\n        return this.moveable.isMoveableElement(target);\n    }\n    /**\n     * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\n     * @method Moveable#dragStart\n     * @param - external `MouseEvent`or `TouchEvent`\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *          moveable.dragStart(e);\n     *     }\n     * });\n     */\n    public dragStart(e: MouseEvent | TouchEvent): void {\n        this.moveable.dragStart(e);\n    }\n\n    /**\n     * Whether the coordinates are inside Moveable\n     * @method Moveable#isInside\n     * @param - x coordinate\n     * @param - y coordinate\n     * @return - True if the coordinate is in moveable or false\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.isInside(e.clientX, e.clientY)) {\n     *          console.log(\"inside\");\n     *     }\n     * });\n     */\n    public isInside(clientX: number, clientY: number): boolean {\n        return this.moveable.isInside(clientX, clientY);\n    }\n\n    /**\n     * If the width, height, left, and top of all elements change, update the shape of the moveable.\n     * @method Moveable#updateRect\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"resize\", e => {\n     *     moveable.updateRect();\n     * });\n     */\n    public updateRect(): void {\n        this.moveable.updateRect();\n    }\n\n    /**\n     * If the width, height, left, and top of the only target change, update the shape of the moveable.\n     * @method Moveable#updateTarget\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.updateTarget();\n     */\n    public updateTarget(): void {\n        this.moveable.updateTarget();\n    }\n\n    /**\n     * You can get the vertex information, position and offset size information of the target based on the container.\n     * @method Moveable#getRect\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const rectInfo = moveable.getRect();\n     */\n    public getRect(): RectInfo {\n        return this.moveable.getRect();\n    }\n\n    /**\n     * Request able through a method rather than an event.\n     * At the moment of execution, requestStart is executed,\n     * and then request and requestEnd can be executed through Requester.\n     * @method Moveable#request\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\n     * @param - ableName\n     * @param - request to be able params. If isInstant is true, request and requestEnd are executed immediately.\n     * @return - Able Requester. If there is no request in able, nothing will work.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10, isInstant: true });\n     *\n     * // Start move\n     * const requester = moveable.request(\"draggable\");\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.requestEnd();\n     */\n    public request(ableName: string, params?: AbleRequestParam): Requester {\n        return this.moveable.request(ableName, params);\n    }\n    /**\n     * Remove the Moveable object and the events.\n     * @method Moveable#destroy\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.destroy();\n     */\n    public destroy(): void {\n        this.moveable.componentWillUnmount();\n    }\n}\n"],"names":["getSVGCursor","scale","degree","getCursorCSS","x1","x2","degree45","Math","round","defaultCursor","agent","getAgent","IS_WEBKIT","os","name","indexOf","browser","PREFIX","MOVEABLE_CSS","prefixCSS","map","join","NEARBY_POS","TINY_NUM","MIN_SCALE","MAX_NUM","pow","MIN_NUM","DIRECTION_INDEXES","n","s","w","e","nw","ne","sw","se","DIRECTION_ROTATIONS","multiply2","pos1","pos2","prefix","_i","classNames","prefixNames","createIdentityMatrix3","createIdentityMatrix","getTransformMatrix","transform","isObject","value","splitBracket","split","v","parseFloat","getAbsoluteMatrix","matrix","origin","multiplies","createOriginMatrix","a","measureSVGSize","el","unit","isHorizontal","viewBox","ownerSVGElement","baseVal","getBeforeTransformOrigin","relativeOrigin","getTransformOrigin","getComputedStyle","o","i","_a","style","transformOrigin","getOffsetInfo","lastParent","isParent","body","document","target","parentElement","isEnd","position","isStatic","offsetParent","getOffsetPosInfo","container","isFixed","tagName","toLowerCase","offsetLeft","offsetTop","containerClientRect","documentElement","getBoundingClientRect","left","top","isSVG","isUndefined","hasOffset","pos","offset","getMatrixStackInfo","prevMatrix","matrixes","is3d","targetMatrix","offsetContainer","length","styleTransform","convertCSStoMatrix","matrixesLength","convertDimension","offsetPos","push","getSVGMatrix","_b","isOffsetEnd","parentClientLeft","parentClientTop","clientLeft","clientTop","scrollLeft","scrollTop","caculateMatrixStack","rootContainer","prevRootMatrix","prevN","prevTargetMatrix","rootMatrixes","isRoot3d","isSVGGraphicElement","originalContainer","allMatrix","rootMatrix","beforeMatrix","offsetMatrix","endContainer","reverse","forEach","multiply","slice","isMatrix3d","convertMatrixtoCSS","ignoreDimension","clientWidth","clientHeight","viewBoxWidth","width","viewBoxHeight","height","scaleX","scaleY","preserveAspectRatio","align","meetOrSlice","svgOrigin","translate","xAlign","yAlign","floor","scaleDimension","max","min","scaleMatrix","createScaleMatrix","getSVGGraphicsOffset","getBBox","bbox","svgElement","x","y","caculatePosition","caculate","convertPositionMatrix","caculatePoses","pos3","pos4","getRect","poses","posesX","posesY","right","bottom","rectWidth","rectHeight","caculateRect","getSVGOffset","absoluteMatrix","rect","rectLeft","rectTop","mat","_c","prevLeft","prevTop","prevWidth","prevHeight","posOrigin","prevOrigin","minus","rectOrigin","count","inverseBeforeMatrix","invert","mat2","_d","nextLeft","nextTop","distLeft","distTop","abs","p","caculateMoveablePosition","y1","y2","x3","y3","_e","x4","y4","_f","originX","originY","center","pos1Rad","getRad","pos2Rad","direction","PI","getDistSize","vec","sqrt","getDiagonalSize","getLineStyle","rad","getControlTransform","rotation","reduce","prev","getCSSSize","window","getSize","isOffset","isBoxSizing","boxSizing","offsetWidth","offsetHeight","borderLeft","borderLeftWidth","borderRight","borderRightWidth","borderTop","borderTopWidth","borderBottom","borderBottomWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","getRotationRad","getTargetInfo","parentContainer","state","beforeDirection","targetTransform","beforeOrigin","targetClientRect","resetClientRect","undefined","beforePos","getClientRect","scrollWidth","scrollHeight","isExtends","getDirection","direciton","getAttribute","dir","getAbsolutePoses","dist","plus","getAbsolutePosesByState","roundSign","num","throttle","throttleArray","nums","_","unset","self","getOrientationDirection","isInside","k1","k2","k3","k4","k5","k6","signs1","signs2","every","sign","fillParams","moveable","params","datas","tslib_1","clientX","clientY","inputEvent","currentTarget","triggerEvent","pseudoElt","filterAbles","ables","methods","enabledAbles","ableGroups","filter","able","some","method","ableGroup","getKeepRatioHeight","isWidth","ratio","getKeepRatioWidth","equals","a1","a2","selectValue","values","groupBy","arr","func","group","groupMap","index","groupKey","flat","cur","concat","maxOffset","args","sort","b","convertDragDist","triggerRenderStart","isGroup","isPinch","eventAffix","targets","props","triggerRender","triggerRenderEnd","sPinch","isDrag","triggerAble","ableType","eventOperation","eventType","isReqeust","isStart","isRequest","areaElement","eventName","conditionName","isAfter","updateRect","events","results","condition","isUpdate","dragger","moveables","childeMoveable","forceUpdate","getAbleDragger","options","pinchThreshold","Dragger","ControlBoxElement","styled","renderLine","React","key","className","_this","edge","parentPosition","propsTarget","zoom","checkUpdate","parentLeft","parentTop","stateTarget","groupTargets","isDisplay","ref","renderAbles","controlBox","getElement","parentMoveable","updateEvent","prevProps","getContainer","targetDragger","onDragStart","type","isTarget","isSetState","updateState","controlBoxElement","hasTargetAble","targetAbles","hasControlAble","controlAbles","prevTarget","dragArea","prevDragArea","isTargetChanged","isUnset","controlDragger","unsetAbles","isFlag","statePos","ableName","param","isInstant","groupable","requsetAble","isDragging","request","requestEnd","ableRequester","isControl","requester","ableParam","requestStart","stateContainer","updateAbles","isChanged","callback","dragStart","pinchStart","dragControlStart","nextState","setState","Renderer","createElement","render","MoveableManager","getRotatiion","touches","pinchable","Boolean","Number","controlEventName","pinchAbles","canPinch","result","parentRotate","ableEvent","pinchFlag","snapRenderInfo","pinch","pinchScale","distance","parentDistance","pinchEnd","pinchGroupStart","pinchGroup","pinchGroupEnd","triggerChildAble","eachEvent","ableDatas","match","childs","child","childDatas","childEvent","isFunction","parentFlag","setDragStart","inverseMatrix","absoluteOrigin","startDragBeforeDist","startDragDist","getDragDist","isBefore","distX","distY","getInverseDragDist","caculateTransformOrigin","prevSize","size","isNaN","measureRatio","getPosIndexesByDirection","indexes","getPosesByDirection","getPosByDirection","nextPoses","average","getPosByReverseDirection","getStartPos","startPos1","startPos2","startPos3","startPos4","getDist","startPos","getNextMatrix","getScaleDist","dragClient","nextMatrix","groupLeft","groupTop","getResizeDist","fixedPosition","nextOrigin","getStartDirection","baseDirection","getAbsoluteFixedPosition","directionCondition","parentDirection","hasClass","getTotalGuidelines","guidelines","containerHeight","containerWidth","snapHorizontal","snapVertical","verticalGuidelines","horizontalGuidelines","totalGuidelines","checkSnapPoses","snapCenter","customSnapThreshold","snapElement","snapThreshold","vertical","checkSnap","horizontal","checkSnapKeepRatio","endPos","endX","endY","startX","startY","dx","dy","isBottom","isRight","verticalInfo","isSnap","horizontalInfo","verticalSnapInfo","horizontalSnapInfo","posInfos","isVerticalSnap","verticalGuideline","isHorizontalSnap","horizontalGuideline","horizontalPos","verticalPos","checkSnaps","isCenter","isSnapCenter","verticalNames","horizontalNames","getNearestSnapGuidelineInfo","snapInfo","guideline","posInfo","guidelineInfo","guidelineInfos","targetType","targetPoses","isVertical","posType","snapPosInfos","targetPos","element","snapPosInfo","getSnapInfosByDirection","snapDirection","alignPoses","keepRatio","getNearOffsetInfo","offsets","aSign","bSign","aOffset","bOffset","aDist","bDist","isBound","isStartLine","dot","line","cx","cy","hitTestLine","test1","test2","isSameStartLine","dots","error","centerSign","checkInnerBoundDot","start","end","threshold","checkInnerBound","bounds","innerBounds","isAllBound","isVerticalBound","isHorizontalBound","leftLine","topLine","rightLine","bottomLine","isHorizontalStart","isVerticalStart","topBoundInfo","checkLineBoundCollision","bottomBoundInfo","leftBoundInfo","rightBoundInfo","isAllVerticalBound","isAllHorizontalBound","verticalOffset","horizontalOffset","boundLine","dot1","dot2","boundDot1","boundDot2","dy1","dx1","dy2","dx2","getInnerBoundInfo","lines","multiple","sizeOffset","getInnerBoundDragInfo","getCheckSnapLines","innerBoundInfo","widthOffsetInfo","heightOffsetInfo","getCheckSnapLineDirections","lineDirections","dir1","dir2","isBoundRotate","relativePoses","boundDots","rotate","getDistPointLine","solveReverseLine","checkRotateInnerBounds","prevPoses","relativeLeft","relativeRight","relativeTop","relativeBottom","dotInfos","lineRad","lineDist","dotDist","dotRad","distRad","acos","nextRad1","nextRad2","nextRad","checkInnerBoundPoses","horizontalPoses","verticalPoses","boundMap","checkBoundPoses","checkBound","checkBoundKeepRatio","startBoundPos","endBoundPos","minPos","maxPos","boundRect","boundRotate","boundPos","r","nextPos","checkRotateBounds","relativeRad1","relativeRad2","snapStart","elementGuidelines","containerTop","containerLeft","targetLeft","targetTop","elementTop","elementBottom","elementLeft","elementRight","enableSnap","hasGuidelines","snappable","solveNextOffset","solveEquation","widthOffset","heightOffset","getNextFixedPoses","fixedPos","getSnapBoundOffset","boundInfo","getSnapBound","checkSnapBoundsKeepRatio","horizontalBoundInfo","verticalBoundInfo","horizontalDist","verticalDist","checkSnapBounds","boundPoses","checkMaxBounds","fixedDirection","maxWidth","Infinity","maxHeight","directions","left_1","top_1","right_1","bottom_1","otherDirection","isCheckVertical","isCheckHorizontal","otherPos","getSnapBoundInfo","startDirection","endDirection","otherStartPos","otherEndPos","snapBoundInfo","otherHorizontalDist","otherHorizontalOffset","isOtherHorizontalBound","isOtherHorizontalSnap","otherVerticalDist","otherVerticalOffset","isOtherVerticalBound","isOtherVerticalSnap","getCheckSnapDirections","getSizeOffsetInfo","recheckSizeByTwoDirection","snapPos","nextWidthOffset","nextHeightOffset","nextWidth","nextHeight","checkSizeDist","getNextPoses","isWidthBound","isHeightBound","widthDist","heightDist","isGetWidthOffset","checkSnapRotate","checkSnapSize","checkSnapScale","sizeDist","snapOffset","startCheckSnapDrag","absolutePoses","checkThrottleDragRotate","throttleDragRotate","offsetX","offsetY","adjustPoses","adjustPos","prevDistY","checkSnapDrag","snapPoses","verticalSnapBoundInfo","horizontalSnapBoundInfo","verticalInnerBoundInfo","horizontalInnerBoundInfo","getSnapGuidelines","getElementGuidelineDist","elementPos","elementSize","targetSize","relativePos","groupByElementGuidelines","clientPos","groupInfos","size2","groupInfo","find","groupElement","groupPos","renderElementGroup","clientSize","isDisplaySnapDigit","snapDigit","directionName","posName1","posName2","sizeName","isFirstRenderSize","j","linePos","lineSize","isRenderSize","snapSize","toFixed","renderSnapPoses","renderGuidelines","targetPos1","targetPos2","addBoundGuidelines","verticalSnapPoses","horizontalSnapPoses","verticalBoundPos","horizontalBoundPos","verticalInnerBoundPoses","horizontalInnerBoundPoses","Array","Object","minLeft","minTop","verticalGuildelines","snapInfos","snap","middle","verticalPosInfos","horizontalPosInfos","elementHorizontalGroup","elementVerticalGroup","dragEnd","dragControlCondition","rotatableDragControlCondtion","dragControlEnd","dragGroupStart","dragGroupEnd","dragGroupControlStart","dragGroupControlEnd","draggable","throttleDrag","dragInfo","parentEvent","parentDragger","startTranslate","prevDist","prevBeforeDist","set","startRect","drag","dragRotateRad","deg","cos","sin","passDistX","passDistY","beforeTranslate","beforeDist","delta","beforeDelta","nextTransform","nextParams","dragGroup","deltaX","deltaY","setCustomDrag","isConvert","move","client","prevX","prevY","setRotateStartInfo","startAbsoluteOrigin","prevDeg","prevSnapDeg","startDeg","loop","getParentDeg","moveableRect","parentDist","startRotate","absoluteDeg","getDeg","throttleRotate","prevLoop","absolutePrevSnapDeg","getRotateInfo","getPositions","rotationPosition","rotatable","String","rotationRad","externalRotate","beforeInfo","afterInfo","controlRect","rotatation","isRotate","dragControl","_g","_h","beforeRotate","dragGroupControlCondition","parentBeforeOrigin","eventParams","childClient","prevClient","Draggable","CustomDragger","dragGroupControl","dragResult","distRotate","deltaRotate","renderControls","defaultDirections","directionMap","directionRotation","renderAllDirections","renderDiagonalDirections","resizable","throttleResize","renderDirections","startOffsetWidth","startOffsetHeight","fixedOriginalPosition","startWidth","startHeight","setOrigin","isResize","parentScale","parentKeepRatio","sizeDirection","distWidth","distHeight","standardRad","ratioRad","signSize","snapDist","isNoSnap","inverseDelta","dragControlAfter","errorWidth","errorHeight","isErrorWidth","isErrorHeight","originalX","originalY","deltaWidth","deltaHeight","scalable","throttleScale","startScale","isScale","nowDist","stateDirection","isArray","snapHeight","snapWidth","getMiddleLinePos","getTriangleRad","rad1","rad2","isValidPos","poses1","poses2","pi","warpable","linePosFrom1","linePosFrom2","linePosFrom3","linePosFrom4","linePosTo1","linePosTo2","linePosTo3","linePosTo4","inputTarget","warpTargetMatrix","targetInverseMatrix","startMatrix","posIndexes","isWarp","selectedPoses","nearByPoses","h","createWarpMatrix","multiplyCSS","AREA","AREA_PIECES","AREA_PIECE","AVOID","restoreStyle","removeClass","cssText","renderPieces","isDragArea","rootLeft","rootTop","rootRelativePos","posX","posY","rects","children","call","nextElementSibling","addClass","isMoveableElement","containsTarget","contains","prevInputTarget","targetIndex","findIndex","parentTarget","getDefaultScrollPosition","scrollContainer","scrollable","scrollThreshold","dragScroll","DragScroll","draggerName","on","scrollBy","checkScroll","getScrollPosition","ev","dragGroupContro","dragGroupControEnd","MOVEABLE_ABLES","Default","Snappable","Pinchable","Rotatable","Resizable","Scalable","Warpable","Scrollable","DragArea","Origin","defaultGroupRotate","refs","getMaxPos","getMinPos","getGroupRect","moveablePoses","minX","minY","groupWidth","groupHeight","fixedRotation","rad_1","a1_1","tan","a2_1","b1s_1","b2s_1","b1","b2","rotatePoses","changedWidth","ChildrenDiffer","display","isContainerChanged","added","changed","removed","updateGroup","info","clientRect","_super","Groupable","MoveableGroup","defaultProps","isArr","nextProps","moveableTarget","updateTarget","componentWillUnmount"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,SAASA,YAAT,CAAsBC,KAAtB,EAAqCC,MAArC;SACW,+EAA0E,KAAKD,KAA/E,mBAAA,GAAmG,KAAKA,KAAxG,sPAAA,GAAmVC,MAAnV,qDAAP;;;AAEJ,SAASC,YAAT,CAAsBD,MAAtB;MACUE,EAAE,GAAGJ,YAAY,CAAC,CAAD,EAAIE,MAAJ,CAAvB;MACMG,EAAE,GAAGL,YAAY,CAAC,CAAD,EAAIE,MAAJ,CAAvB;MACMI,QAAQ,GAAIC,IAAI,CAACC,KAAL,CAAWN,MAAM,GAAG,EAApB,IAA0B,EAA3B,GAAiC,GAAlD;MACMO,aAAa,GACbH,QAAQ,KAAK,GAAb,GACA,aADA,GAEAA,QAAQ,KAAK,EAAb,GACA,aADA,GAEAA,QAAQ,KAAK,EAAb,GACA,WADA,GAEA,WAPN;;;SAUO,YAAUG,aAAV,mBAAA,GAAwCL,EAAxC,eAAA,GAAuDK,aAAvD,qCAAA,GAAuGL,EAAvG,iBAAA,GAAwHC,EAAxH,mBAAA,GAA2II,aAA3I,MAAP;;;AAGJ,AAAO,IAAMC,KAAK,GAAGC,QAAQ,EAAtB;AACP,AAAO,IAAMC,SAAS,GAChBF,KAAK,CAACG,EAAN,CAASC,IAAT,CAAcC,OAAd,CAAsB,KAAtB,IAA+B,CAAC,CAAhC,IAAqCL,KAAK,CAACM,OAAN,CAAcF,IAAd,CAAmBC,OAAnB,CAA2B,QAA3B,IAAuC,CAAC,CAD5E;AAGP,AAAO,IAAME,MAAM,GAAG,WAAf;AACP,AAAO,IAAMC,YAAY,GAAGC,SAAS,CAACF,MAAD,EAAS,89EAqH5C,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,GAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAqDG,GAArD,CAAyD,UAAAlB,MAAA;SAAU,kCACzCA,MADyC,cAAA,GAElEC,YAAY,CAACD,MAAD,CAFsD,UAAA;CAAnE,EAICmB,IAJD,CAIM,IAJN,CArH4C,kTAAA,IA+I5CT,SAAS,GAAG,0EAAH,GAGN,EAlJyC,QAAT,CAA9B;AAoJP,AAEO,IAAMU,UAAU,GAAG,CACtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADsB,EAEtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFsB,EAGtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHsB,EAItB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJsB,CAAnB;AAOP,AAAO,IAAMC,QAAQ,GAAG,SAAjB;AACP,AAAO,IAAMC,SAAS,GAAG,WAAlB;AACP,AAAO,IAAMC,OAAO,GAAGlB,IAAI,CAACmB,GAAL,CAAS,EAAT,EAAa,EAAb,CAAhB;AACP,AAAO,IAAMC,OAAO,GAAG,CAACF,OAAjB;AAEP,AAAO,IAAMG,iBAAiB,GAAsB;EAChDC,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD6C;EAEhDC,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,CAF6C;EAGhDC,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH6C;EAIhDC,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,CAJ6C;EAKhDC,EAAE,EAAE,CAAC,CAAD,CAL4C;EAMhDC,EAAE,EAAE,CAAC,CAAD,CAN4C;EAOhDC,EAAE,EAAE,CAAC,CAAD,CAP4C;EAQhDC,EAAE,EAAE,CAAC,CAAD;CARD;AAUP,AAAO,IAAMC,mBAAmB,GAAoB;EAChDR,CAAC,EAAE,CAD6C;EAEhDC,CAAC,EAAE,GAF6C;EAGhDC,CAAC,EAAE,GAH6C;EAIhDC,CAAC,EAAE,EAJ6C;EAKhDC,EAAE,EAAE,GAL4C;EAMhDC,EAAE,EAAE,EAN4C;EAOhDC,EAAE,EAAE,GAP4C;EAQhDC,EAAE,EAAE;CARD;;SClLSE,UAAUC,MAAgBC;SAC/B,CACHD,IAAI,CAAC,CAAD,CAAJ,GAAUC,IAAI,CAAC,CAAD,CADX,EAEHD,IAAI,CAAC,CAAD,CAAJ,GAAUC,IAAI,CAAC,CAAD,CAFX,CAAP;;AAKJ,SAAgBC;qBAAO;;OAAA,YAAAC,uBAAAA;IAAAC,cAAA,gBAAA;;;SACZC,WAAW,MAAX,OAAA,GAAY3B,eAAW0B,WAAvB,CAAP;;AAGJ,SAAgBE;SACLC,oBAAoB,CAAC,CAAD,CAA3B;;AAKJ,SASgBC,mBAAmBC;MAC3B,CAACA,SAAD,IAAcA,SAAS,KAAK,MAAhC,EAAwC;WAC7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAP;;;MAGAC,QAAQ,CAACD,SAAD,CAAZ,EAAyB;WACdA,SAAP;;;MAEEE,KAAK,GAAGC,YAAY,CAACH,SAAD,CAAZ,CAAwBE,KAAtC;SACOA,KAAK,CAACE,KAAN,CAAY,SAAZ,EAAuBhC,GAAvB,CAA2B,UAAAiC,CAAA;WAAKC,UAAU,CAACD,CAAD,CAAV;GAAhC,CAAP;;AAEJ,SAAgBE,kBAAkBC,QAAkB3B,GAAW4B;SAEpDC,UAAU,CACb7B,CADa,EAEb8B,kBAAkB,CAACF,MAAD,EAAS5B,CAAT,CAFL,EAGb2B,MAHa,EAIbG,kBAAkB,CAACF,MAAM,CAACrC,GAAP,CAAW,UAAAwC,CAAA;WAAK,CAACA,CAAD;GAAhB,CAAD,EAAsB/B,CAAtB,CAJL,CAAjB;;AAOJ,SAAgBgC,eAAeC,IAAgBC,MAAcC;MACrDD,IAAI,KAAK,GAAb,EAAkB;QACRE,OAAO,GAAGH,EAAE,CAACI,eAAH,CAAoBD,OAApB,CAA4BE,OAA5C;WACOF,OAAO,CAACD,YAAY,GAAG,OAAH,GAAa,QAA1B,CAAP,GAA6C,GAApD;;;SAEG,CAAP;;AAEJ,SAAgBI,yBAAyBN;MAC/BO,cAAc,GAAGC,kBAAkB,CAACC,gBAAgB,CAACT,EAAD,EAAK,SAAL,CAAjB,CAAzC;SAEOO,cAAc,CAACjD,GAAf,CAAmB,UAACoD,CAAD,EAAIC,CAAJ;QAChBC,iBAAA;QAAExB,gBAAF;QAASa,cAAT;;WAECb,KAAK,GAAGW,cAAc,CAACC,EAAD,EAAKC,IAAL,EAAWU,CAAC,KAAK,CAAjB,CAA7B;GAHG,CAAP;;AAMJ,SAAgBH,mBAAmBK;MACzBC,eAAe,GAAGD,KAAK,CAACC,eAA9B;SAEOA,eAAe,GAAGA,eAAe,CAACxB,KAAhB,CAAsB,GAAtB,CAAH,GAAgC,CAAC,GAAD,EAAM,GAAN,CAAtD;;AAEJ,SAAgByB,cACZf,IACAgB,YACAC;MAEMC,IAAI,GAAGC,QAAQ,CAACD,IAAtB;MACIE,MAAM,GAAG,CAACpB,EAAD,IAAOiB,QAAP,GAAkBjB,EAAlB,GAAuBA,EAAE,CAACqB,aAAvC;MACIC,KAAK,GAAG,KAAZ;MACIC,QAAQ,GAAG,UAAf;;SAEOH,MAAM,IAAIA,MAAM,KAAKF,IAA5B,EAAkC;QAC1BF,UAAU,KAAKI,MAAnB,EAA2B;MACvBE,KAAK,GAAG,IAAR;;;QAEET,KAAK,GAAGJ,gBAAgB,CAACW,MAAD,CAA9B;QACMlC,SAAS,GAAG2B,KAAK,CAAC3B,SAAxB;IACAqC,QAAQ,GAAGV,KAAK,CAACU,QAAjB;;QAEIA,QAAQ,KAAK,QAAb,IAA0BrC,SAAS,IAAIA,SAAS,KAAK,MAAzD,EAAkE;;;;IAGlEkC,MAAM,GAAGA,MAAM,CAACC,aAAhB;IACAE,QAAQ,GAAG,UAAX;;;SAEG;IACHC,QAAQ,EAAED,QAAQ,KAAK,QADpB;IAEHD,KAAK,EAAEA,KAAK,IAAI,CAACF,MAAV,IAAoBA,MAAM,KAAKF,IAFnC;IAGHO,YAAY,EAAEL,MAAqB,IAAIF;GAH3C;;AAOJ,SAAgBQ,iBACZ1B,IACA2B,WACAd,OACAe;;;MAEMC,OAAO,GAAG7B,EAAE,CAAC6B,OAAH,CAAWC,WAAX,EAAhB;MACIC,UAAU,GAAI/B,EAAkB,CAAC+B,UAArC;MACIC,SAAS,GAAIhC,EAAkB,CAACgC,SAApC;;MAEIJ,OAAJ,EAAa;QACHK,mBAAmB,GAAG,CAACN,SAAS,IAAIR,QAAQ,CAACe,eAAvB,EAAwCC,qBAAxC,EAA5B;IAEAJ,UAAU,IAAIE,mBAAmB,CAACG,IAAlC;IACAJ,SAAS,IAAIC,mBAAmB,CAACI,GAAjC;;;;MAGEC,KAAK,GAAGC,WAAW,CAACR,UAAD,CAAzB;MACIS,SAAS,GAAG,CAACF,KAAjB;MACI3C,MAAJ;;MAEI,CAAC6C,SAAD,IAAcX,OAAO,KAAK,KAA9B,EAAqC;IACjClC,MAAM,GAAG7C,SAAS,GACZwD,wBAAwB,CAACN,EAAD,CADZ,GAEZQ,kBAAkB,CAACK,KAAD,CAAlB,CAA0BvD,GAA1B,CAA8B,UAAAmF,GAAA;aAAOjD,UAAU,CAACiD,GAAD,CAAV;KAArC,CAFN;IAIAD,SAAS,GAAG,IAAZ;;QAEIX,OAAO,KAAK,GAAhB,EAAqB;MACjBE,UAAU,GAAG,CAAb;MACAC,SAAS,GAAG,CAAZ;KAFJ,MAGO;MACHpB,qCAAA,EACImB,kBADJ,EACgBC,iBADhB,EAC2BrC,SAAA,QAD3B,EACsCA,SAAA,QADtC;;GAXR,MAeO;IACHA,MAAM,GAAGa,kBAAkB,CAACK,KAAD,CAAlB,CAA0BvD,GAA1B,CAA8B,UAAAmF,GAAA;aAAOjD,UAAU,CAACiD,GAAD,CAAV;KAArC,CAAT;;;SAEG;IACHH,KAAK,OADF;IAEHE,SAAS,WAFN;IAGHE,MAAM,EAAE,CAACX,UAAD,EAAaC,SAAb,CAHL;IAIHrC,MAAM;GAJV;;AAOJ,SAAgBgD,mBACZvB,QACAO,WACAiB;MAEI5C,EAAE,GAAoCoB,MAA1C;MACMyB,QAAQ,GAAe,EAA7B;MACIvB,KAAK,GAAG,KAAZ;MACIwB,IAAI,GAAG,KAAX;MACI/E,CAAC,GAAG,CAAR;MACI+C,eAAJ;MACIiC,YAAJ;MAEMC,eAAe,GAAGjC,aAAa,CAACY,SAAD,EAAYA,SAAZ,EAAuB,IAAvB,CAAb,CAA0CF,YAAlE;;MAEImB,UAAJ,EAAgB;IACZtB,KAAK,GAAGF,MAAM,KAAKO,SAAnB;;QACIiB,UAAU,CAACK,MAAX,GAAoB,EAAxB,EAA4B;MACxBH,IAAI,GAAG,IAAP;MACA/E,CAAC,GAAG,CAAJ;;;IAEJ4D,SAAS,GAAGP,MAAM,CAACC,aAAnB;;;SAGGrB,EAAE,IAAI,CAACsB,KAAd,EAAqB;QACXT,KAAK,GAAwBJ,gBAAgB,CAACT,EAAD,CAAnD;QACM6B,OAAO,GAAG7B,EAAE,CAAC6B,OAAH,CAAWC,WAAX,EAAhB;QACMP,QAAQ,GAAGV,KAAK,CAACU,QAAvB;QACMK,OAAO,GAAGL,QAAQ,KAAK,OAA7B;QACM2B,cAAc,GAAGrC,KAAK,CAAC3B,SAA7B;QACIQ,MAAM,GAAayD,kBAAkB,CAAClE,kBAAkB,CAACiE,cAAD,CAAnB,CAAzC,CANiB;;QASXD,MAAM,GAAGvD,MAAM,CAACuD,MAAtB;;QACI,CAACH,IAAD,IAASG,MAAM,KAAK,EAAxB,EAA4B;MACxBH,IAAI,GAAG,IAAP;MACA/E,CAAC,GAAG,CAAJ;UACMqF,cAAc,GAAGP,QAAQ,CAACI,MAAhC;;WAEK,IAAItC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyC,cAApB,EAAoC,EAAEzC,CAAtC,EAAyC;QACrCkC,QAAQ,CAAClC,CAAD,CAAR,GAAc0C,gBAAgB,CAACR,QAAQ,CAAClC,CAAD,CAAT,EAAc,CAAd,EAAiB,CAAjB,CAA9B;;;;QAGJmC,IAAI,IAAKG,MAAM,KAAK,CAAxB,EAA2B;MACvBvD,MAAM,GAAG2D,gBAAgB,CAAC3D,MAAD,EAAS,CAAT,EAAY,CAAZ,CAAzB;;;QAEEkB,oDAAA;QACF4B,wBADE;QAEFF,gBAFE;QAGF3C,kBAHE;QAIF2D,qBAJE;;QAOFvB,yBAAA;QACAC,wBADA;;QAGAH,OAAO,KAAK,KAAZ,IAAqBkB,YAAzB,EAAuC;MACnCF,QAAQ,CAACU,IAAT;MAEIC,YAAY,CAACxD,EAAD,EAAsBjC,CAAtB,CAFhB,EAGIiB,oBAAoB,CAACjB,CAAD,CAHxB;;;QAME0F,iCAAA;QACFhC,8BADE;QAEFiC,sBAFE;QAGFlC,sBAHE;;QAMF1E,SAAS,IAAI0F,SAAb,IAA0B,CAACF,KAA3B,IAAoCd,QAApC,IAAgDD,QAAQ,KAAK,UAAjE,EAA6E;MACzEQ,UAAU,IAAIN,YAAY,CAACM,UAA3B;MACAC,SAAS,IAAIP,YAAY,CAACO,SAA1B;MACAV,KAAK,GAAGA,KAAK,IAAIoC,WAAjB;;;QAEAC,gBAAgB,GAAG,CAAvB;QACIC,eAAe,GAAG,CAAtB;;QAEIpB,SAAS,IAAIQ,eAAe,KAAKvB,YAArC,EAAmD;;MAE/CkC,gBAAgB,GAAGlC,YAAY,CAACoC,UAAhC;MACAD,eAAe,GAAGnC,YAAY,CAACqC,SAA/B;;;IAEJjB,QAAQ,CAACU,IAAT;IAEI9D,iBAAiB,CAACC,MAAD,EAAS3B,CAAT,EAAY4B,MAAZ,CAFrB;IAIIE,kBAAkB,CAAC2C,SAAS,GAAG,CAC3BT,UAAU,GAAG/B,EAAE,CAAC+D,UAAhB,GAA6BJ,gBADF,EAE3B3B,SAAS,GAAGhC,EAAE,CAACgE,SAAf,GAA2BJ,eAFA,CAAH,GAGxB,CAAC5D,EAAD,EAAKL,MAAL,CAHc,EAGO5B,CAHP,CAJtB;;QASI,CAACgF,YAAL,EAAmB;MACfA,YAAY,GAAGrD,MAAf;;;QAEA,CAACoB,eAAL,EAAsB;MAClBA,eAAe,GAAGnB,MAAlB;;;QAEA2B,KAAK,IAAIM,OAAb,EAAsB;;KAAtB,MAEO;MACH5B,EAAE,GAAGyB,YAAL;MACAH,KAAK,GAAGoC,WAAR;;;;MAGJ,CAACX,YAAL,EAAmB;IACfA,YAAY,GAAG/D,oBAAoB,CAACjB,CAAD,CAAnC;;;MAEA,CAAC+C,eAAL,EAAsB;IAClBA,eAAe,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAlB;;;SAEG;IACHkC,eAAe,iBADZ;IAEHH,QAAQ,UAFL;IAGHE,YAAY,cAHT;IAIHjC,eAAe,iBAJZ;IAKHgC,IAAI;GALR;;AAQJ,SAAgBmB,oBACZ7C,QACAO,WACAuC,eACAtB,YACAuB,gBACAC;MAEMxD,sDAAA;MACFiC,sBADE;MAEFC,cAFE;MAGFuB,kCAHE;MAIFvD,oCAJE;MAKFkC,oCALE;;MAOAS,uEAAA;MACFa,0BADE;MAEFC,kBAFE;;MAKAxG,CAAC,GAAGwG,QAAQ,IAAIzB,IAAZ,GAAmB,CAAnB,GAAuB,CAAjC;MACM0B,mBAAmB,GAAGpD,MAAM,CAACS,OAAP,CAAeC,WAAf,OAAiC,KAAjC,IAA0C,qBAAqBV,MAA3F;MACMqD,iBAAiB,GAAG9C,SAAS,IAAIR,QAAQ,CAACD,IAAhD;MACIwD,SAAS,GAAG9B,UAAU,GAAGS,gBAAgB,CAACT,UAAD,EAAawB,KAAb,EAAqBrG,CAArB,CAAnB,GAA6CiB,oBAAoB,CAACjB,CAAD,CAA3F;MACIgF,YAAY,GAAGsB,gBAAnB;MACIM,UAAU,GAAGR,cAAc,GAAGd,gBAAgB,CAACc,cAAD,EAAiBC,KAAjB,EAAyBrG,CAAzB,CAAnB,GAAiDiB,oBAAoB,CAACjB,CAAD,CAApG;MACI6G,YAAY,GAAGhC,UAAU,GAAGS,gBAAgB,CAACT,UAAD,EAAawB,KAAb,EAAqBrG,CAArB,CAAnB,GAA6CiB,oBAAoB,CAACjB,CAAD,CAA9F;MACI8G,YAAY,GAAG7F,oBAAoB,CAACjB,CAAD,CAAvC;MACMkF,MAAM,GAAGJ,QAAQ,CAACI,MAAxB;MACM6B,YAAY,GAAG/D,aAAa,CAAC0D,iBAAD,EAAoBA,iBAApB,EAAuC,IAAvC,CAAb,CAA0DhD,YAA/E;EAEA6C,YAAY,CAACS,OAAb;EACAlC,QAAQ,CAACkC,OAAT;;MAEI,CAACjC,IAAD,IAASyB,QAAb,EAAuB;IACnBxB,YAAY,GAAGM,gBAAgB,CAACN,YAAD,EAAe,CAAf,EAAkB,CAAlB,CAA/B;IACAF,QAAQ,CAACmC,OAAT,CAAiB,UAACtF,MAAD,EAASiB,CAAT;MACbkC,QAAQ,CAAClC,CAAD,CAAR,GAAc0C,gBAAgB,CAAC3D,MAAD,EAAS,CAAT,EAAY,CAAZ,CAA9B;KADJ;;;MAIAoD,IAAI,IAAI,CAACyB,QAAb,EAAuB;IACnBD,YAAY,CAACU,OAAb,CAAqB,UAACtF,MAAD,EAASiB,CAAT;MACjB2D,YAAY,CAAC3D,CAAD,CAAZ,GAAkB0C,gBAAgB,CAAC3D,MAAD,EAAS,CAAT,EAAY,CAAZ,CAAlC;KADJ;;;;;;MASA,CAACyE,cAAL,EAAqB;IACjBG,YAAY,CAACU,OAAb,CAAqB,UAAAtF,MAAA;MACjBiF,UAAU,GAAGM,QAAQ,CAACN,UAAD,EAAajF,MAAb,EAAqB3B,CAArB,CAArB;KADJ;;;EAIJ8E,QAAQ,CAACmC,OAAT,CAAiB,UAACtF,MAAD,EAASiB,CAAT;;;QACTsC,MAAM,GAAG,CAAT,KAAetC,CAAnB,EAAsB;;MAElBiE,YAAY,GAAGF,SAAS,CAACQ,KAAV,EAAf;;;QAEAjC,MAAM,GAAG,CAAT,KAAetC,CAAnB,EAAsB;;MAElBkE,YAAY,GAAGH,SAAS,CAACQ,KAAV,EAAf;;;;QAIA/F,QAAQ,CAACO,MAAM,CAAC3B,CAAC,GAAG,CAAL,CAAP,CAAZ,EAA6B;MACzB6C,gGAAA,EAAClB,aAAA,QAAD,EAAgBA,iBAAA,QAAhB;;;IAUJgF,SAAS,GAAGO,QAAQ,CAACP,SAAD,EAAYhF,MAAZ,EAAoB3B,CAApB,CAApB;GAtBJ;MAwBMoH,UAAU,GAAG,CAACX,mBAAD,IAAwB1B,IAA3C;;MAEI,CAACC,YAAL,EAAmB;IACfA,YAAY,GAAG/D,oBAAoB,CAACmG,UAAU,GAAG,CAAH,GAAO,CAAlB,CAAnC;;;MAEEjG,SAAS,GAAG,CAAGiG,UAAU,GAAG,UAAH,GAAgB,QAA7B,OAAA,GACdC,kBAAkB,CAACZ,mBAAmB,IAAIzB,YAAY,CAACE,MAAb,KAAwB,EAA/C,GACbI,gBAAgB,CAACN,YAAD,EAAe,CAAf,EAAkB,CAAlB,CADH,GAC0BA,YAD3B,CADJ,MAAlB;EAKA4B,UAAU,GAAGU,eAAe,CAACV,UAAD,EAAa5G,CAAb,EAAgBA,CAAhB,CAA5B;SACO,CACH4G,UADG,EAEHC,YAFG,EAGHC,YAHG,EAIHH,SAJG,EAKH3B,YALG,EAMH7D,SANG,EAOH4B,eAPG,EAQHgC,IAAI,IAAIyB,QARL,CAAP;;AAWJ,SAAgBf,aACZxD,IACAjC;MAEMuH,WAAW,GAAGtF,EAAE,CAACsF,WAAvB;MACMC,YAAY,GAAGvF,EAAE,CAACuF,YAAxB;MACMpF,OAAO,GAAIH,EAAoB,CAACG,OAArB,CAA6BE,OAA9C;MACMmF,YAAY,GAAGrF,OAAO,CAACsF,KAAR,IAAiBH,WAAtC;MACMI,aAAa,GAAGvF,OAAO,CAACwF,MAAR,IAAkBJ,YAAxC;MACMK,MAAM,GAAGN,WAAW,GAAGE,YAA7B;MACMK,MAAM,GAAGN,YAAY,GAAGG,aAA9B;MAEMI,mBAAmB,GAAI9F,EAAoB,CAAC8F,mBAArB,CAAyCzF,OAAtE;;MAEM0F,KAAK,GAAGD,mBAAmB,CAACC,KAAlC;;MAEMC,WAAW,GAAGF,mBAAmB,CAACE,WAAxC;MACMC,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAlB;MACM9J,KAAK,GAAG,CAACyJ,MAAD,EAASC,MAAT,CAAd;MACMK,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAlB;;MAEIH,KAAK,KAAK,CAAd,EAAiB;QACPI,MAAM,GAAG,CAACJ,KAAK,GAAG,CAAT,IAAc,CAA7B;QACMK,MAAM,GAAG3J,IAAI,CAAC4J,KAAL,CAAW,CAACN,KAAK,GAAG,CAAT,IAAc,CAAzB,CAAf;IAEAE,SAAS,CAAC,CAAD,CAAT,GAAeT,YAAY,GAAGW,MAAf,GAAwB,CAAvC;IACAF,SAAS,CAAC,CAAD,CAAT,GAAeP,aAAa,GAAGU,MAAhB,GAAyB,CAAxC;QAEME,cAAc,GAAGN,WAAW,KAAK,CAAhB,GAAoBvJ,IAAI,CAAC8J,GAAL,CAASV,MAAT,EAAiBD,MAAjB,CAApB,GAA+CnJ,IAAI,CAAC+J,GAAL,CAASZ,MAAT,EAAiBC,MAAjB,CAAtE;IAEA1J,KAAK,CAAC,CAAD,CAAL,GAAWmK,cAAX;IACAnK,KAAK,CAAC,CAAD,CAAL,GAAWmK,cAAX;IAEAJ,SAAS,CAAC,CAAD,CAAT,GAAe,CAACZ,WAAW,GAAGE,YAAf,IAA+B,CAA/B,GAAmCW,MAAlD;IACAD,SAAS,CAAC,CAAD,CAAT,GAAe,CAACX,YAAY,GAAGG,aAAhB,IAAiC,CAAjC,GAAqCU,MAApD;;;MAGEK,WAAW,GAAGC,iBAAiB,CAACvK,KAAD,EAAQ4B,CAAR,CAArC;EAEI0I,kBAAA,eAAA,EACAA,sBAAA,eADA;SAIGhH,iBAAiB,CACpBgH,WADoB,EAEpB1I,CAFoB,EAGpBkI,SAHoB,CAAxB;;AAMJ,SAAgBU,qBACZ3G,IACAL;MAEI,CAACK,EAAE,CAAC4G,OAAR,EAAiB;WACN,CAAC,CAAD,EAAI,CAAJ,CAAP;;;MAEEC,IAAI,GAAG7G,EAAE,CAAC4G,OAAH,EAAb;MACME,UAAU,GAAG9G,EAAE,CAACI,eAAtB;MACMD,OAAO,GAAG2G,UAAU,CAAC3G,OAAX,CAAmBE,OAAnC;MACM+B,IAAI,GAAGyE,IAAI,CAACE,CAAL,GAAS5G,OAAO,CAAC4G,CAA9B;MACM1E,GAAG,GAAGwE,IAAI,CAACG,CAAL,GAAS7G,OAAO,CAAC6G,CAA7B;SAEO,CACH5E,IADG,EAEHC,GAFG,EAGH1C,MAAM,CAAC,CAAD,CAAN,GAAYyC,IAHT,EAIHzC,MAAM,CAAC,CAAD,CAAN,GAAY0C,GAJT,CAAP;;AAOJ,SAAgB4E,iBAAiBvH,QAAkB+C,KAAe1E;SACvDmJ,QAAQ,CAACxH,MAAD,EAASyH,qBAAqB,CAAC1E,GAAD,EAAM1E,CAAN,CAA9B,EAAwCA,CAAxC,CAAf;;AAEJ,SAAgBqJ,cAAc1H,QAAkB+F,OAAeE,QAAgB5H;MACrEU,IAAI,GAAGwI,gBAAgB,CAACvH,MAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiB3B,CAAjB,CAA7B;MACMW,IAAI,GAAGuI,gBAAgB,CAACvH,MAAD,EAAS,CAAC+F,KAAD,EAAQ,CAAR,CAAT,EAAqB1H,CAArB,CAA7B;MACMsJ,IAAI,GAAGJ,gBAAgB,CAACvH,MAAD,EAAS,CAAC,CAAD,EAAIiG,MAAJ,CAAT,EAAsB5H,CAAtB,CAA7B;MACMuJ,IAAI,GAAGL,gBAAgB,CAACvH,MAAD,EAAS,CAAC+F,KAAD,EAAQE,MAAR,CAAT,EAA0B5H,CAA1B,CAA7B;SAEO,CAACU,IAAD,EAAOC,IAAP,EAAa2I,IAAb,EAAmBC,IAAnB,CAAP;;AAEJ,SAAgBC,QAAQC;MACdC,MAAM,GAAGD,KAAK,CAAClK,GAAN,CAAU,UAAAmF,GAAA;WAAOA,GAAG,CAAC,CAAD,CAAH;GAAjB,CAAf;MACMiF,MAAM,GAAGF,KAAK,CAAClK,GAAN,CAAU,UAAAmF,GAAA;WAAOA,GAAG,CAAC,CAAD,CAAH;GAAjB,CAAf;MACML,IAAI,GAAG3F,IAAI,CAAC+J,GAAL,MAAA,CAAA/J,IAAA,EAAYgL,MAAZ,CAAb;MACMpF,GAAG,GAAG5F,IAAI,CAAC+J,GAAL,MAAA,CAAA/J,IAAA,EAAYiL,MAAZ,CAAZ;MACMC,KAAK,GAAGlL,IAAI,CAAC8J,GAAL,MAAA,CAAA9J,IAAA,EAAYgL,MAAZ,CAAd;MACMG,MAAM,GAAGnL,IAAI,CAAC8J,GAAL,MAAA,CAAA9J,IAAA,EAAYiL,MAAZ,CAAf;MACMG,SAAS,GAAGF,KAAK,GAAGvF,IAA1B;MACM0F,UAAU,GAAGF,MAAM,GAAGvF,GAA5B;SAEO;IACHD,IAAI,MADD;IACGC,GAAG,KADN;IAEHsF,KAAK,OAFF;IAEIC,MAAM,QAFV;IAGHnC,KAAK,EAAEoC,SAHJ;IAIHlC,MAAM,EAAEmC;GAJZ;;AAOJ,SAAgBC,aAAarI,QAAkB+F,OAAeE,QAAgB5H;MACpEyJ,KAAK,GAAGJ,aAAa,CAAC1H,MAAD,EAAS+F,KAAT,EAAgBE,MAAhB,EAAwB5H,CAAxB,CAA3B;SAEOwJ,OAAO,CAACC,KAAD,CAAd;;AAEJ,SAAgBQ,aACZhI,IACA2B,WACA5D,GAAW4B,QAAkBiF,cAAwBqD;;;MAE/CxE,gBAAA;MAACgC,aAAD;MAAQE,cAAR;;MACA1D,mBAAmB,GAAGN,SAAS,CAACQ,qBAAV,EAA5B;MACM+F,IAAI,GAAGlI,EAAE,CAACmC,qBAAH,EAAb;MACMgG,QAAQ,GAAGD,IAAI,CAAC9F,IAAL,GAAYH,mBAAmB,CAACG,IAAhC,GAAuCT,SAAS,CAACoC,UAAlE;MACMqE,OAAO,GAAGF,IAAI,CAAC7F,GAAL,GAAWJ,mBAAmB,CAACI,GAA/B,GAAqCV,SAAS,CAACqC,SAA/D;MACM6D,SAAS,GAAGK,IAAI,CAACzC,KAAvB;MACMqC,UAAU,GAAGI,IAAI,CAACvC,MAAxB;MACM0C,GAAG,GAAGzI,UAAU,CAClB7B,CADkB,EAElB6G,YAFkB,EAGlBqD,cAHkB,CAAtB;;MAKMK,wCAAA;MACFC,kBADE;MAEFC,gBAFE;MAGFC,oBAHE;MAIFC,sBAJE;;MAMAC,SAAS,GAAG1B,gBAAgB,CAACoB,GAAD,EAAM1I,MAAN,EAAc5B,CAAd,CAAlC;MACM6K,UAAU,GAAGC,KAAK,CAACF,SAAD,EAAY,CAACJ,QAAD,EAAWC,OAAX,CAAZ,CAAxB;MACMM,UAAU,GAAG,CACfX,QAAQ,GAAGS,UAAU,CAAC,CAAD,CAAV,GAAgBf,SAAhB,GAA4BY,SADxB,EAEfL,OAAO,GAAGQ,UAAU,CAAC,CAAD,CAAV,GAAgBd,UAAhB,GAA6BY,UAFxB,CAAnB;MAIMhG,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAf;MACIqG,KAAK,GAAG,CAAZ;;SAEO,EAAEA,KAAF,GAAU,EAAjB,EAAqB;QACXC,mBAAmB,GAAGC,MAAM,CAACrE,YAAD,EAAe7G,CAAf,CAAlC;IACA6C,qHAAA,EAAC8B,SAAA,QAAD,EAAYA,SAAA,QAAZ;QAIMwG,IAAI,GAAGtJ,UAAU,CACnB7B,CADmB,EAEnB6G,YAFmB,EAGnB/E,kBAAkB,CAAC6C,MAAD,EAAS3E,CAAT,CAHC,EAInBkK,cAJmB,CAAvB;;QAMMkB,yCAAA;QACFC,kBADE;QAEFC,gBAFE;;QAIAC,QAAQ,GAAGF,QAAQ,GAAGjB,QAA5B;QACMoB,OAAO,GAAGF,OAAO,GAAGjB,OAA1B;;QAEI3L,IAAI,CAAC+M,GAAL,CAASF,QAAT,IAAqB,CAArB,IAA0B7M,IAAI,CAAC+M,GAAL,CAASD,OAAT,IAAoB,CAAlD,EAAqD;;;;IAGrDT,UAAU,CAAC,CAAD,CAAV,IAAiBQ,QAAjB;IACAR,UAAU,CAAC,CAAD,CAAV,IAAiBS,OAAjB;;;SAEG7G,MAAM,CAACpF,GAAP,CAAW,UAAAmM,CAAA;WAAKhN,IAAI,CAACC,KAAL,CAAW+M,CAAX,CAAA;GAAhB,CAAP;;AAEJ,SAAgBC,yBAAyBhK,QAAkBC,QAAkB8F,OAAeE;MASlF7C,IAAI,GAAGpD,MAAM,CAACuD,MAAP,KAAkB,EAA/B;MACMlF,CAAC,GAAG+E,IAAI,GAAG,CAAH,GAAO,CAArB;;MACIlC,4CAAA;MACA6C,UADA;MACCnH,UADD;MACKqN,UADL;MAEArB,UAFA;MAEC/L,UAFD;MAEKqN,UAFL;MAGAT,UAHA;MAGCU,UAHD;MAGKC,UAHL;MAIAC,UAJA;MAICC,UAJD;MAIKC,UAJL;;MAMAC,wCAAA;MAACC,eAAD;MAAUC,eAAV;;MAEEhI,IAAI,GAAG3F,IAAI,CAAC+J,GAAL,CAASlK,EAAT,EAAaC,EAAb,EAAiBsN,EAAjB,EAAqBG,EAArB,CAAb;MACM3H,GAAG,GAAG5F,IAAI,CAAC+J,GAAL,CAASmD,EAAT,EAAaC,EAAb,EAAiBE,EAAjB,EAAqBG,EAArB,CAAZ;MACMtC,KAAK,GAAGlL,IAAI,CAAC8J,GAAL,CAASjK,EAAT,EAAaC,EAAb,EAAiBsN,EAAjB,EAAqBG,EAArB,CAAd;MACMpC,MAAM,GAAGnL,IAAI,CAAC8J,GAAL,CAASoD,EAAT,EAAaC,EAAb,EAAiBE,EAAjB,EAAqBG,EAArB,CAAf;EAEA3N,EAAE,GAAIA,EAAE,GAAG8F,IAAN,IAAe,CAApB;EACA7F,EAAE,GAAIA,EAAE,GAAG6F,IAAN,IAAe,CAApB;EACAyH,EAAE,GAAIA,EAAE,GAAGzH,IAAN,IAAe,CAApB;EACA4H,EAAE,GAAIA,EAAE,GAAG5H,IAAN,IAAe,CAApB;EAEAuH,EAAE,GAAIA,EAAE,GAAGtH,GAAN,IAAc,CAAnB;EACAuH,EAAE,GAAIA,EAAE,GAAGvH,GAAN,IAAc,CAAnB;EACAyH,EAAE,GAAIA,EAAE,GAAGzH,GAAN,IAAc,CAAnB;EACA4H,EAAE,GAAIA,EAAE,GAAG5H,GAAN,IAAc,CAAnB;EAEA8H,OAAO,GAAIA,OAAO,GAAG/H,IAAX,IAAoB,CAA9B;EACAgI,OAAO,GAAIA,OAAO,GAAG/H,GAAX,IAAmB,CAA7B;MAEMgI,MAAM,GAAG,CACX,CAAC/N,EAAE,GAAGC,EAAL,GAAUsN,EAAV,GAAeG,EAAhB,IAAsB,CADX,EAEX,CAACL,EAAE,GAAGC,EAAL,GAAUE,EAAV,GAAeG,EAAhB,IAAsB,CAFX,CAAf;MAIMK,OAAO,GAAGC,MAAM,CAACF,MAAD,EAAS,CAAC/N,EAAD,EAAKqN,EAAL,CAAT,CAAtB;MACMa,OAAO,GAAGD,MAAM,CAACF,MAAD,EAAS,CAAC9N,EAAD,EAAKqN,EAAL,CAAT,CAAtB;MACMa,SAAS,GACVH,OAAO,GAAGE,OAAV,IAAqBA,OAAO,GAAGF,OAAV,GAAoB7N,IAAI,CAACiO,EAA/C,IAAuDJ,OAAO,GAAGE,OAAV,IAAqBA,OAAO,GAAGF,OAAV,GAAoB,CAAC7N,IAAI,CAACiO,EAAtG,GACM,CADN,GACU,CAAC,CAFf;SAIO,CACH,CAACtI,IAAD,EAAOC,GAAP,EAAYsF,KAAZ,EAAmBC,MAAnB,CADG,EAEH,CAACuC,OAAD,EAAUC,OAAV,CAFG,EAGH,CAAC9N,EAAD,EAAKqN,EAAL,CAHG,EAIH,CAACpN,EAAD,EAAKqN,EAAL,CAJG,EAKH,CAACC,EAAD,EAAKC,EAAL,CALG,EAMH,CAACE,EAAD,EAAKC,EAAL,CANG,EAOHQ,SAPG,CAAP;;AAUJ,SAAgBE,YAAYC;SACjBnO,IAAI,CAACoO,IAAL,CAAUD,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAZ,GAAkBA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAxC,CAAP;;AAEJ,SAAgBE,gBAAgBrM,MAAgBC;SACrCiM,WAAW,CAAC,CACfjM,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAAC,CAAD,CADC,EAEfC,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAAC,CAAD,CAFC,CAAD,CAAlB;;AAKJ,SAAgBsM,aAAatM,MAAgBC,MAAgBsM;oBAAA,EAAA;IAAAA,MAAcT,MAAM,CAAC9L,IAAD,EAAOC,IAAP,CAApB;;;MACnD+G,KAAK,GAAGqF,eAAe,CAACrM,IAAD,EAAOC,IAAP,CAA7B;SAEO;IACHQ,SAAS,EAAE,gCAA8BT,IAAI,CAAC,CAAD,CAAlC,SAAA,GAA4CA,IAAI,CAAC,CAAD,CAAhD,gBAAA,GAAiEuM,GAAjE,SADR;IAEHvF,KAAK,EAAKA,KAAK;GAFnB;;AAKJ,SAAgBwF,oBAAoBC;gBAAkB;;OAAA,YAAAtM,uBAAAA;IAAA4I,aAAA,gBAAA;;;MAC5CvE,MAAM,GAAGuE,KAAK,CAACvE,MAArB;MAEM8D,CAAC,GAAGS,KAAK,CAAC2D,MAAN,CAAa,UAACC,IAAD,EAAO3I,GAAP;WAAe2I,IAAI,GAAG3I,GAAG,CAAC,CAAD,CAAV;GAA5B,EAA2C,CAA3C,IAAgDQ,MAA1D;MACM+D,CAAC,GAAGQ,KAAK,CAAC2D,MAAN,CAAa,UAACC,IAAD,EAAO3I,GAAP;WAAe2I,IAAI,GAAG3I,GAAG,CAAC,CAAD,CAAV;GAA5B,EAA2C,CAA3C,IAAgDQ,MAA1D;SACO;IACH/D,SAAS,EAAE,eAAa6H,CAAb,SAAA,GAAqBC,CAArB,gBAAA,GAAoCkE,QAApC;GADf;;AAIJ,SAAgBG,WAAWjK;MACjBP,KAAK,GAAGyK,MAAM,CAAC7K,gBAAP,CAAwBW,MAAxB,CAAd;SAEO,CACH5B,UAAU,CAACqB,KAAK,CAAC4E,KAAP,CADP,EAEHjG,UAAU,CAACqB,KAAK,CAAC8E,MAAP,CAFP,CAAP;;AAKJ,SAAgB4F,QACZnK,QACAP,OACA2K,UACAC;sBAFA,EAAA;IAAA5K,QAA6ByK,MAAM,CAAC7K,gBAAP,CAAwBW,MAAxB,CAA7B;;;4BAEA,EAAA;IAAAqK,cAAuBD,QAAQ,IAAI3K,KAAK,CAAC6K,SAAN,KAAoB,YAAvD;;;MAEIjG,KAAK,GAAIrE,MAAsB,CAACuK,WAApC;MACIhG,MAAM,GAAIvE,MAAsB,CAACwK,YAArC;MACMpJ,SAAS,GAAG,CAACD,WAAW,CAACkD,KAAD,CAA9B;;MAEI,CAAC+F,QAAQ,IAAIC,WAAb,KAA6BjJ,SAAjC,EAA4C;WACjC,CAACiD,KAAD,EAAQE,MAAR,CAAP;;;EAEJF,KAAK,GAAGrE,MAAM,CAACkE,WAAf;EACAK,MAAM,GAAGvE,MAAM,CAACmE,YAAhB;;MAEI,CAAC/C,SAAD,IAAc,CAACiD,KAAf,IAAwB,CAACE,MAA7B,EAAqC;QAC3BkB,IAAI,GAAIzF,MAA6B,CAACwF,OAA9B,EAAd;WAEO,CAACC,IAAI,CAACpB,KAAN,EAAaoB,IAAI,CAAClB,MAAlB,CAAP;;;MAEA6F,QAAQ,IAAIC,WAAhB,EAA6B;QACnBI,UAAU,GAAGrM,UAAU,CAACqB,KAAK,CAACiL,eAAP,CAAV,IAAsC,CAAzD;QACMC,WAAW,GAAGvM,UAAU,CAACqB,KAAK,CAACmL,gBAAP,CAAV,IAAuC,CAA3D;QACMC,SAAS,GAAGzM,UAAU,CAACqB,KAAK,CAACqL,cAAP,CAAV,IAAqC,CAAvD;QACMC,YAAY,GAAG3M,UAAU,CAACqB,KAAK,CAACuL,iBAAP,CAAV,IAAwC,CAA7D;WAEO,CACH3G,KAAK,GAAGoG,UAAR,GAAqBE,WADlB,EAEHpG,MAAM,GAAGsG,SAAT,GAAqBE,YAFlB,CAAP;GANJ,MAUO;QACGE,WAAW,GAAG7M,UAAU,CAACqB,KAAK,CAACwL,WAAP,CAAV,IAAkC,CAAtD;QACMC,YAAY,GAAG9M,UAAU,CAACqB,KAAK,CAACyL,YAAP,CAAV,IAAmC,CAAxD;QACMC,UAAU,GAAG/M,UAAU,CAACqB,KAAK,CAAC0L,UAAP,CAAV,IAAiC,CAApD;QACMC,aAAa,GAAGhN,UAAU,CAACqB,KAAK,CAAC2L,aAAP,CAAV,IAAoC,CAA1D;WAEO,CACH/G,KAAK,GAAG4G,WAAR,GAAsBC,YADnB,EAEH3G,MAAM,GAAG4G,UAAT,GAAsBC,aAFnB,CAAP;;;AAMR,SAAgBC,eACZjF,OACAiD;SAEOF,MAAM,CAACE,SAAS,GAAG,CAAZ,GAAgBjD,KAAK,CAAC,CAAD,CAArB,GAA2BA,KAAK,CAAC,CAAD,CAAjC,EAAsCiD,SAAS,GAAG,CAAZ,GAAgBjD,KAAK,CAAC,CAAD,CAArB,GAA2BA,KAAK,CAAC,CAAD,CAAtE,CAAb;;AAEJ,SAAgBkF,cACZtL,QACAO,WACAgL,iBACAzI,eACA0I;;;MAEIxK,IAAI,GAAG,CAAX;MACIC,GAAG,GAAG,CAAV;MACIsF,KAAK,GAAG,CAAZ;MACIC,MAAM,GAAG,CAAb;MACIjI,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAb;MACIlB,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAX;MACIC,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAX;MACI2I,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAX;MACIC,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAX;MACI3C,UAAU,GAAG5F,qBAAqB,EAAtC;MACI8F,YAAY,GAAG9F,qBAAqB,EAAxC;MACI6F,YAAY,GAAG7F,qBAAqB,EAAxC;MACIW,MAAM,GAAGX,qBAAqB,EAAlC;MACIgE,YAAY,GAAGhE,qBAAqB,EAAxC;MACI0G,KAAK,GAAG,CAAZ;MACIE,MAAM,GAAG,CAAb;MACI7E,eAAe,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAtB;MACI2J,SAAS,GAAW,CAAxB;MACIoC,eAAe,GAAW,CAA9B;MACI/J,IAAI,GAAG,KAAX;MACIgK,eAAe,GAAG,EAAtB;MACIC,YAAY,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAnB;MACIC,gBAAgB,GAAGC,eAAe,EAAtC;MACIhL,mBAAmB,GAAGgL,eAAe,EAAzC;MACI/B,QAAQ,GAAG,CAAf;MAEMtI,UAAU,GAAGgK,KAAK,GAAGA,KAAK,CAAChI,YAAT,GAAwBsI,SAAhD;MACM/I,cAAc,GAAGyI,KAAK,GAAGA,KAAK,CAACjI,UAAT,GAAsBuI,SAAlD;MACM9I,KAAK,GAAGwI,KAAK,GAAIA,KAAK,CAAC9J,IAAN,GAAa,CAAb,GAAiB,CAArB,GAA0BoK,SAA7C;;MAEI9L,MAAJ,EAAY;QACJwL,KAAJ,EAAW;MACPnH,KAAK,GAAGmH,KAAK,CAACnH,KAAd;MACAE,MAAM,GAAGiH,KAAK,CAACjH,MAAf;KAFJ,MAGO;UACG9E,KAAK,GAAGJ,gBAAgB,CAACW,MAAD,CAA9B;MAEAqE,KAAK,GAAIrE,MAAsB,CAACuK,WAAhC;MACAhG,MAAM,GAAIvE,MAAsB,CAACwK,YAAjC;;UAEIrJ,WAAW,CAACkD,KAAD,CAAf,EAAwB;QACpB7E,iCAAA,EAAC6E,aAAD,EAAQE,cAAR;;;;IAGRlC,6FAAA,EACIkB,kBADJ,EAEIC,oBAFJ,EAGIC,oBAHJ,EAIInF,cAJJ,EAKIqD,oBALJ,EAMI+J,uBANJ,EAMqBhM,uBANrB,EAMsCgC,YANtC;IAYAwF,qEAAA,EACIa,UADJ,EACK/G,YADL,EACWC,WADX,EACgBsF,aADhB,EACuBC,cADvB,EAEIjI,cAFJ,EAGIlB,YAHJ,EAIIC,YAJJ,EAKI2I,YALJ,EAMIC,YANJ,EAOImD,iBAPJ;QAUM1M,CAAC,GAAG+E,IAAI,GAAG,CAAH,GAAO,CAArB;QACIqK,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAhB;IAEApD,6GAAA,EACIoD,iBADJ,EACeJ,oBADf,EACqCF,uBADrC;IAIAE,YAAY,GAAG,CACXA,YAAY,CAAC,CAAD,CAAZ,GAAkBI,SAAS,CAAC,CAAD,CAA3B,GAAiC/K,IADtB,EAEX2K,YAAY,CAAC,CAAD,CAAZ,GAAkBI,SAAS,CAAC,CAAD,CAA3B,GAAiC9K,GAFtB,CAAf;IAKA2K,gBAAgB,GAAGI,aAAa,CAAChM,MAAD,CAAhC;IACAa,mBAAmB,GAAGmL,aAAa,CAC/BrM,aAAa,CAAC4L,eAAD,EAAkBA,eAAlB,EAAmC,IAAnC,CAAb,CAAsDlL,YAAtD,IAAsEN,QAAQ,CAACD,IADhD,EAE/B,IAF+B,CAAnC;IAIAgK,QAAQ,GAAGuB,cAAc,CAAC,CAAChO,IAAD,EAAOC,IAAP,CAAD,EAAe+L,SAAf,CAAzB;;;SAGG;IACHS,QAAQ,UADL;IAEH8B,gBAAgB,kBAFb;IAGH/K,mBAAmB,qBAHhB;IAIH4K,eAAe,iBAJZ;IAKHpC,SAAS,WALN;IAMHrJ,MAAM,QANH;IAOHgB,IAAI,MAPD;IAQHC,GAAG,KARA;IASHsF,KAAK,OATF;IAUHC,MAAM,QAVH;IAWHnJ,IAAI,MAXD;IAYHC,IAAI,MAZD;IAaH2I,IAAI,MAbD;IAcHC,IAAI,MAdD;IAeH7B,KAAK,OAfF;IAgBHE,MAAM,QAhBH;IAiBHhB,UAAU,YAjBP;IAkBHC,YAAY,cAlBT;IAmBHC,YAAY,cAnBT;IAoBH9B,YAAY,cApBT;IAqBHrD,MAAM,QArBH;IAsBHoN,eAAe,iBAtBZ;IAuBHhK,IAAI,MAvBD;IAwBHiK,YAAY,cAxBT;IAyBHpN,MAAM,QAzBH;IA0BHmB,eAAe;GA1BnB;;AA6BJ,SAAgBmM;SACL;IACH7K,IAAI,EAAE,CADH;IACMuF,KAAK,EAAE,CADb;IAEHtF,GAAG,EAAE,CAFF;IAEKuF,MAAM,EAAE,CAFb;IAGHnC,KAAK,EAAE,CAHJ;IAGOE,MAAM,EAAE,CAHf;IAIHL,WAAW,EAAE,CAJV;IAIaC,YAAY,EAAE,CAJ3B;IAKH8H,WAAW,EAAE,CALV;IAKaC,YAAY,EAAE;GALlC;;AAQJ,SAAgBF,cAAcpN,IAA8BuN;MAClD3M,+BAAA;MAAEwB,cAAF;MAAQqD,gBAAR;MAAepD,YAAf;MAAoBuF,kBAApB;MAA4BD,gBAA5B;MAAmChC,kBAAnC;;MAEAuC,IAAI,GAAuB;IAC7B9F,IAAI,MADyB;IAE7BuF,KAAK,OAFwB;IAG7BtF,GAAG,KAH0B;IAI7BuF,MAAM,QAJuB;IAK7BnC,KAAK,OALwB;IAM7BE,MAAM;GANV;;MASI4H,SAAJ,EAAe;IACXrF,IAAI,CAAC5C,WAAL,GAAmBtF,EAAE,CAACsF,WAAtB;IACA4C,IAAI,CAAC3C,YAAL,GAAoBvF,EAAE,CAACuF,YAAvB;IACA2C,IAAI,CAACmF,WAAL,GAAmBrN,EAAE,CAACqN,WAAtB;IACAnF,IAAI,CAACoF,YAAL,GAAoBtN,EAAE,CAACsN,YAAvB;;;SAEGpF,IAAP;;AAEJ,SAAgBsF,aAAapM;MACrB,CAACA,MAAL,EAAa;;;;MAGPqM,SAAS,GAAGrM,MAAM,CAACsM,YAAP,CAAoB,gBAApB,CAAlB;;MAEI,CAACD,SAAL,EAAgB;;;;MAGVE,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAZ;EAECF,SAAS,CAACxQ,OAAV,CAAkB,GAAlB,IAAyB,CAAC,CAA3B,KAAkC0Q,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC,CAA5C;EACCF,SAAS,CAACxQ,OAAV,CAAkB,GAAlB,IAAyB,CAAC,CAA3B,KAAkC0Q,GAAG,CAAC,CAAD,CAAH,GAAS,CAA3C;EACCF,SAAS,CAACxQ,OAAV,CAAkB,GAAlB,IAAyB,CAAC,CAA3B,KAAkC0Q,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC,CAA5C;EACCF,SAAS,CAACxQ,OAAV,CAAkB,GAAlB,IAAyB,CAAC,CAA3B,KAAkC0Q,GAAG,CAAC,CAAD,CAAH,GAAS,CAA3C;SAEOA,GAAP;;AAEJ,SAAgBC,iBAAiBpG,OAAmBqG;SACzC,CACHC,IAAI,CAACD,IAAD,EAAOrG,KAAK,CAAC,CAAD,CAAZ,CADD,EAEHsG,IAAI,CAACD,IAAD,EAAOrG,KAAK,CAAC,CAAD,CAAZ,CAFD,EAGHsG,IAAI,CAACD,IAAD,EAAOrG,KAAK,CAAC,CAAD,CAAZ,CAHD,EAIHsG,IAAI,CAACD,IAAD,EAAOrG,KAAK,CAAC,CAAD,CAAZ,CAJD,CAAP;;AAOJ,SAAgBuG,wBAAwBnN;MACpCwB;MACAC;MACA5D;MACAC;MACA2I;MACAC;SASOsG,gBAAgB,CAAC,CAACnP,IAAD,EAAOC,IAAP,EAAa2I,IAAb,EAAmBC,IAAnB,CAAD,EAA2B,CAAClF,IAAD,EAAOC,GAAP,CAA3B,CAAvB;;AAEJ,SAAgB2L,UAAUC;SACfxR,IAAI,CAACC,KAAL,CAAWuR,GAAG,GAAG,CAAN,KAAY,CAAC,GAAb,GAAmBA,GAAG,GAAG,CAAzB,GAA6BA,GAAxC,CAAP;;AAEJ,SAAgBC,SAASD,KAAahO;MAC9B,CAACA,IAAL,EAAW;WACAgO,GAAP;;;SAEGxR,IAAI,CAACC,KAAL,CAAWuR,GAAG,GAAGhO,IAAjB,IAAyBA,IAAhC;;AAEJ,SAAgBkO,cAAcC,MAAgBnO;EAC1CmO,IAAI,CAACpJ,OAAL,CAAa,UAACqJ,CAAD,EAAI1N,CAAJ;IACTyN,IAAI,CAACzN,CAAD,CAAJ,GAAUuN,QAAQ,CAACE,IAAI,CAACzN,CAAD,CAAL,EAAUV,IAAV,CAAlB;GADJ;SAGOmO,IAAP;;AAGJ,SAAgBE,MAAMC,MAAWvR;MACzBuR,IAAI,CAACvR,IAAD,CAAR,EAAgB;IACZuR,IAAI,CAACvR,IAAD,CAAJ,CAAWsR,KAAX;IACAC,IAAI,CAACvR,IAAD,CAAJ,GAAa,IAAb;;;AAIR,SAAgBwR,wBAAwB/L,KAAehE,MAAgBC;SAC5D,CAAC+D,GAAG,CAAC,CAAD,CAAH,GAAShE,IAAI,CAAC,CAAD,CAAd,KAAsBC,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAAC,CAAD,CAApC,IAA2C,CAACgE,GAAG,CAAC,CAAD,CAAH,GAAShE,IAAI,CAAC,CAAD,CAAd,KAAsBC,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAAC,CAAD,CAApC,CAAlD;;AAEJ,SAAgBgQ,SAAShM,KAAehE,MAAgBC,MAAgB2I,MAAgBC;MAC9EoH,EAAE,GAAGF,uBAAuB,CAAC/L,GAAD,EAAMhE,IAAN,EAAYC,IAAZ,CAAlC;MACMiQ,EAAE,GAAGH,uBAAuB,CAAC/L,GAAD,EAAM/D,IAAN,EAAY4I,IAAZ,CAAlC;MACMsH,EAAE,GAAGJ,uBAAuB,CAAC/L,GAAD,EAAM6E,IAAN,EAAY7I,IAAZ,CAAlC;MAEMoQ,EAAE,GAAGL,uBAAuB,CAAC/L,GAAD,EAAM/D,IAAN,EAAY4I,IAAZ,CAAlC;MACMwH,EAAE,GAAGN,uBAAuB,CAAC/L,GAAD,EAAM6E,IAAN,EAAYD,IAAZ,CAAlC;MACM0H,EAAE,GAAGP,uBAAuB,CAAC/L,GAAD,EAAM4E,IAAN,EAAY3I,IAAZ,CAAlC;MACMsQ,MAAM,GAAG,CAACN,EAAD,EAAKC,EAAL,EAASC,EAAT,CAAf;MACMK,MAAM,GAAG,CAACJ,EAAD,EAAKC,EAAL,EAASC,EAAT,CAAf;;MAGIC,MAAM,CAACE,KAAP,CAAa,UAAAC,IAAA;WAAQA,IAAI,IAAI,CAAR;GAArB,KACGH,MAAM,CAACE,KAAP,CAAa,UAAAC,IAAA;WAAQA,IAAI,IAAI,CAAR;GAArB,CADH,IAEGF,MAAM,CAACC,KAAP,CAAa,UAAAC,IAAA;WAAQA,IAAI,IAAI,CAAR;GAArB,CAFH,IAGGF,MAAM,CAACC,KAAP,CAAa,UAAAC,IAAA;WAAQA,IAAI,IAAI,CAAR;GAArB,CAJP,EAKE;WACS,IAAP;;;SAEG,KAAP;;AAGJ,SAAgBC,WACZC,UACAnR,GACAoR;MAEMC,KAAK,GAAGrR,CAAC,CAACqR,KAAhB;;MAEI,CAACA,KAAK,CAACA,KAAX,EAAkB;IACdA,KAAK,CAACA,KAAN,GAAc,EAAd;;;SAEGC,QAAA,GAAA,EACAF,MADA;IAEHlO,MAAM,EAAEiO,QAAQ,CAACzC,KAAT,CAAexL;IACvBqO,OAAO,EAAEvR,CAAC,CAACuR;IACXC,OAAO,EAAExR,CAAC,CAACwR;IACXC,UAAU,EAAEzR,CAAC,CAACyR;IACdC,aAAa,EAAEP;IACfE,KAAK,EAAEA,KAAK,CAACA;GAPV,CAAP;;AAWJ,SAAgBM,aACZR,UACArS,MACAsS;SAEOD,QAAQ,CAACQ,YAAT,CAAsB7S,IAAtB,EAA4BsS,MAA5B,CAAP;;AAGJ,SAAgB7O,iBAAiBT,IAA8B8P;SACpDxE,MAAM,CAAC7K,gBAAP,CAAwBT,EAAxB,EAA4B8P,SAA5B,CAAP;;AAGJ,SAAgBC,YAAYC,OAAeC;MACjCC,YAAY,GAAqB,EAAvC;MACMC,UAAU,GAAqB,EAArC;SAEOH,KAAK,CAACI,MAAN,CAAa,UAAAC,IAAA;QACVrT,IAAI,GAAGqT,IAAI,CAACrT,IAAlB;;QAEIkT,YAAY,CAAClT,IAAD,CAAZ,IAAsB,CAACiT,OAAO,CAACK,IAAR,CAAa,UAAAC,MAAA;aAAUF,IAAI,CAACE,MAAD,CAAJ;KAAvB,CAA3B,EAAiE;aACtD,KAAP;;;QAEAF,IAAI,CAACG,SAAT,EAAoB;UACZL,UAAU,CAACE,IAAI,CAACG,SAAN,CAAd,EAAgC;eACrB,KAAP;;;MAEJL,UAAU,CAACE,IAAI,CAACG,SAAN,CAAV,GAA6B,IAA7B;;;IAEJN,YAAY,CAAClT,IAAD,CAAZ,GAAqB,IAArB;WACO,IAAP;GAbG,CAAP;;AAiBJ,SAAgByT,mBAAmBhL,OAAeiL,SAAkBC;SACzDlL,KAAK,IAAIiL,OAAO,GAAGC,KAAH,GAAW,IAAIA,KAA1B,CAAZ;;AAEJ,SAAgBC,kBAAkBjL,QAAgB+K,SAAkBC;SACzDhL,MAAM,IAAI+K,OAAO,GAAG,IAAIC,KAAP,GAAeA,KAA1B,CAAb;;AAGJ,SAAgBE,OAAOC,IAASC;SACrBD,EAAE,KAAKC,EAAP,IAAcD,EAAE,IAAI,IAAN,IAAcC,EAAE,IAAI,IAAzC;;AAGJ,SAAgBC;iBAAqB;;OAAA,YAAApS,uBAAAA;IAAAqS,UAAA,gBAAA;;;MAC3BhO,MAAM,GAAGgO,MAAM,CAAChO,MAAP,GAAgB,CAA/B;;OACK,IAAItC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsC,MAApB,EAA4B,EAAEtC,CAA9B,EAAiC;QACvBvB,KAAK,GAAG6R,MAAM,CAACtQ,CAAD,CAApB;;QAEI,CAAC4B,WAAW,CAACnD,KAAD,CAAhB,EAAyB;aACdA,KAAP;;;;SAID6R,MAAM,CAAChO,MAAD,CAAb;;AAGJ,SAAgBiO,QAAWC,KAAUC;MAC3BC,KAAK,GAAU,EAArB;MACMC,QAAQ,GAAiB,EAA/B;EAEAH,GAAG,CAACnM,OAAJ,CAAY,UAAChF,EAAD,EAAKuR,KAAL;QACFC,QAAQ,GAAGJ,IAAI,CAACpR,EAAD,EAAKuR,KAAL,EAAYJ,GAAZ,CAArB;;QAEI,CAACG,QAAQ,CAACE,QAAD,CAAb,EAAyB;MACrBF,QAAQ,CAACE,QAAD,CAAR,GAAqB,EAArB;MACAH,KAAK,CAAC9N,IAAN,CAAW+N,QAAQ,CAACE,QAAD,CAAnB;;;IAEJF,QAAQ,CAACE,QAAD,CAAR,CAAmBjO,IAAnB,CAAwBvD,EAAxB;GAPJ;SASOqR,KAAP;;AAGJ,SAAgBI,KAAQN;SACbA,GAAG,CAAChG,MAAJ,CAAW,UAACC,IAAD,EAAOsG,GAAP;WACPtG,IAAI,CAACuG,MAAL,CAAYD,GAAZ,CAAP;GADG,EAEJ,EAFI,CAAP;;AAKJ,SAIgBE;eAAU;;OAAA,YAAAhT,uBAAAA;IAAAiT,QAAA,gBAAA;;;EACtBA,IAAI,CAACC,IAAL,CAAU,UAAChS,CAAD,EAAIiS,CAAJ;WAAUtV,IAAI,CAAC+M,GAAL,CAASuI,CAAT,IAActV,IAAI,CAAC+M,GAAL,CAAS1J,CAAT,CAAd;GAApB;SAEO+R,IAAI,CAAC,CAAD,CAAX;;AAEJ,SAMgBG,gBAAgBpF,OAA6B1O;;;MAErD4E,iBAAA;MACA6B,6BADA;MAGE5G,CAAC,GAAG+E,IAAI,GAAG,CAAH,GAAO,CAArB;EACAlC,qFAAA,EACI1C,OAAA,QADJ,EACaA,OAAA,QADb;SAQOA,CAAP;;;SC7hCY+T,mBACZ5C,UACA6C,SACAhU;MAEMoR,MAAM,GAAiBF,UAAU,CAACC,QAAD,EAAWnR,CAAX,EAAc;IACjDiU,OAAO,EAAE,CAAC,CAACjU,CAAC,CAACiU;GADsB,CAAvC;MAIMC,UAAU,GAAGF,OAAO,GAAG,OAAH,GAAa,EAAvC;;MAEIA,OAAJ,EAAa;IACT5C,MAAM,CAAC+C,OAAP,GAAiBhD,QAAQ,CAACiD,KAAT,CAAeD,OAAhC;;;EAEJxC,YAAY,CAACR,QAAD,EAAW,aAAW+C,UAAX,UAAX,EAAyC9C,MAAzC,CAAZ;;AAEJ,SAAgBiD,cACZlD,UACA6C,SACAhU;MAEMoR,MAAM,GAAiBF,UAAU,CAACC,QAAD,EAAWnR,CAAX,EAAc;IACjDiU,OAAO,EAAE,CAAC,CAACjU,CAAC,CAACiU;GADsB,CAAvC;MAIMC,UAAU,GAAGF,OAAO,GAAG,OAAH,GAAa,EAAvC;;MAEIA,OAAJ,EAAa;IACT5C,MAAM,CAAC+C,OAAP,GAAiBhD,QAAQ,CAACiD,KAAT,CAAeD,OAAhC;;;EAEJxC,YAAY,CAACR,QAAD,EAAW,aAAW+C,UAAtB,EAAoC9C,MAApC,CAAZ;;AAEJ,SAAgBkD,iBACZnD,UACA6C,SACAhU;MAEMoR,MAAM,GAAiBF,UAAU,CAACC,QAAD,EAAWnR,CAAX,EAAc;IACjDiU,OAAO,EAAE,CAAC,CAACjU,CAAC,CAACuU,MADoC;IAEjDC,MAAM,EAAExU,CAAC,CAACwU;GAFyB,CAAvC;MAKMN,UAAU,GAAGF,OAAO,GAAG,OAAH,GAAa,EAAvC;;MAEIA,OAAJ,EAAa;IACT5C,MAAM,CAAC+C,OAAP,GAAiBhD,QAAQ,CAACiD,KAAT,CAAeD,OAAhC;;;EAEJxC,YAAY,CAACR,QAAD,EAAW,aAAW+C,UAAX,QAAX,EAAuC9C,MAAvC,CAAZ;;;SC3CYqD,YACZtD,UACAuD,UACAC,gBACAT,YACAU,WACA5U,GACA6U;MAEMC,OAAO,GAAGF,SAAS,KAAK,OAA9B;;MAEIE,OAAO,IAAIZ,UAAU,CAACnV,OAAX,CAAmB,SAAnB,IAAgC,CAAC,CAA5C,IAAiD,CAACiB,CAAC,CAAC+U,SAApD,IAAiE5D,QAAQ,CAAC6D,WAAT,KAAyBhV,CAAC,CAACyR,UAAF,CAAavO,MAA3G,EAAmH;WACxG,KAAP;;;MAEE+R,SAAS,GAAG,KAAGN,cAAH,GAAoBT,UAApB,GAAiCU,SAAnD;MACMM,aAAa,GAAG,KAAGP,cAAH,GAAoBT,UAApB,cAAtB;MACM9Q,KAAK,GAAGwR,SAAS,KAAK,KAA5B;MACMO,OAAO,GAAGP,SAAS,CAAC7V,OAAV,CAAkB,OAAlB,IAA6B,CAAC,CAA9C;;MAEI+V,OAAJ,EAAa;IACT3D,QAAQ,CAACiE,UAAT,CAAoBR,SAApB,EAA+B,IAA/B,EAAqC,KAArC;;;MAEAA,SAAS,KAAK,EAAd,IAAoB,CAACO,OAAzB,EAAkC;IAC/BrB,eAAe,CAAC3C,QAAQ,CAACzC,KAAV,EAAiB1O,CAAjB,CAAf;;;MAEGgU,OAAO,GAAGE,UAAU,CAACnV,OAAX,CAAmB,OAAnB,IAA8B,CAAC,CAA/C;MACM+S,KAAK,GAAoBX,QAAgB,CAACuD,QAAD,CAA/C;MACMW,MAAM,GAAGvD,KAAK,CAACI,MAAN,CAAa,UAACC,IAAD;WAAeA,IAAI,CAAC8C,SAAD,CAAJ;GAA5B,CAAf;MACMK,OAAO,GAAGD,MAAM,CAACnD,MAAP,CAAc,UAACC,IAAD;QACpBoD,SAAS,GAAGT,OAAO,IAAI3C,IAAI,CAAC+C,aAAD,CAAjC;;QAEI,CAACK,SAAD,IAAcA,SAAS,CAACvV,CAAD,EAAImR,QAAJ,CAA3B,EAA0C;aAC/BgB,IAAI,CAAC8C,SAAD,CAAJ,CAAgB9D,QAAhB,EAA0BnR,CAA1B,CAAP;;;WAEG,KAAP;GANY,CAAhB;MAQMwV,QAAQ,GAAGF,OAAO,CAACvQ,MAAzB;;MAEI+P,OAAJ,EAAa;QACLO,MAAM,CAACtQ,MAAP,IAAiB,CAACyQ,QAAtB,EAAgC;MAC5BrE,QAAQ,CAACzC,KAAT,CAAe+G,OAAf,GAAyB,IAAzB;;UAEKtE,QAA0B,CAACuE,SAAhC,EAA2C;QACtCvE,QAA0B,CAACuE,SAA3B,CAAqC5O,OAArC,CAA6C,UAAA6O,cAAA;UAC1CA,cAAc,CAACjH,KAAf,CAAqB+G,OAArB,GAA+B,IAA/B;SADH;;;aAIE,KAAP;;;IAEJ1B,kBAAkB,CAAC5C,QAAD,EAAW6C,OAAX,EAAoBhU,CAApB,CAAlB;GAXJ,MAYO,IAAIoD,KAAJ,EAAW;IACdkR,gBAAgB,CAACnD,QAAD,EAAW6C,OAAX,EAAoBhU,CAApB,CAAhB;GADG,MAEA,IAAIwV,QAAJ,EAAc;IACjBnB,aAAa,CAAClD,QAAD,EAAW6C,OAAX,EAAoBhU,CAApB,CAAb;;;MAEAoD,KAAJ,EAAW;IACP+N,QAAQ,CAACzC,KAAT,CAAe+G,OAAf,GAAyB,IAAzB;;;MAEA,CAACX,OAAD,IAAYU,QAAhB,EAA0B;QAClBF,OAAO,CAAClD,IAAR,CAAa,UAAAD,IAAA;aAAQA,IAAI,CAACiD,UAAL;KAArB,KAAyC,CAACpB,OAA9C,EAAuD;MACnD7C,QAAQ,CAACiE,UAAT,CAAoBR,SAApB,EAA+B,KAA/B,EAAsC,KAAtC;KADJ,MAEO;MACHzD,QAAQ,CAACiE,UAAT,CAAoBR,SAApB,EAA+B,IAA/B,EAAqC,KAArC;;;;MAGJ,CAAE,CAACE,OAAD,IAAYU,QAAb,IAA2BpS,KAAK,IAAI,CAACoS,QAAtC,KAAoD,CAACX,SAAzD,EAAoE;IAChE1D,QAAQ,CAACyE,WAAT;;;MAEA,CAACd,OAAD,IAAY,CAAC1R,KAAb,IAAsB,CAAC+R,OAAvB,IAAkCK,QAAtC,EAAgD;IAC5Cf,WAAW,CAACtD,QAAD,EAAWuD,QAAX,EAAqBC,cAArB,EAAqCT,UAArC,EAAiDU,SAAS,GAAG,OAA7D,EAAsE5U,CAAtE,CAAX;;;AAGR,SAAgB6V,eACZ1E,UACAjO,QACAwR,UACAR;MAEM4B,OAAO,GAAiB;IAC1BrS,SAAS,EAAE2J,MADe;IAE1B2I,cAAc,EAAE5E,QAAQ,CAACiD,KAAT,CAAe2B;GAFnC;GAIC,MAAD,EAAS,OAAT,EAAkBjP,OAAlB,CAA0B,UAAA6N,cAAA;KACrB,OAAD,EAAU,EAAV,EAAc,KAAd,EAAqB7N,OAArB,CAA6B,UAAA8N,SAAA;MACzBkB,OAAO,CAAC,KAAGnB,cAAH,GAAoBC,SAAS,CAAChR,WAAV,EAArB,CAAP,GACM,UAAC5D,CAAD;eAAYyU,WAAW,CAACtD,QAAD,EAAWuD,QAAX,EAAqBC,cAArB,EAAqCT,UAArC,EAAiDU,SAAjD,EAA4D5U,CAA5D,CAAX;OADlB;KADJ;GADJ;SAOO,IAAIgW,OAAJ,CAAY9S,MAAZ,EAAqB4S,OAArB,CAAP;;;ACxEJ,IAAMG,iBAAiB,GAAGC,MAAM,CAAC,KAAD,EAAQhX,YAAR,CAAhC;;AAEA,SAASiX,UAAT,CAAoB5J,SAApB,EAAuChM,IAAvC,EAAuDC,IAAvD,EAAuE6S,KAAvE;MACUvG,GAAG,GAAGT,MAAM,CAAC9L,IAAD,EAAOC,IAAP,CAAlB;MACMwM,QAAQ,GAAGT,SAAS,GAAIyD,QAAQ,CAAClD,GAAG,GAAGvO,IAAI,CAACiO,EAAX,GAAgB,GAAjB,EAAsB,EAAtB,CAAT,GAAsC,GAAzC,GAA+C,CAAC,CAA1E;SAEO4J,aAAA,MAAA;IAAKC,GAAG,EAAE,SAAOhD;IAASiD,SAAS,EAAE7V,MAAM,CAAC,MAAD,EAAS,WAAT,EAAsB8L,SAAtB;qBAC/BS;sBACCT;IAAW5J,KAAK,EAAEkK,YAAY,CAACtM,IAAD,EAAOC,IAAP,EAAasM,GAAb;GAF3C,CAAP;;;AAIJ;;;EACYwE,SAAA,gBAAA,QAAA;;0BADZ;wEAAA;;IAiBWiF,WAAA,GAAiC;MACpC9S,SAAS,EAAE,IADyB;MAEpCP,MAAM,EAAE,IAF4B;MAGpCwD,YAAY,EAAE7F,qBAAqB,EAHC;MAIpCW,MAAM,EAAEX,qBAAqB,EAJO;MAKpCgE,YAAY,EAAEhE,qBAAqB,EALC;MAMpC+N,eAAe,EAAE,EANmB;MAOpChK,IAAI,EAAE,KAP8B;MAQpCV,IAAI,EAAE,CAR8B;MASpCC,GAAG,EAAE,CAT+B;MAUpCoD,KAAK,EAAE,CAV6B;MAWpCE,MAAM,EAAE,CAX4B;MAYpC7E,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ,CAZmB;MAapC2J,SAAS,EAAE,CAbyB;MAcpCoC,eAAe,EAAE,CAdmB;MAepCE,YAAY,EAAE,CAAC,CAAD,EAAI,CAAJ,CAfsB;MAgBpCpN,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAhB4B;MAiBpClB,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,CAjB8B;MAkBpCC,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,CAlB8B;MAmBpC2I,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,CAnB8B;MAoBpCC,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,CApB8B;MAqBpC0F,gBAAgB,EAAEC,eAAe,EArBG;MAsBpChL,mBAAmB,EAAEgL,eAAe,EAtBA;MAuBpC/B,QAAQ,EAAE;KAvBP;IAyBAuJ,iBAAA,GAA8B,EAA9B;IACAA,kBAAA,GAA+B,EAA/B;;;;;;gBAOA,GAAP;QACUnC,KAAK,GAAG,KAAKA,KAAnB;QACM1R,eAAA;QAAE8T,cAAF;QAAQC,kCAAR;QAAwBH,wBAAxB;QAAmCI,uBAAnC;QAAwDC,cAAxD;SAEDC,WAAL;;QAEMrR;;;KAAA;QAAEsR,oBAAF;QAAoBC,kBAApB;;QACA1M,eAAA;QAAElG,cAAF;QAAQC,YAAR;QAAa5D,cAAb;QAAmBC,cAAnB;QAAyB2I,cAAzB;QAA+BC,cAA/B;QAAqC2N,uBAArC;QAA0DxK,wBAA1D;QACAyK,YAAY,GAAI5C,KAAa,CAACD,OAApC;QACM8C,SAAS,GAAG,CAAED,YAAY,IAAIA,YAAY,CAACjS,MAA9B,IAAyC2R,WAA1C,KAA0DK,WAA5E;WAGIX,aAAA,CAACH,iBAAD;MACIiB,GAAG,EAAEA,GAAG,CAAC,IAAD,EAAO,YAAP;MACRZ,SAAS,EAAK7V,MAAM,CAAC,aAAD,EAAgB8L,SAAS,KAAK,CAAC,CAAf,GAAmB,SAAnB,GAA+B,EAA/C,CAAN,MAAA,GAA4D+J;MAAa3T,KAAK,EAAE;oBAC9E,UAD8E;mBAE/EsU,SAAS,GAAG,OAAH,GAAa,MAFyD;qBAG7E,gBAAa/S,IAAI,GAAG2S,UAApB,UAAA,IAAqC1S,GAAG,GAAG2S,SAA3C,0BAH6E;kBAIhFH,IAJgF;oBAK3EA,IAAI;;KAP3B,EASK,KAAKQ,WAAL,EATL,EAUKhB,UAAU,CAACK,IAAI,GAAG,GAAH,GAAS,EAAd,EAAkBjW,IAAlB,EAAwBC,IAAxB,EAA8B,CAA9B,CAVf,EAWK2V,UAAU,CAACK,IAAI,GAAG,GAAH,GAAS,EAAd,EAAkBhW,IAAlB,EAAwB4I,IAAxB,EAA8B,CAA9B,CAXf,EAYK+M,UAAU,CAACK,IAAI,GAAG,GAAH,GAAS,EAAd,EAAkBjW,IAAlB,EAAwB4I,IAAxB,EAA8B,CAA9B,CAZf,EAaKgN,UAAU,CAACK,IAAI,GAAG,GAAH,GAAS,EAAd,EAAkBrN,IAAlB,EAAwBC,IAAxB,EAA8B,CAA9B,CAbf,CADJ;GAXG;;2BA6BA,GAAP;SACSgO,UAAL,CAAgBC,UAAhB;QACMjD,KAAK,GAAG,KAAKA,KAAnB;QACQkD,qCAAA;QAAgB7T,2BAAhB;SAEH8T,WAAL,CAAiBnD,KAAjB;;QACI,CAAC3Q,SAAD,IAAc,CAAC6T,cAAnB,EAAmC;WAC1BlC,UAAL,CAAgB,KAAhB,EAAuB,KAAvB,EAA8B,IAA9B;;GAPD;;4BAUA,GAAP,UAA0BoC,SAA1B;SACSD,WAAL,CAAiBC,SAAjB;GADG;;8BAGA,GAAP;IACIpH,KAAK,CAAC,IAAD,EAAO,eAAP,CAAL;IACAA,KAAK,CAAC,IAAD,EAAO,gBAAP,CAAL;GAFG;;sBAIA,GAAP;QACU1N,eAAA;QAAE4U,kCAAF;QAAkB7T,wBAAlB;WAECA,SAAU,IACT6T,cAAc,IAAIA,cAAc,CAACG,YAAf,EADnB,IAEA,KAAKL,UAAL,CAAgBC,UAAhB,GAA6BlU,aAFpC;GAHG;;2BAOA,GAAP,UAAyBD,MAAzB;WACWA,MAAM,IAAK,CAACA,MAAM,CAACsM,YAAP,CAAoB,OAApB,KAAgC,EAAjC,EAAqCzQ,OAArC,CAA6CE,MAA7C,IAAuD,CAAC,CAA1E;GADG;;mBAGA,GAAP,UAAiBe,CAAjB;QACQ,KAAK0X,aAAT,EAAwB;WACfA,aAAL,CAAmBC,WAAnB,CAA+B3X,CAA/B;;GAFD;;kBAKA,GAAP,UAAgBuR,OAAhB,EAAiCC,OAAjC;QACU9O,eAAA;QAAEnC,cAAF;QAAQC,cAAR;QAAc2I,cAAd;QAAoBC,cAApB;QAA0BlG,kBAA1B;QAAkC4L,sCAAlC;;QAEF,CAAC5L,MAAL,EAAa;aACF,KAAP;;;QAEIgB,4BAAA;QAAMC,0BAAN;QACFI,GAAG,GAAG,CAACgN,OAAO,GAAGrN,IAAX,EAAiBsN,OAAO,GAAGrN,GAA3B,CAAZ;WAEOoM,QAAQ,CAAChM,GAAD,EAAMhE,IAAN,EAAYC,IAAZ,EAAkB4I,IAAlB,EAAwBD,IAAxB,CAAf;GATG;;oBAWA,GAAP,UAAkByO,IAAlB,EAA+CC,QAA/C,EAAmEC,UAAnE;6BAAmE,EAAA;MAAAA,iBAAA;;;QACzD1D,KAAK,GAAG,KAAKA,KAAnB;QACMkD,cAAc,GAAGlD,KAAK,CAACkD,cAA7B;QACM5I,KAAK,GAAG,KAAKA,KAAnB;QACMxL,MAAM,GAAIwL,KAAK,CAACxL,MAAN,IAAgB,KAAKkR,KAAL,CAAWlR,MAA3C;QACMO,SAAS,GAAG,KAAKgU,YAAL,EAAlB;QACMzR,aAAa,GAAGsR,cAAc,GAC9BA,cAAc,CAAClD,KAAf,CAAqBpO,aADS,GAE9BoO,KAAK,CAACpO,aAFZ;SAGK+R,WAAL,CACIvJ,aAAa,CAACtL,MAAD,EAASO,SAAT,EAAoBA,SAApB,EAA+BuC,aAAa,IAAIvC,SAAhD,EACToU,QAAQ,GAAGnJ,KAAH,GAAWM,SADV,CADjB,EAGIsI,cAAc,GAAG,KAAH,GAAWQ,UAH7B;GATG;;qBAeA,GAAP,UAAmBN,SAAnB;QACUQ,iBAAiB,GAAG,KAAKZ,UAAL,CAAgBC,UAAhB,EAA1B;QACMY,aAAa,GAAG,KAAKC,WAAL,CAAiBnT,MAAvC;QACMoT,cAAc,GAAG,KAAKC,YAAL,CAAkBrT,MAAzC;QACM7B,MAAM,GAAG,KAAKkR,KAAL,CAAWlR,MAA1B;QACMmV,UAAU,GAAGb,SAAS,CAACtU,MAA7B;QACMoV,QAAQ,GAAG,KAAKlE,KAAL,CAAWkE,QAA5B;QACMC,YAAY,GAAGf,SAAS,CAACc,QAA/B;QACME,eAAe,GAAG,CAACF,QAAD,IAAaD,UAAU,KAAKnV,MAApD;QACMuV,OAAO,GAAI,CAACR,aAAD,IAAkB,KAAKP,aAAxB,IACTc,eADS,IAETD,YAAY,KAAKD,QAFxB;;QAIIG,OAAJ,EAAa;MACTrI,KAAK,CAAC,IAAD,EAAO,eAAP,CAAL;WACK2H,WAAL,CAAiB;QAAEtC,OAAO,EAAE;OAA5B;;;QAEA,CAAC0C,cAAL,EAAqB;MACjB/H,KAAK,CAAC,IAAD,EAAO,gBAAP,CAAL;;;QAGAlN,MAAM,IAAI+U,aAAV,IAA2B,CAAC,KAAKP,aAArC,EAAoD;UAC5CY,QAAJ,EAAc;aACLZ,aAAL,GAAqB7B,cAAc,CAAC,IAAD,EAAO,KAAKb,WAAZ,EAA0B,aAA1B,EAAyC,EAAzC,CAAnC;OADJ,MAEO;aACE0C,aAAL,GAAqB7B,cAAc,CAAC,IAAD,EAAO3S,MAAP,EAAgB,aAAhB,EAA+B,EAA/B,CAAnC;;;;QAGJ,CAAC,KAAKwV,cAAN,IAAwBP,cAA5B,EAA4C;WACnCO,cAAL,GAAsB7C,cAAc,CAAC,IAAD,EAAOmC,iBAAP,EAA0B,cAA1B,EAA0C,SAA1C,CAApC;;;QAEAS,OAAJ,EAAa;WACJE,UAAL;;GAhCD;;oBAmCA,GAAP;WACW,CAAC,KAAKjB,aAAL,GAAqB,KAAKA,aAAL,CAAmBkB,MAAnB,EAArB,GAAmD,KAApD,MACH,KAAKF,cAAL,GAAsB,KAAKA,cAAL,CAAoBE,MAApB,EAAtB,GAAqD,KADlD,CAAP;GADG;;sBAIA,GAAP,UAAoBhB,IAApB;SACSxC,UAAL,CAAgBwC,IAAhB,EAAsB,IAAtB;GADG;;iBAGA,GAAP;QACUlJ,KAAK,GAAG,KAAKA,KAAnB;QACMpF,KAAK,GAAGuG,uBAAuB,CAAC,KAAKnB,KAAN,CAArC;QACOnO,eAAA;QAAMC,eAAN;QAAY2I,eAAZ;QAAkBC,eAAlB;QACDY,IAAI,GAAGX,OAAO,CAACC,KAAD,CAApB;QAEImE,yBAAA;QACAC,2BADA;QAIAnG,kBAAA;QACAE,oBADA;QAEAvD,gBAFA;QAGAC,cAHA;QAKE0U,QAAQ,GAAG,CAACnK,KAAK,CAACxK,IAAP,EAAawK,KAAK,CAACvK,GAAnB,CAAjB;QACM1C,MAAM,GAAGmO,IAAI,CAACiJ,QAAD,EAAWnK,KAAK,CAACjN,MAAjB,CAAnB;QACMoN,YAAY,GAAGe,IAAI,CAACiJ,QAAD,EAAWnK,KAAK,CAACG,YAAjB,CAAzB;WACO;MACHtH,KAAK,OADF;MAEHE,MAAM,QAFH;MAGHvD,IAAI,MAHD;MAIHC,GAAG,KAJA;MAKH5D,IAAI,MALD;MAMHC,IAAI,MAND;MAOH2I,IAAI,MAPD;MAQHC,IAAI,MARD;MASHqE,WAAW,aATR;MAUHC,YAAY,cAVT;MAWHmB,YAAY,cAXT;MAYHpN,MAAM;KAZV;GAlBG;;iBAiCA,GAAP,UAAeqX,QAAf,EAAiCC,KAAjC,EAA2DC,SAA3D;wBAAiC,EAAA;MAAAD,UAAA;;;QACvBrW,eAAA;QAAEoP,gBAAF;QAASmH,wBAAT;QACAC,WAAW,GAASpH,KAAM,CAACI,MAAP,CAAc,UAACC,IAAD;aAAgBA,IAAI,CAACrT,IAAL,KAAcga,QAAd;KAA9B,EAAsD,CAAtD,CAA1B;;QAEI,KAAKK,UAAL,MAAqB,CAACD,WAAtB,IAAqC,CAACA,WAAW,CAACE,OAAtD,EAA+D;aACpD;QACHA,OAAO;iBACI,IAAP;SAFD;QAIHC,UAAU;iBACC,IAAP;;OALR;;;QASEhJ,IAAI,GAAG,IAAb;QACMiJ,aAAa,GAAGJ,WAAW,CAACE,OAAZ,CAAoB,IAApB,CAAtB;QAEM1E,QAAQ,GAAG4E,aAAa,CAACC,SAAd,GAA0B,cAA1B,GAA2C,aAA5D;QACMrF,UAAU,GAAI,MAAI+E,SAAS,GAAG,OAAH,GAAa,EAA1B,KAAgCK,aAAa,CAACC,SAAd,GAA0B,SAA1B,GAAsC,EAAtE,CAApB;QAEMC,SAAS,GAAG;MACdJ,OAAO,EAAP,UAAQK,SAAR;QACIhF,WAAW,CAACpE,IAAD,EAAOqE,QAAP,EAAiB,MAAjB,EAAyBR,UAAzB,EAAqC,EAArC,eACJoF,aAAa,CAACF,OAAd,CAAsBK,SAAtB;UACH1E,SAAS,EAAE;UAFJ,EAGRiE,SAHQ,CAAX;eAIO,IAAP;OANU;MAQdK,UAAU;QACN5E,WAAW,CAACpE,IAAD,EAAOqE,QAAP,EAAiB,MAAjB,EAAyBR,UAAzB,EAAqC,KAArC,eACJoF,aAAa,CAACD,UAAd;UACHtE,SAAS,EAAE;UAFJ,CAAX;eAIO,IAAP;;KAbR;IAiBAN,WAAW,CAACpE,IAAD,EAAOqE,QAAP,EAAiB,MAAjB,EAAyBR,UAAzB,EAAqC,OAArC,eACJoF,aAAa,CAACI,YAAd,CAA2BX,KAA3B;MACHhE,SAAS,EAAE;MAFJ,EAGRiE,SAHQ,CAAX;WAKOD,KAAK,CAACC,SAAN,GAAkBQ,SAAS,CAACJ,OAAV,CAAkBL,KAAlB,EAAyBM,UAAzB,EAAlB,GAA0DG,SAAjE;GA1CG;;qBA4CA,GAAP;QACU9W,eAAA;QAAEQ,kBAAF;QAAUO,wBAAV;QAAqB6T,kCAArB;QACA/R,eAAA;QACFwR,uBADE;QAEF4C,6BAFE;;QAKF,CAAC5C,WAAD,IAAgB,CAAC7T,MAArB,EAA6B;;;;SAGxB0W,WAAL;QAEMC,SAAS,GAAG,CAAClH,MAAM,CAACoE,WAAD,EAAc7T,MAAd,CAAP,IAAgC,CAACyP,MAAM,CAACgH,cAAD,EAAiBlW,SAAjB,CAAzD;;QAEI,CAACoW,SAAL,EAAgB;;;;SAIX9B,WAAL,CAAiB;MAAE7U,MAAM,QAAR;MAAUO,SAAS;KAApC;;QAEI,CAAC6T,cAAD,KAAoB7T,SAAS,IAAI,KAAK2T,UAAtC,CAAJ,EAAuD;WAC9ChC,UAAL,CAAgB,KAAhB,EAAuB,KAAvB,EAA8B,KAA9B;;GArBD;;sBAwBA,GAAP,UAAoBtW,IAApB,EAAkCkB,CAAlC;QACU8Z,QAAQ,GAAI,KAAK1F,KAAL,CAAmBtV,IAAnB,CAAlB;WAEOgb,QAAQ,IAAIA,QAAQ,CAAC9Z,CAAD,CAA3B;GAHG;;oBAKG,GAAV;oBAAA;;QACQ,KAAKkY,WAAL,CAAiBhG,MAAjB,CAAwB,UAAAC,IAAA;UACpBA,IAAI,CAAC/B,KAAT,EAAgB;QACZ+B,IAAI,CAAC/B,KAAL,CAAWmG,KAAX;eACO,IAAP;;;aAEG,KAAP;KALA,EAMDxR,MANH,EAMW;WACF6Q,WAAL;;GARE;;qBAWA,GAAV,UACI9D,KADJ,EAEIoC,UAFJ;wBACI,EAAA;MAAApC,QAAgB,KAAKsC,KAAL,CAAWtC,KAA3B;;;6BACA,EAAA;MAAAoC,eAAA;;;QAEME,KAAK,GAAG,KAAKA,KAAnB;QAEMpC,YAAY,GAAGF,KAAM,CAACI,MAAP,CAAc,UAAAC,IAAA;aAAQA,IAAI,IAAIiC,KAAK,CAACjC,IAAI,CAACrT,IAAN,CAAb;KAAtB,CAArB;QAEMib,SAAS,GAAG,SAAO7F,UAAP,UAAlB;QACM8F,UAAU,GAAG,UAAQ9F,UAAR,UAAnB;QACM+F,gBAAgB,GAAG,SAAO/F,UAAP,iBAAzB;QAEMgE,WAAW,GAAGrG,WAAW,CAACG,YAAD,EAAe,CAAC+H,SAAD,EAAYC,UAAZ,CAAf,CAA/B;QACM5B,YAAY,GAAGvG,WAAW,CAACG,YAAD,EAAe,CAACiI,gBAAD,CAAf,CAAhC;SAEK/B,WAAL,GAAmBA,WAAnB;SACKE,YAAL,GAAoBA,YAApB;GAhBM;;qBAkBA,GAAV,UAAsB8B,SAAtB,EAAsCpC,UAAtC;QACQA,UAAJ,EAAgB;WACPqC,QAAL,CAAcD,SAAd;KADJ,MAEO;UACGxL,KAAK,GAAG,KAAKA,KAAnB;;WAEK,IAAM5P,IAAX,IAAmBob,SAAnB,EAA8B;QAC1BxL,KAAK,CAAC5P,IAAD,CAAL,GAAcob,SAAS,CAACpb,IAAD,CAAvB;;;GAPF;;qBAWA,GAAV;oBAAA;;QACUsV,KAAK,GAAG,KAAKA,KAAnB;QACMtC,KAAK,GAAWsC,KAAK,CAACtC,KAA5B;QACME,YAAY,GAAGF,KAAK,CAACI,MAAN,CAAa,UAAAC,IAAA;aAAQA,IAAI,IAAIiC,KAAK,CAACjC,IAAI,CAACrT,IAAN,CAAb;KAArB,CAArB;QACMsb,QAAQ,GAAG;MAAEC,aAAa,EAAEjE;KAAlC;WAEO7C,IAAI,CAAC1B,WAAW,CAACG,YAAD,EAAe,CAAC,QAAD,CAAf,CAAX,CAAsC5S,GAAtC,CAA0C,UAACsD,EAAD;UAAG4X;aAC9CA,MAAO,CAAC/D,KAAD,EAAO6D,QAAP,CAAd;KADQ,CAAD,CAAX;GANM;;EAnUIG,4BAAA,GAA+C;IACzDrX,MAAM,EAAE,IADiD;IAEzDO,SAAS,EAAE,IAF8C;IAGzDuC,aAAa,EAAE,IAH0C;IAIzDvE,MAAM,EAAE,IAJiD;IAKzD+U,IAAI,EAAE,KALmD;IAMzDc,cAAc,EAAE,IANyC;IAOzDb,cAAc,EAAE,IAPyC;IAQzD3E,KAAK,EAAE,EARkD;IASzDiE,cAAc,EAAE,EATyC;IAUzDuC,QAAQ,EAAE,KAV+C;IAWzD1V,eAAe,EAAE,EAXwC;IAYzD0T,SAAS,EAAE,EAZ8C;IAazDK,IAAI,EAAE;GAbI;wBA6UlB;EA9UYP,cADZ;;AC5BA,SAASoE,YAAT,CAAsBC,OAAtB;SACWpO,MAAM,CAAC,CACVoO,OAAO,CAAC,CAAD,CAAP,CAAWlJ,OADD,EAEVkJ,OAAO,CAAC,CAAD,CAAP,CAAWjJ,OAFD,CAAD,EAGV,CACCiJ,OAAO,CAAC,CAAD,CAAP,CAAWlJ,OADZ,EAECkJ,OAAO,CAAC,CAAD,CAAP,CAAWjJ,OAFZ,CAHU,CAAN,GAMFjT,IAAI,CAACiO,EANH,GAMQ,GANf;;;AASJ,gBAAe;EACX1N,IAAI,EAAE,WADK;EAEXsW,UAAU,EAAE,IAFD;EAGXhB,KAAK,EAAE;IACHsG,SAAS,EAAEC,OADR;IAEH5E,cAAc,EAAE6E;GALT;EAOXZ,UAAU,EAAV,UACI7I,QADJ,EAEInR,CAFJ;QAIYqR,eAAA;QAAOE,mBAAP;QAAgBC,mBAAhB;QAAyBiJ,mBAAzB;QAAkChJ,yBAAlC;QAA8C0C,mBAA9C;QACFzR,mBAAA;QAAEgY,wBAAF;QAAa5I,gBAAb;;QAEF,CAAC4I,SAAL,EAAgB;aACL,KAAP;;;QAEEzF,SAAS,GAAG,aAAUd,OAAO,GAAG,OAAH,GAAa,EAA9B,WAAlB;QACM0G,gBAAgB,GAAG,UAAO1G,OAAO,GAAG,OAAH,GAAa,EAA3B,kBAAzB;QAEM2G,UAAU,GAAG,CAACJ,SAAS,KAAK,IAAd,GAAqBvJ,QAAQ,CAACiH,YAA9B,GAA6CtG,KAAM,CAACI,MAAP,CAAc,UAAAC,IAAA;aACpEuI,SAAS,CAAC3b,OAAV,CAAkBoT,IAAI,CAACrT,IAAvB,IAAsC,CAAC,CAA9C;KAD6D,CAA9C,EAEfoT,MAFe,CAER,UAAAC,IAAA;aAAQA,IAAI,CAAC4I,QAAL,IAAiB5I,IAAI,CAAC0I,gBAAD,CAArB;KAFA,CAAnB;QAIMzJ,MAAM,GAAGF,UAAU,CAAeC,QAAf,EAAyBnR,CAAzB,EAA4B,EAA5B,CAAzB;;QAEImU,OAAJ,EAAa;MACT/C,MAAM,CAAC+C,OAAP,GAAiBA,OAAjB;;;QAEE6G,MAAM,GAAGrJ,YAAY,CAACR,QAAD,EAAW8D,SAAX,EAAsB7D,MAAtB,CAA3B;IAEAC,KAAK,CAAC4C,OAAN,GAAgB+G,MAAM,KAAK,KAA3B;IACA3J,KAAK,CAACS,KAAN,GAAcgJ,UAAd;QAEM7G,OAAO,GAAG5C,KAAK,CAAC4C,OAAtB;;QAEI,CAACA,OAAL,EAAc;aACH,KAAP;;;QAEEgH,YAAY,GAAGT,YAAY,CAACC,OAAD,CAAjC;IAEAK,UAAU,CAAChU,OAAX,CAAmB,UAAAqL,IAAA;MACfd,KAAK,CAACc,IAAI,CAACrT,IAAL,GAAY,OAAb,CAAL,GAA6B,EAA7B;UACMoc,SAAS,GAAQ;QACnB7J,KAAK,EAAEA,KAAK,CAACc,IAAI,CAACrT,IAAL,GAAY,OAAb,CADO;QAEnByS,OAAO,SAFY;QAGnBC,OAAO,SAHY;QAInBC,UAAU,YAJS;QAKnBwJ,YAAY,cALO;QAMnBE,SAAS,EAAE;OANf;MAQAhJ,IAAI,CAAC0I,gBAAD,CAAJ,CAAwB1J,QAAxB,EAAkC+J,SAAlC;KAVJ;IAaA/J,QAAQ,CAACzC,KAAT,CAAe0M,cAAf,GAAgC;MAC5B7O,SAAS,EAAE,CAAC,CAAD,EAAI,CAAJ;KADf;WAGO0H,OAAP;GAzDO;EA2DXoH,KAAK,EAAL,UACIlK,QADJ,EAEInR,CAFJ;QAIYqR,eAAA;QAAOE,mBAAP;QAAgBC,mBAAhB;QAAyB8J,oBAAzB;QAA4CC,qBAA5C;QAAsDd,mBAAtD;QAA+DhJ,yBAA/D;QAA2E0C,mBAA3E;;QACJ,CAAC9C,KAAK,CAAC4C,OAAX,EAAoB;;;;QAGdgH,YAAY,GAAGT,YAAY,CAACC,OAAD,CAAjC;QACMe,cAAc,GAAGD,QAAQ,IAAI,IAAI,IAAID,UAAZ,CAA/B;QACMlK,MAAM,GAAGF,UAAU,CAAUC,QAAV,EAAoBnR,CAApB,EAAuB,EAAvB,CAAzB;;QAEImU,OAAJ,EAAa;MACT/C,MAAM,CAAC+C,OAAP,GAAiBA,OAAjB;;;QAEEc,SAAS,GAAG,aAAUd,OAAO,GAAG,OAAH,GAAa,EAA9B,CAAlB;IACAxC,YAAY,CAACR,QAAD,EAAW8D,SAAX,EAAsB7D,MAAtB,CAAZ;QAEMU,KAAK,GAAWT,KAAK,CAACS,KAA5B;QACM+I,gBAAgB,GAAG,UAAO1G,OAAO,GAAG,OAAH,GAAa,EAA3B,aAAzB;IAEArC,KAAK,CAAChL,OAAN,CAAc,UAAAqL,IAAA;MACVA,IAAI,CAAC0I,gBAAD,CAAJ,CAAwB1J,QAAxB,EAAkC;QAC9BI,OAAO,SADuB;QAE9BC,OAAO,SAFuB;QAG9BH,KAAK,EAAEA,KAAK,CAACc,IAAI,CAACrT,IAAL,GAAY,OAAb,CAHkB;QAI9B2S,UAAU,YAJoB;QAK9B+J,cAAc,gBALgB;QAM9BP,YAAY,cANkB;QAO9BE,SAAS,EAAE;OAPf;KADJ;WAWO/J,MAAP;GA3FO;EA6FXqK,QAAQ,EAAR,UACItK,QADJ,EAEInR,CAFJ;QAIYqR,eAAA;QAAOE,mBAAP;QAAgBC,mBAAhB;QAAyByC,mBAAzB;QAAkCxC,yBAAlC;QAA8C0C,mBAA9C;;QACJ,CAAC9C,KAAK,CAAC4C,OAAX,EAAoB;;;;QAGdgB,SAAS,GAAG,aAAUd,OAAO,GAAG,OAAH,GAAa,EAA9B,SAAlB;QAEM/C,MAAM,GAAGF,UAAU,CAAaC,QAAb,EAAuBnR,CAAvB,EAA0B;MAAEwU,MAAM,EAAEP;KAApC,CAAzB;;QAEIE,OAAJ,EAAa;MACT/C,MAAM,CAAC+C,OAAP,GAAiBA,OAAjB;;;IAEJxC,YAAY,CAACR,QAAD,EAAW8D,SAAX,EAAsB7D,MAAtB,CAAZ;QACMU,KAAK,GAAWT,KAAK,CAACS,KAA5B;QACM+I,gBAAgB,GAAG,UAAO1G,OAAO,GAAG,OAAH,GAAa,EAA3B,gBAAzB;IAEArC,KAAK,CAAChL,OAAN,CAAc,UAAAqL,IAAA;MACVA,IAAI,CAAC0I,gBAAD,CAAJ,CAAwB1J,QAAxB,EAAkC;QAC9BI,OAAO,SADuB;QAE9BC,OAAO,SAFuB;QAG9BgD,MAAM,EAAEP,OAHsB;QAI9B5C,KAAK,EAAEA,KAAK,CAACc,IAAI,CAACrT,IAAL,GAAY,OAAb,CAJkB;QAK9B2S,UAAU,YALoB;QAM9B0J,SAAS,EAAE;OANf;KADJ;WAUOlH,OAAP;GA1HO;EA4HXyH,eAAe,EAAf,UAAgBvK,QAAhB,EAAyCnR,CAAzC;WACW,KAAKga,UAAL,CAAgB7I,QAAhB,eAA+BnR;MAAGmU,OAAO,EAAEhD,QAAQ,CAACiD,KAAT,CAAeD;MAA1D,CAAP;GA7HO;EA+HXwH,UAAU,EAAV,UAAWxK,QAAX,EAAoCnR,CAApC;WACW,KAAKqb,KAAL,CAAWlK,QAAX,eAA0BnR;MAAGmU,OAAO,EAAEhD,QAAQ,CAACiD,KAAT,CAAeD;MAArD,CAAP;GAhIO;EAkIXyH,aAAa,EAAb,UAAczK,QAAd,EAAuCnR,CAAvC;WACW,KAAKyb,QAAL,CAActK,QAAd,eAA6BnR;MAAGmU,OAAO,EAAEhD,QAAQ,CAACiD,KAAT,CAAeD;MAAxD,CAAP;;CAnIR;;SCZgB0H,iBACZ1K,UACAgB,MACAyF,MACAvG,OACAyK,WACAhC;MAEMhb,IAAI,GAAGqT,IAAI,CAACrT,IAAlB;MACMid,SAAS,GAAG1K,KAAK,CAACvS,IAAD,CAAL,KAAgBuS,KAAK,CAACvS,IAAD,CAAL,GAAc,EAA9B,CAAlB;MACMsE,KAAK,GAAG,CAAC,CAACwU,IAAI,CAACoE,KAAL,CAAW,OAAX,CAAhB;MACMC,MAAM,GAAG9K,QAAQ,CAACuE,SAAT,CAAmBtW,GAAnB,CAAuB,UAAC8c,KAAD,EAAQzZ,CAAR;QAC5B0Z,UAAU,GAAGJ,SAAS,CAACtZ,CAAD,CAAT,KAAiBsZ,SAAS,CAACtZ,CAAD,CAAT,GAAe,EAAhC,CAAnB;QAEM2Z,UAAU,GAAGC,UAAU,CAACP,SAAD,CAAV,GAAwBA,SAAS,CAACI,KAAD,EAAQC,UAAR,CAAjC,GAAuDL,SAA1E;QACMd,MAAM,GAAI7I,IAAY,CAACyF,IAAD,CAAZ,CAAoBsE,KAApB,eAAiCE;MAAY/K,KAAK,EAAE8K;MAAYG,UAAU,EAAE;MAA5E,CAAhB;IAEAtB,MAAM,IAAIlB,QAAV,IAAsBA,QAAQ,CAACoC,KAAD,EAAQC,UAAR,EAAoBnB,MAApB,EAA4BvY,CAA5B,CAA9B;;QAEIW,KAAJ,EAAW;MACP8Y,KAAK,CAACxN,KAAN,CAAY+G,OAAZ,GAAsB,IAAtB;;;WAEGuF,MAAP;GAXW,CAAf;SAcOiB,MAAP;;;SCpBYM,aAAapL,UAAgCzO;MAAE2O;MACrD9L,mBAAA;MACF/D,kBADE;MAEFkF,8BAFE;MAGF9B,cAHE;MAIFV,cAJE;MAKFC,YALE;MAMF1C,kBANE;MAOFkF,8BAPE;MAQF9B,8BARE;MASFjC,oCATE;MAWA/C,CAAC,GAAG+E,IAAI,GAAG,CAAH,GAAO,CAArB;EAEAyM,KAAK,CAACzM,IAAN,GAAaA,IAAb;EACAyM,KAAK,CAAC7P,MAAN,GAAeA,MAAf;EACA6P,KAAK,CAACxM,YAAN,GAAqBA,YAArB;EACAwM,KAAK,CAAC3K,YAAN,GAAqBA,YAArB;EACA2K,KAAK,CAAC1K,YAAN,GAAqBA,YAArB;EACA0K,KAAK,CAACzO,eAAN,GAAwBA,eAAxB;EACAyO,KAAK,CAACmL,aAAN,GAAsBzR,MAAM,CAACvJ,MAAD,EAAS3B,CAAT,CAA5B;EACAwR,KAAK,CAACvG,mBAAN,GAA4BC,MAAM,CAACrE,YAAD,EAAe7G,CAAf,CAAlC;EACAwR,KAAK,CAACoL,cAAN,GAAuBxT,qBAAqB,CAAC2G,IAAI,CAAC,CAAC1L,IAAD,EAAOC,GAAP,CAAD,EAAc1C,MAAd,CAAL,EAA4B5B,CAA5B,CAA5C;EACAwR,KAAK,CAACqL,mBAAN,GAA4B1T,QAAQ,CAACqI,KAAK,CAACvG,mBAAP,EAA4BuG,KAAK,CAACoL,cAAlC,EAAkD5c,CAAlD,CAApC;EACAwR,KAAK,CAACsL,aAAN,GAAsB3T,QAAQ,CAACqI,KAAK,CAACmL,aAAP,EAAsBnL,KAAK,CAACoL,cAA5B,EAA4C5c,CAA5C,CAA9B;;AAEJ,SAAgB+c,YAAYla,IAA8Bma;MAA5BxL;MAAOyL;MAAOC;MAEpCjS,+CAAA;MACA0R,mCADA;MAEA5X,iBAFA;MAGA8X,+CAHA;MAIAC,mCAJA;MAKAF,qCALA;MAOE5c,CAAC,GAAG+E,IAAI,GAAG,CAAH,GAAO,CAArB;SAEO+F,KAAK,CACR3B,QAAQ,CACJ6T,QAAQ,GAAG/R,mBAAH,GAAyB0R,aAD7B,EAEJ5M,IAAI,CAAC6M,cAAD,EAAiB,CAACK,KAAD,EAAQC,KAAR,CAAjB,CAFA,EAGJld,CAHI,CADA,EAMRgd,QAAQ,GAAGH,mBAAH,GAAyBC,aANzB,CAAZ;;AASJ,SAAgBK,mBAAmBta,IAA8Bma;MAA5BxL;MAAOyL;MAAOC;MAE3CrW,iCAAA;MACAlF,qBADA;MAEAoD,iBAFA;MAGA8X,+CAHA;MAIAC,mCAJA;MAKAF,qCALA;MAOE5c,CAAC,GAAG+E,IAAI,GAAG,CAAH,GAAO,CAArB;SAEO+F,KAAK,CACR3B,QAAQ,CACJ6T,QAAQ,GAAGnW,YAAH,GAAkBlF,MADtB,EAEJoO,IAAI,CAACiN,QAAQ,GAAGH,mBAAH,GAAyBC,aAAlC,EAAiD,CAACG,KAAD,EAAQC,KAAR,CAAjD,CAFA,EAGJld,CAHI,CADA,EAMR4c,cANQ,CAAZ;;AASJ,SAAgBQ,wBACZra,iBACA2E,OACAE,QACA8C,WACAC,YACAE;0BAFA,EAAA;IAAAH,iBAAA;;;2BACA,EAAA;IAAAC,mBAAA;;;2BACA,EAAA;IAAAE,cAAwB,GAAG,EAA3B;;;MAGI,CAAC9H,eAAL,EAAsB;WACX8H,UAAP;;;SAEG9H,eAAe,CAACxD,GAAhB,CAAoB,UAACmF,GAAD,EAAM9B,CAAN;QACjBC,mBAAA;QAAExB,gBAAF;QAASa,cAAT;;QAEAmb,QAAQ,GAAIza,CAAC,GAAG+H,UAAH,GAAgBD,SAAnC;QACM4S,IAAI,GAAI1a,CAAC,GAAGgF,MAAH,GAAYF,KAA3B;;QACIhD,GAAG,KAAK,GAAR,IAAe6Y,KAAK,CAAClc,KAAD,CAAxB,EAAiC;;UAGvBmc,YAAY,GAAGH,QAAQ,GAAGxS,UAAU,CAACjI,CAAD,CAAV,GAAgBya,QAAnB,GAA8B,CAA3D;aAEOC,IAAI,GAAGE,YAAd;KALJ,MAMO,IAAItb,IAAI,KAAK,GAAb,EAAkB;aACdb,KAAP;;;WAEGic,IAAI,GAAGjc,KAAP,GAAe,GAAtB;GAdG,CAAP;;AAiBJ,SAAgBoc,yBAAyB/Q;MAC/BgR,OAAO,GAAa,EAA1B;;MAEIhR,SAAS,CAAC,CAAD,CAAT,IAAgB,CAApB,EAAuB;QACfA,SAAS,CAAC,CAAD,CAAT,IAAgB,CAApB,EAAuB;MACnBgR,OAAO,CAAClY,IAAR,CAAa,CAAb;;;QAEAkH,SAAS,CAAC,CAAD,CAAT,IAAgB,CAApB,EAAuB;MACnBgR,OAAO,CAAClY,IAAR,CAAa,CAAb;;;;MAGJkH,SAAS,CAAC,CAAD,CAAT,IAAgB,CAApB,EAAuB;QACfA,SAAS,CAAC,CAAD,CAAT,IAAgB,CAApB,EAAuB;MACnBgR,OAAO,CAAClY,IAAR,CAAa,CAAb;;;QAEAkH,SAAS,CAAC,CAAD,CAAT,IAAgB,CAApB,EAAuB;MACnBgR,OAAO,CAAClY,IAAR,CAAa,CAAb;;;;SAGDkY,OAAP;;AAEJ,SAAgBC,oBACZlU,OACAiD;;;;;;SAOO+Q,wBAAwB,CAAC/Q,SAAD,CAAxB,CAAoCnN,GAApC,CAAwC,UAAAiU,KAAA;WAAS/J,KAAK,CAAC+J,KAAD,CAAL;GAAjD,CAAP;;AAEJ,SAAgBoK,kBACZnU,OACAiD;;;;;;MAOMmR,SAAS,GAAGF,mBAAmB,CAAClU,KAAD,EAAQiD,SAAR,CAArC;SAEO,CACHoR,OAAO,MAAP,OAAA,EAAWD,SAAS,CAACte,GAAV,CAAc,UAAAmF,GAAA;WAAOA,GAAG,CAAC,CAAD,CAAH;GAArB,CAAX,CADG,EAEHoZ,OAAO,MAAP,OAAA,EAAWD,SAAS,CAACte,GAAV,CAAc,UAAAmF,GAAA;WAAOA,GAAG,CAAC,CAAD,CAAH;GAArB,CAAX,CAFG,CAAP;;AAKJ,SAAgBqZ,yBACZlb,IACA6J;;;;;;MADChM;MAAMC;MAAM2I;MAAMC;SASZqU,iBAAiB,CAAC,CAACrU,IAAD,EAAOD,IAAP,EAAa3I,IAAb,EAAmBD,IAAnB,CAAD,EAA2BgM,SAA3B,CAAxB;;;AAEJ,SAASsR,WAAT,CAAqBvU,KAArB,EAAwCiD,SAAxC;MAEQuR,oBAAA;MACAC,oBADA;MAEAC,oBAFA;MAGAC,oBAHA;SAKGL,wBAAwB,CAAC,CAACE,SAAD,EAAYC,SAAZ,EAAuBC,SAAvB,EAAkCC,SAAlC,CAAD,EAA+C1R,SAA/C,CAA/B;;;AAEJ,SAAS2R,OAAT,CACIC,QADJ,EAEI3c,MAFJ,EAGI+F,KAHJ,EAIIE,MAJJ,EAKI5H,CALJ,EAMI0M,SANJ;MAQUjD,KAAK,GAAGJ,aAAa,CAAC1H,MAAD,EAAS+F,KAAT,EAAgBE,MAAhB,EAAwB5H,CAAxB,CAA3B;MACM0E,GAAG,GAAGqZ,wBAAwB,CAACtU,KAAD,EAAQiD,SAAR,CAApC;MACMuQ,KAAK,GAAGqB,QAAQ,CAAC,CAAD,CAAR,GAAc5Z,GAAG,CAAC,CAAD,CAA/B;MACMwY,KAAK,GAAGoB,QAAQ,CAAC,CAAD,CAAR,GAAc5Z,GAAG,CAAC,CAAD,CAA/B;SAEO,CAACuY,KAAD,EAAQC,KAAR,CAAP;;;AAEJ,SAAgBqB,cACZzX,cACA9B,cACApD,QACA5B;SAEOkH,QAAQ,CACXJ,YADW,EAEXpF,iBAAiB,CAACsD,YAAD,EAAehF,CAAf,EAAkB4B,MAAlB,CAFN,EAGX5B,CAHW,CAAf;;AAMJ,SAAgB0I,YACZmG,OACAzQ;MAGI2E,uCAAA;MACA+D,iCADA;MAEA/B,iBAFA;MAGAC,iCAHA;MAKEhF,CAAC,GAAG+E,IAAI,GAAG,CAAH,GAAO,CAArB;SAEOwZ,aAAa,CAChBzX,YADgB,EAEhBI,QAAQ,CAAClC,YAAD,EAAe2D,iBAAiB,CAACvK,KAAD,EAAQ4B,CAAR,CAAhC,EAA4CA,CAA5C,CAFQ,EAGhB+C,eAHgB,EAIhB/C,CAJgB,CAApB;;AAOJ,SAAgBwe,aACZlN,UACAlT,OACAsO,WACA+R;MAEM5P,KAAK,GAAGyC,QAAQ,CAACzC,KAAvB;MAEI9J,iBAAA;MACAV,iBADA;MAEAC,eAFA;MAGAoD,mBAHA;MAIAE,qBAJA;MAOE5H,CAAC,GAAG+E,IAAI,GAAG,CAAH,GAAO,CAArB;MACMqU,SAAS,GAAG9H,QAAQ,CAACiD,KAAT,CAAe6E,SAAjC;MACMsF,UAAU,GAAGhW,WAAW,CAAC4I,QAAQ,CAACzC,KAAV,EAAiBzQ,KAAjB,CAA9B;MACMugB,SAAS,GAAGvF,SAAS,GAAG/U,IAAH,GAAU,CAArC;MACMua,QAAQ,GAAGxF,SAAS,GAAG9U,GAAH,GAAS,CAAnC;MAEMga,QAAQ,GAAGG,UAAU,GAAGA,UAAH,GAAgBT,WAAW,CAAChO,uBAAuB,CAACsB,QAAQ,CAACzC,KAAV,CAAxB,EAA0CnC,SAA1C,CAAtD;MAEMoD,IAAI,GAAGuO,OAAO,CAChBC,QADgB,EACNI,UADM,EACMhX,KADN,EACaE,MADb,EACqB5H,CADrB,EAEhB0M,SAFgB,CAApB;SAKO5B,KAAK,CAACgF,IAAD,EAAO,CAAC6O,SAAD,EAAYC,QAAZ,CAAP,CAAZ;;AAGJ,SAAgBC,cACZvN,UACA5J,OACAE;;AAGA8E,WACAoS,eACA/b;MAGIqW,oCAAA;MAEEvW,mBAAA;MACFgI,+BADE;MAEF7F,8BAFE;MAGF8B,8BAHE;MAIF/B,cAJE;MAKF2F,oBALE;MAMFC,sBANE;MAOFtG,cAPE;MAQFC,YARE;MAWAtE,CAAC,GAAG+E,IAAI,GAAG,CAAH,GAAO,CAArB;MACMga,UAAU,GAAG3B,uBAAuB,CACtCra,eADsC,EAEtC2E,KAFsC,EAGtCE,MAHsC,EAItC8C,SAJsC,EAKtCC,UALsC,EAMtCE,UANsC,CAA1C;MAQM8T,SAAS,GAAGvF,SAAS,GAAG/U,IAAH,GAAU,CAArC;MACMua,QAAQ,GAAGxF,SAAS,GAAG9U,GAAH,GAAS,CAAnC;MACMoa,UAAU,GAAGH,aAAa,CAACzX,YAAD,EAAe9B,YAAf,EAA6B+Z,UAA7B,EAAyC/e,CAAzC,CAAhC;MACM8P,IAAI,GAAGuO,OAAO,CAACS,aAAD,EAAgBJ,UAAhB,EAA4BhX,KAA5B,EAAmCE,MAAnC,EAA2C5H,CAA3C,EAA8C0M,SAA9C,CAApB;SAEO5B,KAAK,CAACgF,IAAD,EAAO,CAAC6O,SAAD,EAAYC,QAAZ,CAAP,CAAZ;;AAEJ,SAAgBI,kBACZ1N,UACA5E;MAEI,CAACA,SAAS,CAAC,CAAD,CAAV,IAAiB,CAACA,SAAS,CAAC,CAAD,CAA/B,EAAoC;WACzB,CAAC,CAAD,EAAI,CAAJ,CAAP;;;MAGA7J,iCAAA;MAAAoc,6CAAA;SAEG,CACHvS,SAAS,CAAC,CAAD,CAAT,GAAeA,SAAS,CAAC,CAAD,CAAxB,GAA8BuS,aAAa,CAAC,CAAD,CAAb,GAAmB,CAAC,CAD/C,EAEHvS,SAAS,CAAC,CAAD,CAAT,GAAeA,SAAS,CAAC,CAAD,CAAxB,GAA8BuS,aAAa,CAAC,CAAD,CAAb,GAAmB,CAAC,CAF/C,CAAP;;AAKJ,SAAgBC,yBACZ5N,UACA5E;SAEOsR,WAAW,CAAChO,uBAAuB,CAACsB,QAAQ,CAACzC,KAAV,CAAxB,EAA0CnC,SAA1C,CAAlB;;;SCnTYyS,mBAAmBhf;MAC3BA,CAAC,CAAC+U,SAAN,EAAiB;WACN/U,CAAC,CAACif,eAAT;;;SAEGC,QAAQ,CAAClf,CAAC,CAACyR,UAAF,CAAavO,MAAd,EAAsBzC,MAAM,CAAC,WAAD,CAA5B,CAAf;;;SCGY0e,mBACZhO;MAEMzO,mBAAA;MACF0c,0BADE;MAEF7Z,2BAFE;MAGE8Z,iCAHF;MAIEC,+BAJF;MAOAlL,KAAK,GAAGjD,QAAQ,CAACiD,KAAvB;MAEIhK,yBAAA;MAAAmV,0CAAA;MACAtU,uBADA;MACAuU,wCADA;MAEAC,6CAFA;MAGAC,iDAHA;MAMEC,eAAe,GAAOP,UAAU,MAAV,EAA5B;;MAEIG,cAAc,IAAIG,oBAAtB,EAA4C;IACxCA,oBAAqB,CAAC5Y,OAAtB,CAA8B,UAAAvC,GAAA;MAC1Bob,eAAe,CAACta,IAAhB,CAAqB;QAAEuS,IAAI,EAAE,YAAR;QAAsBrT,GAAG,EAAE,CAAC,CAAD,EAAIyL,QAAQ,CAACzL,GAAD,EAAM,GAAN,CAAZ,CAA3B;QAAoD4Y,IAAI,EAAEmC;OAA/E;KADJ;;;MAIAE,YAAY,IAAIC,kBAApB,EAAwC;IACpCA,kBAAmB,CAAC3Y,OAApB,CAA4B,UAAAvC,GAAA;MACxBob,eAAe,CAACta,IAAhB,CAAqB;QAAEuS,IAAI,EAAE,UAAR;QAAoBrT,GAAG,EAAE,CAACyL,QAAQ,CAACzL,GAAD,EAAM,GAAN,CAAT,EAAqB,CAArB,CAAzB;QAAkD4Y,IAAI,EAAEkC;OAA7E;KADJ;;;SAIGM,eAAP;;AAEJ,SAAgBC,eACZzO,UACA5H,QACAC,QACAqW,YACAC;MAEMH,eAAe,GAAGR,kBAAkB,CAAChO,QAAD,CAA1C;MACMiD,KAAK,GAAGjD,QAAQ,CAACiD,KAAvB;MAEI1R,sBAAA;MAAAqd,uCAAA;MAEEC,aAAa,GAAGlN,WAAW,CAASgN,mBAAT,EAA8B1L,KAAK,CAAC4L,aAApC,EAAmD,CAAnD,CAAjC;SAEO;IACHC,QAAQ,EAAEC,SAAS,CACfP,eADe,EAEf,UAFe,EAEHpW,MAFG,EAEKyW,aAFL,EAGfH,UAHe,EAIfE,WAJe,CADhB;IAOHI,UAAU,EAAED,SAAS,CACjBP,eADiB,EAEjB,YAFiB,EAEHnW,MAFG,EAEKwW,aAFL,EAGjBH,UAHiB,EAIjBE,WAJiB;GAPzB;;AAgBJ,SAAgBK,mBACZjP,UACAgN,UACAkC;MAKOC,gBAAA;MAAMC,gBAAN;MACAC,oBAAA;MAAQC,oBAAR;;MACD/d,4BAAA;MAACge,UAAD;MAAKC,UAAL;;MACAC,QAAQ,GAAGD,EAAE,GAAG,CAAtB;MACME,OAAO,GAAGH,EAAE,GAAG,CAArB;MAEMI,YAAY,GAAmB;IACjCC,MAAM,EAAE,KADyB;IAEjCvc,MAAM,EAAE,CAFyB;IAGjCD,GAAG,EAAE;GAHT;MAKMyc,cAAc,GAAmB;IACnCD,MAAM,EAAE,KAD2B;IAEnCvc,MAAM,EAAE,CAF2B;IAGnCD,GAAG,EAAE;GAHT;;MAMImc,EAAE,KAAK,CAAP,IAAYC,EAAE,KAAK,CAAvB,EAA0B;WACf;MACHV,QAAQ,EAAEa,YADP;MAEHX,UAAU,EAAEa;KAFhB;;;MAKEzb,iEAAA;MACF0b,8BADE;MAEFC,kCAFE;;EAKND,gBAAgB,CAACE,QAAjB,CAA0BjP,MAA1B,CAAiC,UAACxP,EAAD;QAAG6B;WACzBsc,OAAO,GAAGtc,GAAG,IAAIic,MAAV,GAAmBjc,GAAG,IAAIic,MAAxC;GADJ;EAGAU,kBAAkB,CAACC,QAAnB,CAA4BjP,MAA5B,CAAmC,UAACxP,EAAD;QAAG6B;WAC3Bqc,QAAQ,GAAGrc,GAAG,IAAIkc,MAAV,GAAmBlc,GAAG,IAAIkc,MAAzC;GADJ;EAGAQ,gBAAgB,CAACF,MAAjB,GAA0BE,gBAAgB,CAACE,QAAjB,CAA0Bpc,MAA1B,GAAmC,CAA7D;EACAmc,kBAAkB,CAACH,MAAnB,GAA4BG,kBAAkB,CAACC,QAAnB,CAA4Bpc,MAA5B,GAAqC,CAAjE;;MAEMqF,kDAAA;MACFgX,0BADE;MAEFC,gCAFE;;MAIApW,oDAAA;MACFqW,4BADE;MAEFC,kCAFE;;MAIAC,aAAa,GAAGF,gBAAgB,GAAGC,mBAAoB,CAAChd,GAArB,CAAyB,CAAzB,CAAH,GAAiC,CAAvE;MACMkd,WAAW,GAAGL,cAAc,GAAGC,iBAAkB,CAAC9c,GAAnB,CAAuB,CAAvB,CAAH,GAA+B,CAAjE;;MAEImc,EAAE,KAAK,CAAX,EAAc;QACNY,gBAAJ,EAAsB;MAClBN,cAAc,CAACD,MAAf,GAAwB,IAAxB;MACAC,cAAc,CAACzc,GAAf,GAAqBgd,mBAAoB,CAAChd,GAArB,CAAyB,CAAzB,CAArB;MACAyc,cAAc,CAACxc,MAAf,GAAwB+b,IAAI,GAAGS,cAAc,CAACzc,GAA9C;;GAJR,MAMO,IAAIoc,EAAE,KAAK,CAAX,EAAc;QACbS,cAAJ,EAAoB;MAChBN,YAAY,CAACC,MAAb,GAAsB,IAAtB;MACAD,YAAY,CAACvc,GAAb,GAAmBkd,WAAnB;MACAX,YAAY,CAACtc,MAAb,GAAsB8b,IAAI,GAAGmB,WAA7B;;GAJD,MAMA;;QAEG7f,CAAC,GAAG+e,EAAE,GAAGD,EAAf;QACM7M,CAAC,GAAGwM,MAAM,CAAC,CAAD,CAAN,GAAYze,CAAC,GAAG0e,IAA1B;QACIxX,CAAC,GAAG,CAAR;QACID,CAAC,GAAG,CAAR;QACIkY,MAAM,GAAG,KAAb;;QAEIK,cAAJ,EAAoB;MAChBvY,CAAC,GAAG4Y,WAAJ;MACA3Y,CAAC,GAAGlH,CAAC,GAAGiH,CAAJ,GAAQgL,CAAZ;MACAkN,MAAM,GAAG,IAAT;KAHJ,MAIO,IAAIO,gBAAJ,EAAsB;MACzBxY,CAAC,GAAG0Y,aAAJ;MACA3Y,CAAC,GAAG,CAACC,CAAC,GAAG+K,CAAL,IAAUjS,CAAd;MACAmf,MAAM,GAAG,IAAT;;;QAEAA,MAAJ,EAAY;MACRD,YAAY,CAACC,MAAb,GAAsB,IAAtB;MACAD,YAAY,CAACvc,GAAb,GAAmBsE,CAAnB;MACAiY,YAAY,CAACtc,MAAb,GAAsB8b,IAAI,GAAGzX,CAA7B;MAEAmY,cAAc,CAACD,MAAf,GAAwB,IAAxB;MACAC,cAAc,CAACzc,GAAf,GAAqBuE,CAArB;MACAkY,cAAc,CAACxc,MAAf,GAAwB+b,IAAI,GAAGzX,CAA/B;;;;SAGD;IACHmX,QAAQ,EAAEa,YADP;IAEHX,UAAU,EAAEa;GAFhB;;AAMJ,SAAgBU,WACZvQ,UACAnH,MAQA2X,UACA7B;MAEMD,UAAU,GAAG1O,QAAQ,CAACiD,KAAT,CAAeyL,UAAlC;MACM+B,YAAY,GAAG/B,UAAW,IAAI8B,QAApC;MAEIE,aAAa,GAAuC,CAAC,MAAD,EAAS,OAAT,CAAxD;MACIC,eAAe,GAAuC,CAAC,KAAD,EAAQ,QAAR,CAA1D;;MAEIF,YAAJ,EAAkB;IACdC,aAAa,CAACxc,IAAd,CAAmB,QAAnB;IACAyc,eAAe,CAACzc,IAAhB,CAAqB,QAArB;;;EAEJwc,aAAa,GAAGA,aAAa,CAAC3P,MAAd,CAAqB,UAAApT,IAAA;WAAQA,IAAI,IAAIkL,IAAR;GAA7B,CAAhB;EACA8X,eAAe,GAAGA,eAAe,CAAC5P,MAAhB,CAAuB,UAAApT,IAAA;WAAQA,IAAI,IAAIkL,IAAR;GAA/B,CAAlB;SAEO4V,cAAc,CACjBzO,QADiB,EAEjB0Q,aAAa,CAACziB,GAAd,CAAkB,UAAAN,IAAA;WAAQkL,IAAI,CAAClL,IAAD,CAAJ;GAA1B,CAFiB,EAGjBgjB,eAAe,CAAC1iB,GAAhB,CAAoB,UAAAN,IAAA;WAAQkL,IAAI,CAAClL,IAAD,CAAJ;GAA5B,CAHiB,EAIjB8iB,YAJiB,EAKjB9B,mBALiB,CAArB;;AASJ,SAAgBiC,4BACZC;MAEMjB,MAAM,GAAGiB,QAAQ,CAACjB,MAAxB;;MAEI,CAACA,MAAL,EAAa;WACF;MACHA,MAAM,EAAE,KADL;MAEHvc,MAAM,EAAE,CAFL;MAGHmL,IAAI,EAAE,CAAC,CAHJ;MAIHpL,GAAG,EAAE,CAJF;MAKH0d,SAAS,EAAE;KALf;;;MAQEC,OAAO,GAAGF,QAAQ,CAACb,QAAT,CAAkB,CAAlB,CAAhB;MACMgB,aAAa,GAAGD,OAAQ,CAACE,cAAT,CAAwB,CAAxB,CAAtB;MACM5d,MAAM,GAAG2d,aAAc,CAAC3d,MAA9B;MACMmL,IAAI,GAAGwS,aAAc,CAACxS,IAA5B;MACMsS,SAAS,GAAGE,aAAc,CAACF,SAAjC;SAEO;IACHlB,MAAM,QADH;IAEHvc,MAAM,QAFH;IAGHmL,IAAI,MAHD;IAIHpL,GAAG,EAAE2d,OAAQ,CAAC3d,GAJX;IAKH0d,SAAS;GALb;;;AASJ,SAAS/B,SAAT,CACId,UADJ,EAEIiD,UAFJ,EAGIC,WAHJ,EAIItC,aAJJ,EAKIH,UALJ,EAMIE,WANJ;MAQQ,CAACX,UAAD,IAAe,CAACA,UAAU,CAACra,MAA/B,EAAuC;WAC5B;MACHgc,MAAM,EAAE,KADL;MAEHI,QAAQ,EAAE;KAFd;;;MAKEoB,UAAU,GAAGF,UAAU,KAAK,UAAlC;MACMG,OAAO,GAAGD,UAAU,GAAG,CAAH,GAAO,CAAjC;MAEME,YAAY,GAAGH,WAAW,CAACljB,GAAZ,CAAgB,UAAAsjB,SAAA;QAC3BN,cAAc,GAAGhD,UAAU,CAAChgB,GAAX,CAAe,UAAA6iB,SAAA;UAC1B1d,mBAAA;UACFC,MAAM,GAAGke,SAAS,GAAGne,GAAG,CAACie,OAAD,CAA9B;aAEO;QACHhe,MAAM,QADH;QAEHmL,IAAI,EAAEpR,IAAI,CAAC+M,GAAL,CAAS9G,MAAT,CAFH;QAGHyd,SAAS;OAHb;KAJmB,EASpB/P,MAToB,CASb,UAACxP,EAAD;UAAGuf;UAAWtS;UACZiI,qBAAA;UAAMzL,yBAAN;UAAcwW,2BAAd;;UAEH,CAAC5C,WAAD,IAAgB4C,OAAjB,IACI,CAAC9C,UAAD,IAAe1T,MADnB,IAEGyL,IAAI,KAAKyK,UAFZ,IAGG1S,IAAI,GAAGqQ,aAJd,EAKE;eACS,KAAP;;;aAEG,IAAP;KAnBmB,EAoBpBpM,IApBoB,CAqBnB,UAAChS,CAAD,EAAIiS,CAAJ;aAAUjS,CAAC,CAAC+N,IAAF,GAASkE,CAAC,CAAClE,IAAX;KArBS,CAAvB;WAwBO;MACHpL,GAAG,EAAEme,SADF;MAEHN,cAAc;KAFlB;GAzBiB,EA6BlBlQ,MA7BkB,CA6BX,UAAA0Q,WAAA;WACCA,WAAW,CAACR,cAAZ,CAA2Brd,MAA3B,GAAoC,CAA3C;GA9BiB,EA+BlB6O,IA/BkB,CA+Bb,UAAChS,CAAD,EAAIiS,CAAJ;WACGjS,CAAC,CAACwgB,cAAF,CAAiB,CAAjB,EAAoBzS,IAApB,GAA2BkE,CAAC,CAACuO,cAAF,CAAiB,CAAjB,EAAoBzS,IAAtD;GAhCiB,CAArB;SAmCO;IACHoR,MAAM,EAAE0B,YAAY,CAAC1d,MAAb,GAAsB,CAD3B;IAEHoc,QAAQ,EAAEsB;GAFd;;;AAMJ,SAAgBI,wBACZ1R,UACA7H,OACAwZ;MAEIpF,SAAS,GAAG,EAAhB;;MACIoF,aAAa,CAAC,CAAD,CAAb,IAAoBA,aAAa,CAAC,CAAD,CAArC,EAA0C;IACtCpF,SAAS,GAAG,CACRoF,aADQ,EAER,CAAC,CAACA,aAAa,CAAC,CAAD,CAAf,EAAoBA,aAAa,CAAC,CAAD,CAAjC,CAFQ,EAGR,CAACA,aAAa,CAAC,CAAD,CAAd,EAAmB,CAACA,aAAa,CAAC,CAAD,CAAjC,CAHQ,EAIV1jB,GAJU,CAIN,UAAAmN,SAAA;aAAakR,iBAAiB,CAACnU,KAAD,EAAQiD,SAAR,CAAjB;KAJP,CAAZ;GADJ,MAMO,IAAI,CAACuW,aAAa,CAAC,CAAD,CAAd,IAAqB,CAACA,aAAa,CAAC,CAAD,CAAvC,EAA4C;QACzCC,UAAU,GAAG,CAACzZ,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,EAAqBA,KAAK,CAAC,CAAD,CAA1B,EAA+BA,KAAK,CAAC,CAAD,CAApC,EAAyCA,KAAK,CAAC,CAAD,CAA9C,CAAnB;;SAEK,IAAI7G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuB,EAAEA,CAAzB,EAA4B;MACxBib,SAAS,CAACrY,IAAV,CAAe0d,UAAU,CAACtgB,CAAD,CAAzB;MACAib,SAAS,CAACrY,IAAV,CAAe,CACX,CAAC0d,UAAU,CAACtgB,CAAD,CAAV,CAAc,CAAd,IAAmBsgB,UAAU,CAACtgB,CAAC,GAAG,CAAL,CAAV,CAAkB,CAAlB,CAApB,IAA4C,CADjC,EAEX,CAACsgB,UAAU,CAACtgB,CAAD,CAAV,CAAc,CAAd,IAAmBsgB,UAAU,CAACtgB,CAAC,GAAG,CAAL,CAAV,CAAkB,CAAlB,CAApB,IAA4C,CAFjC,CAAf;;GALD,MAUA;QACC0O,QAAQ,CAACiD,KAAT,CAAe4O,SAAnB,EAA8B;MAC1BtF,SAAS,GAAG,CACR,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CADQ,EAER,CAAC,CAAC,CAAF,EAAK,CAAL,CAFQ,EAGR,CAAC,CAAD,EAAI,CAAC,CAAL,CAHQ,EAIR,CAAC,CAAD,EAAI,CAAJ,CAJQ,EAKRoF,aALQ,EAMV1jB,GANU,CAMN,UAAAqQ,GAAA;eAAOgO,iBAAiB,CAACnU,KAAD,EAAQmG,GAAR,CAAjB;OAND,CAAZ;KADJ,MAQO;MACHiO,SAAS,GAAGF,mBAAmB,CAAClU,KAAD,EAAQwZ,aAAR,CAA/B;;UAEIpF,SAAS,CAAC3Y,MAAV,GAAmB,CAAvB,EAA0B;QACtB2Y,SAAS,CAACrY,IAAV,CAAe,CACX,CAACqY,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,IAAkBA,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAnB,IAAsC,CAD3B,EAEX,CAACA,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,IAAkBA,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAnB,IAAsC,CAF3B,CAAf;;;;;SAOLkC,cAAc,CAACzO,QAAD,EAAWuM,SAAS,CAACte,GAAV,CAAc,UAAAmF,GAAA;WAAOA,GAAG,CAAC,CAAD,CAAH;GAArB,CAAX,EAAyCmZ,SAAS,CAACte,GAAV,CAAc,UAAAmF,GAAA;WAAOA,GAAG,CAAC,CAAD,CAAH;GAArB,CAAzC,EAAuE,IAAvE,EAA6E,CAA7E,CAArB;;AAGJ,SAAgB0e,kBACZC,SACA7P;SAEO6P,OAAO,CAAClc,KAAR,GAAgB4M,IAAhB,CAAqB,UAAChS,CAAD,EAAIiS,CAAJ;QAClBsP,KAAK,GAAGvhB,CAAC,CAACqP,IAAF,CAAOoC,KAAP,CAAd;QACM+P,KAAK,GAAGvP,CAAC,CAAC5C,IAAF,CAAOoC,KAAP,CAAd;QACMgQ,OAAO,GAAGzhB,CAAC,CAAC4C,MAAF,CAAS6O,KAAT,CAAhB;QACMiQ,OAAO,GAAGzP,CAAC,CAACrP,MAAF,CAAS6O,KAAT,CAAhB;QACMkQ,KAAK,GAAGhlB,IAAI,CAAC+M,GAAL,CAAS+X,OAAT,CAAd;QACMG,KAAK,GAAGjlB,IAAI,CAAC+M,GAAL,CAASgY,OAAT,CAAd;;;QAGI,CAACH,KAAL,EAAY;aACD,CAAP;KADJ,MAEO,IAAI,CAACC,KAAL,EAAY;aACR,CAAC,CAAR;KADG,MAEA,IAAIxhB,CAAC,CAAC6hB,OAAF,IAAa5P,CAAC,CAAC4P,OAAnB,EAA4B;aACxBD,KAAK,GAAGD,KAAf;KADG,MAEA,IAAI3hB,CAAC,CAAC6hB,OAAN,EAAe;aACX,CAAC,CAAR;KADG,MAEA,IAAI5P,CAAC,CAAC4P,OAAN,EAAe;aACX,CAAP;KADG,MAEA,IAAI7hB,CAAC,CAACmf,MAAF,IAAYlN,CAAC,CAACkN,MAAlB,EAA0B;aACtBwC,KAAK,GAAGC,KAAf;KADG,MAEA,IAAI5hB,CAAC,CAACmf,MAAN,EAAc;aACV,CAAC,CAAR;KADG,MAEA,IAAIlN,CAAC,CAACkN,MAAN,EAAc;aACV,CAAP;KADG,MAEA,IAAIwC,KAAK,GAAGhkB,QAAZ,EAAsB;aAClB,CAAP;KADG,MAEA,IAAIikB,KAAK,GAAGjkB,QAAZ,EAAsB;aAClB,CAAC,CAAR;;;WAEGgkB,KAAK,GAAGC,KAAf;GA9BG,EA+BJ,CA/BI,CAAP;;;AChVJ,SAASE,WAAT,CAAqBC,GAArB,EAAoCC,IAApC;;;MAGUC,EAAE,GAAGlG,OAAO,CAACiG,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAD,EAAaA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAb,CAAlB;MACME,EAAE,GAAGnG,OAAO,CAACiG,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAD,EAAaA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAb,CAAlB;SAEO;IACH3D,QAAQ,EAAE4D,EAAE,IAAIF,GAAG,CAAC,CAAD,CADhB;IAEHxD,UAAU,EAAE2D,EAAE,IAAIH,GAAG,CAAC,CAAD;GAFzB;;;AAKJ,SAASI,WAAT,CACIJ,GADJ,EAEIjhB,EAFJ;MAEKnC;MAAMC;MAEDkgB,EAAE,GAAGlgB,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAAC,CAAD,CAAzB;MACMogB,EAAE,GAAGngB,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAAC,CAAD,CAAzB;MAEIyjB,KAAJ;MACIC,KAAJ;;MACI,CAACvD,EAAL,EAAS;IACLsD,KAAK,GAAGzjB,IAAI,CAAC,CAAD,CAAZ;IACA0jB,KAAK,GAAGN,GAAG,CAAC,CAAD,CAAX;GAFJ,MAGO,IAAI,CAAChD,EAAL,EAAS;IACZqD,KAAK,GAAGzjB,IAAI,CAAC,CAAD,CAAZ;IACA0jB,KAAK,GAAGN,GAAG,CAAC,CAAD,CAAX;GAFG,MAGA;QACG/hB,CAAC,GAAG+e,EAAE,GAAGD,EAAf,CADG;;IAIHsD,KAAK,GAAGpiB,CAAC,IAAI+hB,GAAG,CAAC,CAAD,CAAH,GAASpjB,IAAI,CAAC,CAAD,CAAjB,CAAD,GAAyBA,IAAI,CAAC,CAAD,CAArC;IACA0jB,KAAK,GAAGN,GAAG,CAAC,CAAD,CAAX;;;SAEGK,KAAK,GAAGC,KAAf;;;AAEJ,SAASC,eAAT,CAAyBC,IAAzB,EAA2CP,IAA3C,EAA6DQ,KAA7D;sBAA6D,EAAA;IAAAA,gBAAA;;;MACnDC,UAAU,GAAGN,WAAW,CAACI,IAAI,CAAC,CAAD,CAAL,EAAUP,IAAV,CAAX,IAA8B,CAAjD;SAEOO,IAAI,CAACnd,KAAL,CAAW,CAAX,EAAcgK,KAAd,CAAoB,UAAA2S,GAAA;QACjBziB,KAAK,GAAG6iB,WAAW,CAACJ,GAAD,EAAMC,IAAN,CAAzB;QACM3S,IAAI,GAAG/P,KAAK,IAAI,CAAtB;WACO+P,IAAI,KAAKoT,UAAT,IAAuB9lB,IAAI,CAAC+M,GAAL,CAASpK,KAAT,KAAmBkjB,KAAjD;GAHG,CAAP;;;AAMJ,SAASE,kBAAT,CACI/f,GADJ,EAEIggB,KAFJ,EAGIC,GAHJ,EAII1P,OAJJ,EAKI2P,SALJ;0BAKI,EAAA;IAAAA,aAAA;;;MAGK3P,OAAO,IAAIyP,KAAK,GAAGE,SAAR,IAAqBlgB,GAAjC,IACI,CAACuQ,OAAD,IAAYvQ,GAAG,IAAIigB,GAAG,GAAGC,SAFjC,EAGE;;;;WAIS;MACHhB,OAAO,EAAE,IADN;MAEHjf,MAAM,EAAEsQ,OAAO,GAAGyP,KAAK,GAAGhgB,GAAX,GAAiBigB,GAAG,GAAGjgB;KAF1C;;;SAKG;IACHkf,OAAO,EAAE,KADN;IAEHjf,MAAM,EAAE;GAFZ;;;AAMJ,SAASkgB,eAAT,CACIvT,QADJ,EAEIyS,IAFJ,EAGIzX,MAHJ;MAKUwY,MAAM,GAAGxT,QAAQ,CAACiD,KAAT,CAAewQ,WAA9B;;MAEI,CAACD,MAAL,EAAa;WACF;MACHE,UAAU,EAAE,KADT;MAEHpB,OAAO,EAAE,KAFN;MAGHqB,eAAe,EAAE,KAHd;MAIHC,iBAAiB,EAAE,KAJhB;MAKHvgB,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ;KALZ;;;MAQIN,kBAAA;MAAMC,gBAAN;MAAWoD,oBAAX;MAAkBE,sBAAlB;MACFud,QAAQ,GAAG,CAAC,CAAC9gB,IAAD,EAAOC,GAAP,CAAD,EAAc,CAACD,IAAD,EAAOC,GAAG,GAAGsD,MAAb,CAAd,CAAjB;MACMwd,OAAO,GAAG,CAAC,CAAC/gB,IAAD,EAAOC,GAAP,CAAD,EAAc,CAACD,IAAI,GAAGqD,KAAR,EAAepD,GAAf,CAAd,CAAhB;MACM+gB,SAAS,GAAG,CAAC,CAAChhB,IAAI,GAAGqD,KAAR,EAAepD,GAAf,CAAD,EAAsB,CAACD,IAAI,GAAGqD,KAAR,EAAepD,GAAG,GAAGsD,MAArB,CAAtB,CAAlB;MACM0d,UAAU,GAAG,CAAC,CAACjhB,IAAD,EAAOC,GAAG,GAAGsD,MAAb,CAAD,EAAuB,CAACvD,IAAI,GAAGqD,KAAR,EAAepD,GAAG,GAAGsD,MAArB,CAAvB,CAAnB;;MACM/E,8BAAA;MACF0iB,iCADE;MAEFC,6BAFE;;MAKFnB,eAAe,CAAC,CAChB/X,MADgB,EAEhB,CAACjI,IAAD,EAAOC,GAAP,CAFgB,EAGhB,CAACD,IAAI,GAAGqD,KAAR,EAAepD,GAAf,CAHgB,EAIhB,CAACD,IAAD,EAAOC,GAAG,GAAGsD,MAAb,CAJgB,EAKhB,CAACvD,IAAI,GAAGqD,KAAR,EAAepD,GAAG,GAAGsD,MAArB,CALgB,CAAD,EAMhBmc,IANgB,CAAnB,EAMU;WACC;MACHiB,UAAU,EAAE,KADT;MAEHpB,OAAO,EAAE,KAFN;MAGHqB,eAAe,EAAE,KAHd;MAIHC,iBAAiB,EAAE,KAJhB;MAKHvgB,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ;KALZ;;;;MAUE8gB,YAAY,GAAGC,uBAAuB,CAAC3B,IAAD,EAAOqB,OAAP,EAAgBI,eAAhB,CAA5C;MACMG,eAAe,GAAGD,uBAAuB,CAAC3B,IAAD,EAAOuB,UAAP,EAAmBE,eAAnB,CAA/C;;MAGMI,aAAa,GAAGF,uBAAuB,CAAC3B,IAAD,EAAOoB,QAAP,EAAiBI,iBAAjB,CAA7C;MACMM,cAAc,GAAGH,uBAAuB,CAAC3B,IAAD,EAAOsB,SAAP,EAAkBE,iBAAlB,CAA9C;MAEMO,kBAAkB,GAAGL,YAAY,CAAC7B,OAAb,IAAwB+B,eAAe,CAAC/B,OAAnE;MACMqB,eAAe,GAAGQ,YAAY,CAAC7B,OAAb,IAAwB+B,eAAe,CAAC/B,OAAhE;MACMmC,oBAAoB,GAAGH,aAAa,CAAChC,OAAd,IAAyBiC,cAAc,CAACjC,OAArE;MACMsB,iBAAiB,GAAGU,aAAa,CAAChC,OAAd,IAAyBiC,cAAc,CAACjC,OAAlE;MACMoC,cAAc,GAAGnS,SAAS,CAAC4R,YAAY,CAAC9gB,MAAd,EAAsBghB,eAAe,CAAChhB,MAAtC,CAAhC;MACMshB,gBAAgB,GAAGpS,SAAS,CAAC+R,aAAa,CAACjhB,MAAf,EAAuBkhB,cAAc,CAAClhB,MAAtC,CAAlC;MAEIA,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAb;MACIif,OAAO,GAAG,KAAd;MACIoB,UAAU,GAAG,KAAjB;;MAEItmB,IAAI,CAAC+M,GAAL,CAASwa,gBAAT,IAA6BvnB,IAAI,CAAC+M,GAAL,CAASua,cAAT,CAAjC,EAA2D;IACvDrhB,MAAM,GAAG,CAACqhB,cAAD,EAAiB,CAAjB,CAAT;IACApC,OAAO,GAAGqB,eAAV;IACAD,UAAU,GAAGc,kBAAb;GAHJ,MAIO;IACHnhB,MAAM,GAAG,CAAC,CAAD,EAAIshB,gBAAJ,CAAT;IACArC,OAAO,GAAGsB,iBAAV;IACAF,UAAU,GAAGe,oBAAb;;;SAEG;IACHf,UAAU,YADP;IAEHC,eAAe,iBAFZ;IAGHC,iBAAiB,mBAHd;IAIHtB,OAAO,SAJJ;IAKHjf,MAAM;GALV;;;AASJ,SAAS+gB,uBAAT,CACI3B,IADJ,EAEImC,SAFJ,EAGIjR,OAHJ,EAII2P,SAJJ;MAMUuB,IAAI,GAAGpC,IAAI,CAAC,CAAD,CAAjB;MACMqC,IAAI,GAAGrC,IAAI,CAAC,CAAD,CAAjB;MACMsC,SAAS,GAAGH,SAAS,CAAC,CAAD,CAA3B;MACMI,SAAS,GAAGJ,SAAS,CAAC,CAAD,CAA3B;MACMK,GAAG,GAAGH,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAAC,CAAD,CAA1B;MACMK,GAAG,GAAGJ,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAAC,CAAD,CAA1B;MAEMM,GAAG,GAAGH,SAAS,CAAC,CAAD,CAAT,GAAeD,SAAS,CAAC,CAAD,CAApC;MACMK,GAAG,GAAGJ,SAAS,CAAC,CAAD,CAAT,GAAeD,SAAS,CAAC,CAAD,CAApC;;MAGI,CAACK,GAAL,EAAU;;QAEFF,GAAJ,EAAS;UACCvd,CAAC,GAAGsd,GAAG,GAAGA,GAAG,GAAGC,GAAN,IAAaH,SAAS,CAAC,CAAD,CAAT,GAAeF,IAAI,CAAC,CAAD,CAAhC,IAAuCA,IAAI,CAAC,CAAD,CAA9C,GAAoDA,IAAI,CAAC,CAAD,CAArE,CADK;;aAIE1B,kBAAkB,CAACxb,CAAD,EAAIod,SAAS,CAAC,CAAD,CAAb,EAAkBC,SAAS,CAAC,CAAD,CAA3B,EAAgCrR,OAAhC,EAAyC2P,SAAzC,CAAzB;;GANR,MAQO,IAAI,CAAC6B,GAAL,EAAU;;QAGTF,GAAJ,EAAS;;;UAGCxkB,CAAC,GAAGwkB,GAAG,GAAGC,GAAhB;UACMxd,CAAC,GAAGwd,GAAG,GAAG,CAACH,SAAS,CAAC,CAAD,CAAT,GAAeF,IAAI,CAAC,CAAD,CAApB,IAA2BpkB,CAA3B,GAA+BokB,IAAI,CAAC,CAAD,CAAtC,GAA4CA,IAAI,CAAC,CAAD,CAA7D,CAJK;;aAOE1B,kBAAkB,CAACzb,CAAD,EAAIqd,SAAS,CAAC,CAAD,CAAb,EAAkBC,SAAS,CAAC,CAAD,CAA3B,EAAgCrR,OAAhC,EAAyC2P,SAAzC,CAAzB;;;;SAGD;IACHhB,OAAO,EAAE,KADN;IAEHjf,MAAM,EAAE;GAFZ;;;AAKJ,SAAgBgiB,kBACZrV,UACAsV,OACAta,QACAkF;SAEOoV,KAAK,CAACrnB,GAAN,CAAU,UAACsD,EAAD;QAAEgkB;QAAUnmB;QAAMC;;QACzB+E,oDAAA;QACFke,oBADE;QAEFjf,kBAFE;QAGFsgB,oCAHE;QAIFC,wCAJE;;QAOA4B,UAAU,GAAG/J,WAAW,CAAC;MAC3BvL,KAAK,OADsB;MAE3ByL,KAAK,EAAEtY,MAAM,CAAC,CAAD,CAFc;MAG3BuY,KAAK,EAAEvY,MAAM,CAAC,CAAD;KAHa,CAAX,CAIhBpF,GAJgB,CAIZ,UAAC+d,IAAD,EAAO1a,CAAP;aAAa0a,IAAI,IAAIuJ,QAAQ,CAACjkB,CAAD,CAAR,GAAe,IAAIikB,QAAQ,CAACjkB,CAAD,CAA3B,GAAiC,CAArC,CAAJ;KAJD,CAAnB;WAMO;MACHwO,IAAI,EAAEyV,QADH;MAEHjD,OAAO,SAFJ;MAGHqB,eAAe,iBAHZ;MAIHC,iBAAiB,mBAJd;MAKHhE,MAAM,EAAE,KALL;MAMHvc,MAAM,EAAEmiB;KANZ;GAdG,CAAP;;AAyBJ,SAAgBC,sBACZzV,UACA7H,OACA+H;;;MAEMoV,KAAK,GAAGI,iBAAiB,CAACvd,KAAD,EAAQ,CAAC,CAAD,EAAI,CAAJ,CAAR,EAAgB,KAAhB,CAAjB,CAAwClK,GAAxC,CAA4C,UAACsD,EAAD;QAAEuO;QAAM1Q;QAAMC;WAC7D,CACHyQ,IAAI,CAAC7R,GAAL,CAAS,UAAAqQ,GAAA;aAAOlR,IAAI,CAAC+M,GAAL,CAASmE,GAAT,IAAgB,CAAhB;KAAhB,CADG,EAEHlP,IAFG,EAGHC,IAHG,CAAP;GADU,CAAd;MAOMsmB,cAAc,GAAGN,iBAAiB,CAACrV,QAAD,EAAWsV,KAAX,EAAkBhJ,iBAAiB,CAACnU,KAAD,EAAQ,CAAC,CAAD,EAAI,CAAJ,CAAR,CAAnC,EAAoD+H,KAApD,CAAxC;MACM0V,eAAe,GAAG9D,iBAAiB,CAAC6D,cAAD,EAAiB,CAAjB,CAAzC;MACME,gBAAgB,GAAG/D,iBAAiB,CAAC6D,cAAD,EAAiB,CAAjB,CAA1C;MACIjB,cAAc,GAAG,CAArB;MACIC,gBAAgB,GAAG,CAAvB;MACMhB,eAAe,GAAGiC,eAAe,CAACjC,eAAhB,IAAmCkC,gBAAgB,CAAClC,eAA5E;MACMC,iBAAiB,GAAGgC,eAAe,CAAChC,iBAAhB,IAAqCiC,gBAAgB,CAACjC,iBAAhF;;MAEID,eAAe,IAAIC,iBAAvB,EAA0C;IACtCriB;;;;MAAA,EAACmjB,sBAAD,EAAiBC,wBAAjB;;;SAOG;IACH7F,QAAQ,EAAE;MACNwD,OAAO,EAAEqB,eADH;MAENtgB,MAAM,EAAEqhB;KAHT;IAKH1F,UAAU,EAAE;MACRsD,OAAO,EAAEsB,iBADD;MAERvgB,MAAM,EAAEshB;;GAPhB;;AAWJ,SAAgBmB,2BACZ1a,WACAyW;MAEMkE,cAAc,GAAiB,EAArC;MACMre,CAAC,GAAG0D,SAAS,CAAC,CAAD,CAAnB;MACMzD,CAAC,GAAGyD,SAAS,CAAC,CAAD,CAAnB;;MACI1D,CAAC,IAAIC,CAAT,EAAY;IACRoe,cAAc,CAAC7hB,IAAf,CACI,CAAC,CAAC,CAAD,EAAIyD,CAAC,GAAG,CAAR,CAAD,EAAayD,SAAb,EAAwB,CAAC,CAAC1D,CAAF,EAAKC,CAAL,CAAxB,CADJ,EAEI,CAAC,CAACD,CAAC,GAAG,CAAL,EAAQ,CAAR,CAAD,EAAa0D,SAAb,EAAwB,CAAC1D,CAAD,EAAI,CAACC,CAAL,CAAxB,CAFJ;GADJ,MAKO,IAAID,CAAJ,EAAO;;IAEVqe,cAAc,CAAC7hB,IAAf,CACI,CAAC,CAACwD,CAAC,GAAG,CAAL,EAAQ,CAAR,CAAD,EAAa,CAACA,CAAD,EAAI,CAAJ,CAAb,EAAqB,CAACA,CAAD,EAAI,CAAC,CAAL,CAArB,CADJ;;QAGIma,SAAJ,EAAe;MACXkE,cAAc,CAAC7hB,IAAf,CACI,CAAC,CAAC,CAAD,EAAI,CAAC,CAAL,CAAD,EAAU,CAACwD,CAAD,EAAI,CAAC,CAAL,CAAV,EAAmB,CAAC,CAACA,CAAF,EAAK,CAAC,CAAN,CAAnB,CADJ,EAEI,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAACA,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,CAACA,CAAF,EAAK,CAAL,CAAjB,CAFJ;;GAND,MAWA,IAAIC,CAAJ,EAAO;;IAEVoe,cAAc,CAAC7hB,IAAf,CACI,CAAC,CAAC,CAAD,EAAIyD,CAAC,GAAG,CAAR,CAAD,EAAa,CAAC,CAAD,EAAIA,CAAJ,CAAb,EAAqB,CAAC,CAAC,CAAF,EAAKA,CAAL,CAArB,CADJ;;QAGIka,SAAJ,EAAe;MACXkE,cAAc,CAAC7hB,IAAf,CACI,CAAC,CAAC,CAAC,CAAF,EAAK,CAAL,CAAD,EAAU,CAAC,CAAC,CAAF,EAAKyD,CAAL,CAAV,EAAmB,CAAC,CAAC,CAAF,EAAK,CAACA,CAAN,CAAnB,CADJ,EAEI,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAIA,CAAJ,CAAT,EAAiB,CAAC,CAAD,EAAI,CAACA,CAAL,CAAjB,CAFJ;;GAND,MAWA;;IAEHoe,cAAc,CAAC7hB,IAAf,CACI,CAAC,CAAC,CAAC,CAAF,EAAK,CAAL,CAAD,EAAU,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAV,EAAoB,CAAC,CAAC,CAAF,EAAK,CAAL,CAApB,CADJ,EAEI,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAC,CAAL,CAAT,EAAkB,CAAC,CAAD,EAAI,CAAJ,CAAlB,CAFJ,EAGI,CAAC,CAAC,CAAD,EAAI,CAAC,CAAL,CAAD,EAAU,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAV,EAAoB,CAAC,CAAD,EAAI,CAAC,CAAL,CAApB,CAHJ,EAII,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAC,CAAF,EAAK,CAAL,CAAT,EAAkB,CAAC,CAAD,EAAI,CAAJ,CAAlB,CAJJ;;;SAQG6hB,cAAP;;AAEJ,SAAgBL,kBACZvd,OACAiD,WACAyW;SAEOiE,0BAA0B,CAAC1a,SAAD,EAAYyW,SAAZ,CAA1B,CAAiD5jB,GAAjD,CAAqD,UAACsD,EAAD;QAAEuO;QAAMkW;QAAMC;WAC/D,CACHnW,IADG,EAEHwM,iBAAiB,CAACnU,KAAD,EAAQ6d,IAAR,CAFd,EAGH1J,iBAAiB,CAACnU,KAAD,EAAQ8d,IAAR,CAHd,CAAP;GADG,CAAP;;;AASJ,SAASC,aAAT,CACIC,aADJ,EAEIC,SAFJ,EAGIpb,MAHJ,EAIIW,GAJJ;MAMU4Q,SAAS,GAAG5Q,GAAG,GAAGwa,aAAa,CAACloB,GAAd,CAAkB,UAAAmF,GAAA;WAAOijB,MAAM,CAACjjB,GAAD,EAAMuI,GAAN,CAAN;GAAzB,CAAH,GAAgDwa,aAArE;MACMnD,IAAI,IACNhY,eACGob,UAFP;SAIO,CACH,CAAC7J,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CADG,EAEH,CAACA,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CAFG,EAGH,CAACA,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CAHG,EAIH,CAACA,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CAJG,EAKLtL,IALK,CAKA,UAACwR,IAAD,EAAOnhB,CAAP;WAAa,CAACyhB,eAAe,CAACC,IAAD,EAAOP,IAAP,CAAhB;GALb,CAAP;;;AAOJ,SAAS6D,gBAAT,CAA0B/kB,EAA1B;;;MAA2BnC;MAAMC;MAIvBkgB,EAAE,GAAGlgB,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAAC,CAAD,CAAzB;MACMogB,EAAE,GAAGngB,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAAC,CAAD,CAAzB;;MAEI,CAACmgB,EAAL,EAAS;WACEniB,IAAI,CAAC+M,GAAL,CAAS/K,IAAI,CAAC,CAAD,CAAb,CAAP;;;MAEA,CAACogB,EAAL,EAAS;WACEpiB,IAAI,CAAC+M,GAAL,CAAS/K,IAAI,CAAC,CAAD,CAAb,CAAP;;;;;MAKEqB,CAAC,GAAG+e,EAAE,GAAGD,EAAf;SAEOniB,IAAI,CAAC+M,GAAL,CAAS,CAAC,CAAC1J,CAAD,GAAKrB,IAAI,CAAC,CAAD,CAAT,GAAeA,IAAI,CAAC,CAAD,CAApB,IAA2BhC,IAAI,CAACoO,IAAL,CAAUpO,IAAI,CAACmB,GAAL,CAASkC,CAAT,EAAY,CAAZ,IAAiB,CAA3B,CAApC,CAAP;;;AAEJ,SAAS8lB,gBAAT,CAA0BhlB,EAA1B;MAA2BnC;MAAMC;MACvBkgB,EAAE,GAAGlgB,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAAC,CAAD,CAAzB;MACMogB,EAAE,GAAGngB,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAAC,CAAD,CAAzB;;MAEI,CAACmgB,EAAL,EAAS;WACE,CAACngB,IAAI,CAAC,CAAD,CAAL,EAAU,CAAV,CAAP;;;MAEA,CAACogB,EAAL,EAAS;WACE,CAAC,CAAD,EAAIpgB,IAAI,CAAC,CAAD,CAAR,CAAP;;;MAEEqB,CAAC,GAAG+e,EAAE,GAAGD,EAAf;;;MAGM7M,CAAC,GAAG,CAACjS,CAAD,GAAKrB,IAAI,CAAC,CAAD,CAAT,GAAeA,IAAI,CAAC,CAAD,CAA7B;;;;SAKO,CACH,CAACsT,CAAD,IAAMjS,CAAC,GAAG,IAAIA,CAAd,CADG,EAEHiS,CAAC,IAAKjS,CAAC,GAAGA,CAAL,GAAU,CAAd,CAFE,CAAP;;;AAKJ,SAAgB+lB,uBACZxW,UACAyW,WACAlK,WACAjc,QACAuL;MAEM2X,MAAM,GAAGxT,QAAQ,CAACiD,KAAT,CAAewQ,WAA9B;MACM9X,GAAG,GAAGE,QAAQ,GAAGzO,IAAI,CAACiO,EAAhB,GAAqB,GAAjC;;MAEI,CAACmY,MAAL,EAAa;WACF,EAAP;;;MAGAzgB,kBAAA;MACAC,gBADA;MAEAoD,oBAFA;MAGAE,sBAHA;MAMEogB,YAAY,GAAG3jB,IAAI,GAAGzC,MAAM,CAAC,CAAD,CAAlC;MACMqmB,aAAa,GAAG5jB,IAAI,GAAGqD,KAAP,GAAe9F,MAAM,CAAC,CAAD,CAA3C;MACMsmB,WAAW,GAAG5jB,GAAG,GAAG1C,MAAM,CAAC,CAAD,CAAhC;MACMumB,cAAc,GAAG7jB,GAAG,GAAGsD,MAAN,GAAehG,MAAM,CAAC,CAAD,CAA5C;MACM0iB,IAAI,GAAG,CACT,CAAC0D,YAAD,EAAeE,WAAf,CADS,EAET,CAACD,aAAD,EAAgBC,WAAhB,CAFS,EAGT,CAACF,YAAD,EAAeG,cAAf,CAHS,EAIT,CAACF,aAAD,EAAgBE,cAAhB,CAJS,CAAb;MAMM7b,MAAM,GAAGsR,iBAAiB,CAACC,SAAD,EAAY,CAAC,CAAD,EAAI,CAAJ,CAAZ,CAAhC;;MAEI,CAAC2J,aAAa,CAAC3J,SAAD,EAAYyG,IAAZ,EAAkBhY,MAAlB,EAA0B,CAA1B,CAAlB,EAAgD;WACrC,EAAP;;;MAEE6O,MAAM,GAAa,EAAzB;MACMiN,QAAQ,GAAG9D,IAAI,CAAC/kB,GAAL,CAAS,UAAAukB,GAAA;WAAO,CAC7BlX,WAAW,CAACkX,GAAD,CADkB,EAE7BtX,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAASsX,GAAT,CAFuB,CAAA;GAAhB,CAAjB;GAKI,CAACjG,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CADJ,EAEI,CAACA,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CAFJ,EAGI,CAACA,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CAHJ,EAII,CAACA,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CAJJ,EAKE5W,OALF,CAKU,UAAA8c,IAAA;QACAsE,OAAO,GAAG7b,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAASqb,gBAAgB,CAAC9D,IAAD,CAAzB,CAAtB;QACMuE,QAAQ,GAAGV,gBAAgB,CAAC7D,IAAD,CAAjC;IAEA5I,MAAM,CAAC3V,IAAP,MAAA,CAAA2V,MAAA,EAAeiN,QAAQ,CAClB/V,MADU,CACH,UAACxP,EAAD;UAAE0lB;aACCA,OAAO,IAAID,QAAQ,IAAIC,OAA9B;KAFO,EAIVhpB,GAJU,CAIN,UAACsD,EAAD;UAAE0lB;UAASC;UACNC,OAAO,GAAG/pB,IAAI,CAACgqB,IAAL,CAAUH,OAAO,GAAGD,QAAQ,GAAGC,OAAd,GAAwB,CAAzC,CAAhB;UACMI,QAAQ,GAAGH,MAAM,GAAGC,OAA1B;UACMG,QAAQ,GAAGJ,MAAM,GAAGC,OAA1B;aAEO,CACHxb,GAAG,GAAG0b,QAAN,GAAiBN,OADd,EAEHpb,GAAG,GAAG2b,QAAN,GAAiBP,OAFd,CAAP;KATO,EAcVjb,MAdU,CAcO,UAACC,IAAD,EAAOsG,GAAP;MACdtG,IAAI,CAAC7H,IAAL,MAAA,CAAA6H,IAAA,EAAasG,GAAb;aACOtG,IAAP;KAhBO,EAiBR,EAjBQ,EAkBVgF,MAlBU,CAkBH,UAAAwW,OAAA;aAAW,CAACrB,aAAa,CAACO,SAAD,EAAYzD,IAAZ,EAAkBhY,MAAlB,EAA0Buc,OAA1B,CAAd;KAlBR,EAmBVtpB,GAnBU,CAmBN,UAAAspB,OAAA;aAAW1Y,QAAQ,CAAC0Y,OAAO,GAAG,GAAV,GAAgBnqB,IAAI,CAACiO,EAAtB,EAA0BjN,QAA1B,CAAR;KAnBL,CAAf;GATJ;SA8BOyb,MAAP;;AAGJ,SAAgB2N,qBACZxX;MAEMyT,WAAW,GAAGzT,QAAQ,CAACiD,KAAT,CAAewQ,WAAnC;;MAEI,CAACA,WAAL,EAAkB;WACP;MACH3E,QAAQ,EAAE,EADP;MAEHE,UAAU,EAAE;KAFhB;;;MAKEzd,uBAAA;MACFnC,cADE;MAEFC,cAFE;MAGF2I,cAHE;MAIFC,cAJE;;MAMAE,KAAK,GAAG,CAAC/I,IAAD,EAAOC,IAAP,EAAa2I,IAAb,EAAmBC,IAAnB,CAAd;MACM+C,MAAM,GAAGsR,iBAAiB,CAACnU,KAAD,EAAQ,CAAC,CAAD,EAAI,CAAJ,CAAR,CAAhC;MACQpF,uBAAA;MAAMC,qBAAN;MAAWoD,yBAAX;MAAkBE,2BAAlB;MACFud,QAAQ,GAAG,CAAC,CAAC9gB,IAAD,EAAOC,GAAP,CAAD,EAAc,CAACD,IAAD,EAAOC,GAAG,GAAGsD,MAAb,CAAd,CAAjB;MACMwd,OAAO,GAAG,CAAC,CAAC/gB,IAAD,EAAOC,GAAP,CAAD,EAAc,CAACD,IAAI,GAAGqD,KAAR,EAAepD,GAAf,CAAd,CAAhB;MACM+gB,SAAS,GAAG,CAAC,CAAChhB,IAAI,GAAGqD,KAAR,EAAepD,GAAf,CAAD,EAAsB,CAACD,IAAI,GAAGqD,KAAR,EAAepD,GAAG,GAAGsD,MAArB,CAAtB,CAAlB;MACM0d,UAAU,GAAG,CAAC,CAACjhB,IAAD,EAAOC,GAAG,GAAGsD,MAAb,CAAD,EAAuB,CAACvD,IAAI,GAAGqD,KAAR,EAAepD,GAAG,GAAGsD,MAArB,CAAvB,CAAnB;MAEMgf,KAAK,GAAG,CACV,CAAClmB,IAAD,EAAOC,IAAP,CADU,EAEV,CAACA,IAAD,EAAO4I,IAAP,CAFU,EAGV,CAACA,IAAD,EAAOD,IAAP,CAHU,EAIV,CAACA,IAAD,EAAO5I,IAAP,CAJU,CAAd;MAOMqoB,eAAe,GAAa,EAAlC;MACMC,aAAa,GAAa,EAAhC;MAEMC,QAAQ,GAAG;IACb3kB,GAAG,EAAE,KADQ;IAEbuF,MAAM,EAAE,KAFK;IAGbxF,IAAI,EAAE,KAHO;IAIbuF,KAAK,EAAE;GAJX;EAOAgd,KAAK,CAAC3f,OAAN,CAAc,UAAA8c,IAAA;QACJlhB,8BAAA;QACF0iB,iCADE;QAEFC,6BAFE;;;QAMAC,YAAY,GAAGC,uBAAuB,CAAC3B,IAAD,EAAOqB,OAAP,EAAgBI,eAAhB,EAAiC,CAAjC,CAA5C;QACMG,eAAe,GAAGD,uBAAuB,CAAC3B,IAAD,EAAOuB,UAAP,EAAmBE,eAAnB,EAAoC,CAApC,CAA/C;;QAGMI,aAAa,GAAGF,uBAAuB,CAAC3B,IAAD,EAAOoB,QAAP,EAAiBI,iBAAjB,EAAoC,CAApC,CAA7C;QACMM,cAAc,GAAGH,uBAAuB,CAAC3B,IAAD,EAAOsB,SAAP,EAAkBE,iBAAlB,EAAqC,CAArC,CAA9C;;QAEIE,YAAY,CAAC7B,OAAb,IAAwB,CAACqF,QAAQ,CAAC3kB,GAAtC,EAA2C;MACvCykB,eAAe,CAACvjB,IAAhB,CAAqBlB,GAArB;MACA2kB,QAAQ,CAAC3kB,GAAT,GAAe,IAAf;;;QAEAqhB,eAAe,CAAC/B,OAAhB,IAA2B,CAACqF,QAAQ,CAACpf,MAAzC,EAAiD;MAC7Ckf,eAAe,CAACvjB,IAAhB,CAAqBlB,GAAG,GAAGsD,MAA3B;MACAqhB,QAAQ,CAACpf,MAAT,GAAkB,IAAlB;;;QAEA+b,aAAa,CAAChC,OAAd,IAAyB,CAACqF,QAAQ,CAAC5kB,IAAvC,EAA6C;MACzC2kB,aAAa,CAACxjB,IAAd,CAAmBnB,IAAnB;MACA4kB,QAAQ,CAAC5kB,IAAT,GAAgB,IAAhB;;;QAEAwhB,cAAc,CAACjC,OAAf,IAA0B,CAACqF,QAAQ,CAACrf,KAAxC,EAA+C;MAC3Cof,aAAa,CAACxjB,IAAd,CAAmBnB,IAAI,GAAGqD,KAA1B;MACAuhB,QAAQ,CAACrf,KAAT,GAAiB,IAAjB;;GA5BR;SAgCO;IACH0W,UAAU,EAAEyI,eADT;IAEH3I,QAAQ,EAAE4I;GAFd;;;SCnhBYE,gBACZ5X,UACA0X,eACAD;MAEMlmB,gCAAA;MACF6C,YADE;MACFrB,qCADE;MAEFkG,WAFE;MAEFjG,oCAFE;MAGF8G,aAHE;MAGFxB,qCAHE;MAIFoC,cAJE;MAIFnC,sCAJE;;MAMAib,MAAM,GAAG;IAAEzgB,IAAI,MAAN;IAAQC,GAAG,KAAX;IAAasF,KAAK,OAAlB;IAAoBC,MAAM;GAAzC;SAEO;IACHuW,QAAQ,EAAE+I,UAAU,CAACrE,MAAD,EAASkE,aAAT,EAAwB,IAAxB,CADjB;IAEH1I,UAAU,EAAE6I,UAAU,CAACrE,MAAD,EAASiE,eAAT,EAA0B,KAA1B;GAF1B;;AAMJ,SAAgBK,oBACZ9X,UACAgN,UACAkC;MAEM3d,gCAAA;MACF6C,YADE;MACFrB,qCADE;MAEFkG,WAFE;MAEFjG,oCAFE;MAGF8G,aAHE;MAGFxB,qCAHE;MAIFoC,cAJE;MAIFnC,sCAJE;;MAOC4W,gBAAA;MAAMC,gBAAN;;MACDvU,4BAAA;MAAC0U,UAAD;MAAKC,UAAL;;MACAC,QAAQ,GAAGD,EAAE,GAAG,CAAtB;MACME,OAAO,GAAGH,EAAE,GAAG,CAArB;MAEMI,YAAY,GAAG;IACjB2C,OAAO,EAAE,KADQ;IAEjBjf,MAAM,EAAE,CAFS;IAGjBD,GAAG,EAAE;GAHT;MAKMyc,cAAc,GAAG;IACnByC,OAAO,EAAE,KADU;IAEnBjf,MAAM,EAAE,CAFW;IAGnBD,GAAG,EAAE;GAHT;;MAKImc,EAAE,KAAK,CAAP,IAAYC,EAAE,KAAK,CAAvB,EAA0B;WACf;MACHV,QAAQ,EAAEa,YADP;MAEHX,UAAU,EAAEa;KAFhB;GADJ,MAKO,IAAIN,EAAE,KAAK,CAAX,EAAc;QACbE,QAAJ,EAAc;UACNlX,MAAM,GAAG6W,IAAb,EAAmB;QACfS,cAAc,CAACzc,GAAf,GAAqBmF,MAArB;QACAsX,cAAc,CAACxc,MAAf,GAAwB+b,IAAI,GAAG7W,MAA/B;;KAHR,MAKO;UACCvF,GAAG,GAAGoc,IAAV,EAAgB;QACZS,cAAc,CAACzc,GAAf,GAAqBJ,GAArB;QACA6c,cAAc,CAACxc,MAAf,GAAwB+b,IAAI,GAAGpc,GAA/B;;;GATL,MAYA,IAAIwc,EAAE,KAAK,CAAX,EAAc;QACbE,OAAJ,EAAa;UACLpX,KAAK,GAAG6W,IAAZ,EAAkB;QACdQ,YAAY,CAACvc,GAAb,GAAmBkF,KAAnB;QACAqX,YAAY,CAACtc,MAAb,GAAsB8b,IAAI,GAAG7W,KAA7B;;KAHR,MAKO;UACCvF,IAAI,GAAGoc,IAAX,EAAiB;QACbQ,YAAY,CAACvc,GAAb,GAAmBL,IAAnB;QACA4c,YAAY,CAACtc,MAAb,GAAsB8b,IAAI,GAAGpc,IAA7B;;;GATL,MAYA;;QAEGtC,CAAC,GAAG+e,EAAE,GAAGD,EAAf;QACM7M,CAAC,GAAGwM,MAAM,CAAC,CAAD,CAAN,GAAYze,CAAC,GAAG0e,IAA1B;QACIxX,CAAC,GAAG,CAAR;QACID,CAAC,GAAG,CAAR;QACI4a,OAAO,GAAG,KAAd;;QAEI5C,OAAO,IAAIpX,KAAK,IAAI6W,IAAxB,EAA8B;MAC1BxX,CAAC,GAAGlH,CAAC,GAAG6H,KAAJ,GAAYoK,CAAhB;MACAhL,CAAC,GAAGY,KAAJ;MACAga,OAAO,GAAG,IAAV;KAHJ,MAIO,IAAI,CAAC5C,OAAD,IAAYP,IAAI,IAAIpc,IAAxB,EAA8B;MACjC4E,CAAC,GAAGlH,CAAC,GAAGsC,IAAJ,GAAW2P,CAAf;MACAhL,CAAC,GAAG3E,IAAJ;MACAuf,OAAO,GAAG,IAAV;KAHG,MAIA,IAAI7C,QAAQ,IAAIlX,MAAM,IAAI6W,IAA1B,EAAgC;MACnCzX,CAAC,GAAGY,MAAJ;MACAb,CAAC,GAAG,CAACC,CAAC,GAAG+K,CAAL,IAAUjS,CAAd;MACA6hB,OAAO,GAAG,IAAV;KAHG,MAIA,IAAI,CAAC7C,QAAD,IAAcL,IAAI,IAAIpc,GAA1B,EAA+B;MAClC2E,CAAC,GAAG3E,GAAJ;MACA0E,CAAC,GAAG,CAACC,CAAC,GAAG+K,CAAL,IAAUjS,CAAd;MACA6hB,OAAO,GAAG,IAAV;;;QAEAA,OAAJ,EAAa;MACT3C,YAAY,CAAC2C,OAAb,GAAuB,IAAvB;MACA3C,YAAY,CAACvc,GAAb,GAAmBsE,CAAnB;MACAiY,YAAY,CAACtc,MAAb,GAAsB8b,IAAI,GAAGzX,CAA7B;MAEAmY,cAAc,CAACyC,OAAf,GAAyB,IAAzB;MACAzC,cAAc,CAACzc,GAAf,GAAqBuE,CAArB;MACAkY,cAAc,CAACxc,MAAf,GAAwB+b,IAAI,GAAGzX,CAA/B;;;;SAID;IACHmX,QAAQ,EAAEa,YADP;IAEHX,UAAU,EAAEa;GAFhB;;;AAKJ,SAASgI,UAAT,CACIrE,MADJ,EAEIrb,KAFJ,EAGIiZ,UAHJ;;MAMU2G,aAAa,GAAGvE,MAAM,CAACpC,UAAU,GAAG,MAAH,GAAY,KAAvB,CAA5B;MACM4G,WAAW,GAAGxE,MAAM,CAACpC,UAAU,GAAG,OAAH,GAAa,QAAxB,CAA1B;;MAGM6G,MAAM,GAAG7qB,IAAI,CAAC+J,GAAL,MAAA,CAAA/J,IAAA,EAAY+K,KAAZ,CAAf;MACM+f,MAAM,GAAG9qB,IAAI,CAAC8J,GAAL,MAAA,CAAA9J,IAAA,EAAY+K,KAAZ,CAAf;;MAEI4f,aAAa,GAAG,CAAhB,GAAoBE,MAAxB,EAAgC;WACrB;MACH3F,OAAO,EAAE,IADN;MAEHjf,MAAM,EAAE4kB,MAAM,GAAGF,aAFd;MAGH3kB,GAAG,EAAE2kB;KAHT;;;MAMAC,WAAW,GAAG,CAAd,GAAkBE,MAAtB,EAA8B;WACnB;MACH5F,OAAO,EAAE,IADN;MAEHjf,MAAM,EAAE6kB,MAAM,GAAGF,WAFd;MAGH5kB,GAAG,EAAE4kB;KAHT;;;SAOG;IACH1F,OAAO,EAAE,KADN;IAEHjf,MAAM,EAAE,CAFL;IAGHD,GAAG,EAAE;GAHT;;;AAMJ,SAAgB8iB,gBACZC,eACAgC,WACAxc;MAEM4Q,SAAS,GAAG5Q,GAAG,GAAGwa,aAAa,CAACloB,GAAd,CAAkB,UAAAmF,GAAA;WAAOijB,MAAM,CAACjjB,GAAD,EAAMuI,GAAN,CAAN;GAAzB,CAAH,GAAgDwa,aAArE;SAEO5J,SAAS,CAACtL,IAAV,CAAe,UAAA7N,GAAA;WACVA,GAAG,CAAC,CAAD,CAAH,GAAS+kB,SAAS,CAACplB,IAAnB,IAA2B3F,IAAI,CAAC+M,GAAL,CAAS/G,GAAG,CAAC,CAAD,CAAH,GAAS+kB,SAAS,CAACplB,IAA5B,IAAoC,GAAhE,IACCK,GAAG,CAAC,CAAD,CAAH,GAAS+kB,SAAS,CAAC7f,KAAnB,IAA4BlL,IAAI,CAAC+M,GAAL,CAAS/G,GAAG,CAAC,CAAD,CAAH,GAAS+kB,SAAS,CAAC7f,KAA5B,IAAqC,GADlE,IAEClF,GAAG,CAAC,CAAD,CAAH,GAAS+kB,SAAS,CAACnlB,GAAnB,IAA0B5F,IAAI,CAAC+M,GAAL,CAAS/G,GAAG,CAAC,CAAD,CAAH,GAAS+kB,SAAS,CAACnlB,GAA5B,IAAmC,GAF9D,IAGCI,GAAG,CAAC,CAAD,CAAH,GAAS+kB,SAAS,CAAC5f,MAAnB,IAA6BnL,IAAI,CAAC+M,GAAL,CAAS/G,GAAG,CAAC,CAAD,CAAH,GAAS+kB,SAAS,CAAC5f,MAA5B,IAAsC,GAH3E;GADG,CAAP;;AAOJ,SAAgB6f,YACZ7c,KACA8c,UACAnW;MAEMoW,CAAC,GAAGhd,WAAW,CAACC,GAAD,CAArB;MACMgd,OAAO,GAAGnrB,IAAI,CAACoO,IAAL,CAAU8c,CAAC,GAAGA,CAAJ,GAAQD,QAAQ,GAAGA,QAA7B,KAA0C,CAA1D;SAEO,CAACE,OAAD,EAAU,CAACA,OAAX,EAAoB9V,IAApB,CAAyB,UAAChS,CAAD,EAAIiS,CAAJ;WACrBtV,IAAI,CAAC+M,GAAL,CAAS1J,CAAC,GAAG8K,GAAG,CAAC2G,KAAK,GAAG,CAAH,GAAO,CAAb,CAAhB,IAAmC9U,IAAI,CAAC+M,GAAL,CAASuI,CAAC,GAAGnH,GAAG,CAAC2G,KAAK,GAAG,CAAH,GAAO,CAAb,CAAhB,CAA1C;GADG,EAEJjU,GAFI,CAEA,UAAAmF,GAAA;WACI8H,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAASgH,KAAK,GAAG,CAAC9O,GAAD,EAAMilB,QAAN,CAAH,GAAqB,CAACA,QAAD,EAAWjlB,GAAX,CAAnC,CAAb;GAHG,CAAP;;AAOJ,SAAgBolB,kBACZxY,UACAyW,WACAlK,WACAjc,QACAuL;MAEM2X,MAAM,GAAGxT,QAAQ,CAACiD,KAAT,CAAeuQ,MAA9B;MACM7X,GAAG,GAAGE,QAAQ,GAAGzO,IAAI,CAACiO,EAAhB,GAAqB,GAAjC;;MAEI,CAACmY,MAAL,EAAa;WACF,EAAP;;;MAGAjiB,gBAAA;MAAAwB,qCAAA;MACAqB,eADA;MACApB,oCADA;MAEAiG,iBAFA;MAEAX,qCAFA;MAGAwB,kBAHA;MAGAvB,sCAHA;MAMEme,YAAY,GAAG3jB,IAAI,GAAGzC,MAAM,CAAC,CAAD,CAAlC;MACMqmB,aAAa,GAAGre,KAAK,GAAGhI,MAAM,CAAC,CAAD,CAApC;MACMsmB,WAAW,GAAG5jB,GAAG,GAAG1C,MAAM,CAAC,CAAD,CAAhC;MACMumB,cAAc,GAAGte,MAAM,GAAGjI,MAAM,CAAC,CAAD,CAAtC;MACM6nB,SAAS,GAAG;IACdplB,IAAI,EAAE2jB,YADQ;IAEd1jB,GAAG,EAAE4jB,WAFS;IAGdte,KAAK,EAAEqe,aAHO;IAIdpe,MAAM,EAAEse;GAJZ;;MAOI,CAACX,eAAa,CAAC3J,SAAD,EAAY4L,SAAZ,EAAuB,CAAvB,CAAlB,EAA6C;WAClC,EAAP;;;MAEEtO,MAAM,GAAa,EAAzB;GAEI,CAAC6M,YAAD,EAAe,CAAf,CADJ,EAEI,CAACC,aAAD,EAAgB,CAAhB,CAFJ,EAGI,CAACC,WAAD,EAAc,CAAd,CAHJ,EAII,CAACC,cAAD,EAAiB,CAAjB,CAJJ,EAKElhB,OALF,CAKU,UAACpE,EAAD,EAAoBD,CAApB;QAAE+mB;QAAUnW;IAClBqK,SAAS,CAAC5W,OAAV,CAAkB,UAAA4iB,OAAA;UACRE,YAAY,GAAGvd,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAASqd,OAAT,CAA3B;MAEA1O,MAAM,CAAC3V,IAAP,MAAA,CAAA2V,MAAA,EAAeuO,WAAW,CAACG,OAAD,EAAUF,QAAV,EAAoBnW,KAApB,CAAX,CACVjU,GADU,CACN,UAAAyqB,YAAA;eAAgB/c,GAAG,GAAG+c,YAAN,GAAqBD,YAArB;OADV,EAEV1X,MAFU,CAEH,UAAAwW,OAAA;eAAW,CAACrB,eAAa,CAACO,SAAD,EAAY0B,SAAZ,EAAuBZ,OAAvB,CAAd;OAFR,EAGVtpB,GAHU,CAGN,UAAAspB,OAAA;eAAW1Y,QAAQ,CAAC0Y,OAAO,GAAG,GAAV,GAAgBnqB,IAAI,CAACiO,EAAtB,EAA0BjN,QAA1B,CAAR;OAHL,CAAf;KAHJ;GANJ;SAgBOyb,MAAP;;;SCxMY8O,UAAU3Y;MAChBzC,KAAK,GAAGyC,QAAQ,CAACzC,KAAvB;;MACIA,KAAK,CAAC0Q,UAAN,IAAoB1Q,KAAK,CAAC0Q,UAAN,CAAiBra,MAAzC,EAAiD;;;;MAI3CrC,mBAAA;MACF6C,4BADE;MACFma,8CADE;MAEFtV,0BAFE;MAEFqV,4CAFE;MAGFxU,yBAHE;MAGF8e,2CAHE;MAIFpF,kBAJE;MAKF9E,0BALE;;MAQF,CAAC8E,MAAD,IAAW,CAACjF,oBAAoB,CAAC3a,MAAjC,IAA2C,CAAC0a,kBAAkB,CAAC1a,MAA/D,IAAyE,CAACglB,iBAAiB,CAAChlB,MAAhG,EAAwG;;;;MAKpG8G,8BAAA;MACIme,qBADJ;MAEIC,uBAFJ;MAIAje,2BAJA;MAKIpG,kBALJ;MAMID,oBANJ;MASE2D,KAAK,GAAGuG,uBAAuB,CAACnB,KAAD,CAArC;MACMwb,UAAU,GAAG3rB,IAAI,CAAC+J,GAAL,MAAA,CAAA/J,IAAA,EAAY+K,KAAK,CAAClK,GAAN,CAAU,UAAAmF,GAAA;WAAOA,GAAG,CAAC,CAAD,CAAH;GAAjB,CAAZ,CAAnB;MACM4lB,SAAS,GAAG5rB,IAAI,CAAC+J,GAAL,MAAA,CAAA/J,IAAA,EAAY+K,KAAK,CAAClK,GAAN,CAAU,UAAAmF,GAAA;WAAOA,GAAG,CAAC,CAAD,CAAH;GAAjB,CAAZ,CAAlB;MACM6G,QAAQ,GAAG0E,SAAS,CAACoa,UAAU,IAAIvkB,UAAU,GAAGskB,aAAjB,CAAX,CAA1B;MACM5e,OAAO,GAAGyE,SAAS,CAACqa,SAAS,IAAIvkB,SAAS,GAAGokB,YAAhB,CAAV,CAAzB;MACM5K,UAAU,GAAgB,EAAhC;EAEA2K,iBAAkB,CAACjjB,OAAnB,CAA2B,UAAAhF,EAAA;QACjBkI,IAAI,GAAGlI,EAAE,CAACmC,qBAAH,EAAb;QACQE,cAAA;QAAKD,gBAAL;QAAWqD,kBAAX;QAAkBE,oBAAlB;QACF2iB,UAAU,GAAGjmB,GAAG,GAAG6lB,YAAzB;QACMK,aAAa,GAAGD,UAAU,GAAG3iB,MAAnC;QACM6iB,WAAW,GAAGpmB,IAAI,GAAG+lB,aAA3B;QACMM,YAAY,GAAGD,WAAW,GAAG/iB,KAAnC;IACA6X,UAAU,CAAC/Z,IAAX,CAAgB;MACZuS,IAAI,EAAE,UADM;MACM+K,OAAO,EAAE7gB,EADf;MACmByC,GAAG,EAAE,CAChCyL,QAAQ,CAACsa,WAAW,GAAGlf,QAAf,EAAyB,GAAzB,CADwB,EAEhCgf,UAFgC,CADxB;MAITjN,IAAI,EAAE1V;KAJb;IAMA2X,UAAU,CAAC/Z,IAAX,CAAgB;MACZuS,IAAI,EAAE,UADM;MACM+K,OAAO,EAAE7gB,EADf;MACmByC,GAAG,EAAE,CAChCyL,QAAQ,CAACua,YAAY,GAAGnf,QAAhB,EAA0B,GAA1B,CADwB,EAEhCgf,UAFgC,CADxB;MAITjN,IAAI,EAAE1V;KAJb;IAMA2X,UAAU,CAAC/Z,IAAX,CAAgB;MACZuS,IAAI,EAAE,YADM;MACQ+K,OAAO,EAAE7gB,EADjB;MACqByC,GAAG,EAAE,CAClC+lB,WADkC,EAElCta,QAAQ,CAACoa,UAAU,GAAG/e,OAAd,EAAuB,GAAvB,CAF0B,CAD1B;MAIT8R,IAAI,EAAE5V;KAJb;IAMA6X,UAAU,CAAC/Z,IAAX,CAAgB;MACZuS,IAAI,EAAE,YADM;MACQ+K,OAAO,EAAE7gB,EADjB;MACqByC,GAAG,EAAE,CAClC+lB,WADkC,EAElCta,QAAQ,CAACqa,aAAa,GAAGhf,OAAjB,EAA0B,GAA1B,CAF0B,CAD1B;MAIT8R,IAAI,EAAE5V;KAJb;;QAOIsY,UAAJ,EAAgB;MACZT,UAAU,CAAC/Z,IAAX,CAAgB;QACZuS,IAAI,EAAE,UADM;QAEZ+K,OAAO,EAAE7gB,EAFG;QAGZyC,GAAG,EAAE,CACDyL,QAAQ,CAAC,CAACsa,WAAW,GAAGC,YAAf,IAA+B,CAA/B,GAAmCnf,QAApC,EAA8C,GAA9C,CADP,EAEDgf,UAFC,CAHO;QAOZjN,IAAI,EAAE1V,MAPM;QAQZ0E,MAAM,EAAE;OARZ;MAUAiT,UAAU,CAAC/Z,IAAX,CAAgB;QACZuS,IAAI,EAAE,YADM;QAEZ+K,OAAO,EAAE7gB,EAFG;QAGZyC,GAAG,EAAE,CACD+lB,WADC,EAEDta,QAAQ,CAAC,CAACoa,UAAU,GAAGC,aAAd,IAA+B,CAA/B,GAAmChf,OAApC,EAA6C,GAA7C,CAFP,CAHO;QAOZ8R,IAAI,EAAE5V,KAPM;QAQZ4E,MAAM,EAAE;OARZ;;GA3CR;EAwDAuC,KAAK,CAAC0Q,UAAN,GAAmBA,UAAnB;EACA1Q,KAAK,CAAC8b,UAAN,GAAmB,IAAnB;;AAGJ,SAAgBC,cACZtZ,UACA2H;MAGIpW,mBAAA;MACIgoB,wBADJ;MAEI/F,kBAFJ;MAGIlF,0CAHJ;MAIIC,8CAJJ;MAMAna,mBANA;MAOI6Z,0BAPJ;MAQIoL,0BARJ;;MAaA,CAACE,SAAD,IACG,CAACF,UADJ,IAEI1R,QAAQ,IAAI4R,SAAS,KAAK,IAA1B,IAAkCA,SAAS,CAAC3rB,OAAV,CAAkB+Z,QAAlB,IAA8B,CAHxE,EAIE;WACS,KAAP;;;MAGA6L,MAAM,IACFvF,UAAU,IAAIA,UAAU,CAACra,MAD7B,IAEI0a,kBAAkB,IAAIA,kBAAkB,CAAC1a,MAF7C,IAGI2a,oBAAoB,IAAIA,oBAAoB,CAAC3a,MAJrD,EAKE;WACS,IAAP;;;SAEG,KAAP;;;AAGJ,SAAS4lB,eAAT,CACIpqB,IADJ,EAEIC,IAFJ,EAGIgE,MAHJ,EAII+d,UAJJ,EAKIlR,KALJ;MAOUsV,UAAU,GAAGiE,aAAa,CAC5BrqB,IAD4B,EAE5BC,IAF4B,EAG5B,CAACgE,MAH2B,EAI5B+d,UAJ4B,CAAhC;;MAOI,CAACoE,UAAL,EAAiB;WACN,CAAC,CAAD,EAAI,CAAJ,CAAP;;;MAEEjkB;;;;IAAA;MAACmoB,mBAAD;MAAcC,oBAAd;;SAMC,CAACD,WAAD,EAAcC,YAAd,CAAP;;;AAEJ,SAASC,iBAAT,CACIvpB,MADJ,EAEI+F,KAFJ,EAGIE,MAHJ,EAIIujB,QAJJ,EAKIze,SALJ,EAMI3H,IANJ;MAQU8Y,SAAS,GAAGxU,aAAa,CAAC1H,MAAD,EAAS+F,KAAT,EAAgBE,MAAhB,EAAwB7C,IAAI,GAAG,CAAH,GAAO,CAAnC,CAA/B;MACM8kB,OAAO,GAAG9L,wBAAwB,CAACF,SAAD,EAAYnR,SAAZ,CAAxC;SAEOmD,gBAAgB,CAACgO,SAAD,EAAY/S,KAAK,CAACqgB,QAAD,EAAWtB,OAAX,CAAjB,CAAvB;;;AAEJ,SAASuB,kBAAT,CAA4BC,SAA5B,EAAkDlJ,QAAlD;MACQkJ,SAAS,CAACzH,OAAd,EAAuB;WACZyH,SAAS,CAAC1mB,MAAjB;GADJ,MAEO,IAAIwd,QAAQ,CAACjB,MAAb,EAAqB;WACjBiB,QAAQ,CAACxd,MAAhB;;;SAEG,CAAP;;;AAEJ,SAAS2mB,YAAT,CAAsBD,SAAtB,EAA4ClJ,QAA5C;MACQkJ,SAAS,CAACzH,OAAd,EAAuB;WACZyH,SAAS,CAAC1mB,MAAjB;GADJ,MAEO,IAAIwd,QAAQ,CAACjB,MAAb,EAAqB;WACjBgB,2BAA2B,CAACC,QAAD,CAA3B,CAAsCxd,MAA7C;;;SAEG,CAAP;;;AAEJ,SAAgB4mB,yBACZja,UACAgN,UACAkC;MAEM3d,oDAAA;MACF2oB,mCADE;MAEFC,+BAFE;;MAQA/lB,mDAAA;MACF2b,kCADE;MAEFD,8BAFE;;MASA6E,gBAAgB,GAAGmF,kBAAkB,CAACI,mBAAD,EAAsBnK,kBAAtB,CAA3C;MACM2E,cAAc,GAAGoF,kBAAkB,CAACK,iBAAD,EAAoBrK,gBAApB,CAAzC;MAEMsK,cAAc,GAAGhtB,IAAI,CAAC+M,GAAL,CAASwa,gBAAT,CAAvB;MACM0F,YAAY,GAAGjtB,IAAI,CAAC+M,GAAL,CAASua,cAAT,CAArB;SAEO;IACH1F,UAAU,EAAE;MACRsD,OAAO,EAAE4H,mBAAmB,CAAC5H,OADrB;MAER1C,MAAM,EAAEG,kBAAkB,CAACH,MAFnB;MAGRvc,MAAM,EAAEshB,gBAHA;MAIRnW,IAAI,EAAE4b;KALP;IAOHtL,QAAQ,EAAE;MACNwD,OAAO,EAAE6H,iBAAiB,CAAC7H,OADrB;MAEN1C,MAAM,EAAEE,gBAAgB,CAACF,MAFnB;MAGNvc,MAAM,EAAEqhB,cAHF;MAINlW,IAAI,EAAE6b;;GAXd;;AAeJ,SAAgBC,gBACZta,UACA7H,OACAoiB;2BAAA,EAAA;IAAAA,kBAAA;;;MAEMhpB;;;;KAAA;MACF2oB,mCADE;MAEFC,+BAFE;;MAQA/lB;;;;KAAA;MACF2b,kCADE;MAEFD,8BAFE;;MASA6E,gBAAgB,GAAGqF,YAAY,CAACE,mBAAD,EAAsBnK,kBAAtB,CAArC;MACM2E,cAAc,GAAGsF,YAAY,CAACG,iBAAD,EAAoBrK,gBAApB,CAAnC;MAEMsK,cAAc,GAAGhtB,IAAI,CAAC+M,GAAL,CAASwa,gBAAT,CAAvB;MACM0F,YAAY,GAAGjtB,IAAI,CAAC+M,GAAL,CAASua,cAAT,CAArB;SAEO;IACH1F,UAAU,EAAE;MACRsD,OAAO,EAAE4H,mBAAmB,CAAC5H,OADrB;MAER1C,MAAM,EAAEG,kBAAkB,CAACH,MAFnB;MAGRvc,MAAM,EAAEshB,gBAHA;MAIRnW,IAAI,EAAE4b;KALP;IAOHtL,QAAQ,EAAE;MACNwD,OAAO,EAAE6H,iBAAiB,CAAC7H,OADrB;MAEN1C,MAAM,EAAEE,gBAAgB,CAACF,MAFnB;MAGNvc,MAAM,EAAEqhB,cAHF;MAINlW,IAAI,EAAE6b;;GAXd;;AAeJ,SAAgBG,eACZxa,UACA5J,OACAE,QACA6B,OACAiD,WACAye,UACA3Z;MAEMua,cAAc,GAAG,CAAC,CAACrf,SAAS,CAAC,CAAD,CAAX,EAAgB,CAACA,SAAS,CAAC,CAAD,CAA1B,CAAvB;MACMoY,MAAM,GAAGxT,QAAQ,CAACiD,KAAT,CAAeuQ,MAA9B;MACIkH,QAAQ,GAAGC,QAAf;MACIC,SAAS,GAAGD,QAAhB;;MAEInH,MAAJ,EAAY;QACFqH,UAAU,GAAG,CACf,CAACzf,SAAS,CAAC,CAAD,CAAV,EAAe,CAACA,SAAS,CAAC,CAAD,CAAzB,CADe,EAEf,CAAC,CAACA,SAAS,CAAC,CAAD,CAAX,EAAgBA,SAAS,CAAC,CAAD,CAAzB,CAFe,CAAnB;QAKI7J,gBAAA;QAAAupB,uCAAA;QACA1mB,eADA;QACA2mB,sCADA;QAEA9hB,iBAFA;QAEA+hB,uCAFA;QAGAlhB,kBAHA;QAGAmhB,wCAHA;IAMJJ,UAAU,CAACllB,OAAX,CAAmB,UAAAulB,cAAA;UACTC,eAAe,GAAGD,cAAc,CAAC,CAAD,CAAd,KAAsBT,cAAc,CAAC,CAAD,CAA5D;UACMW,iBAAiB,GAAGF,cAAc,CAAC,CAAD,CAAd,KAAsBT,cAAc,CAAC,CAAD,CAA9D;UACMY,QAAQ,GAAG/O,iBAAiB,CAACnU,KAAD,EAAQ+iB,cAAR,CAAlC;;UAEIE,iBAAJ,EAAuB;YACb7pB,oHAAA;YAEFooB,oBAFE;;YASF,CAAC1N,KAAK,CAAC0N,YAAD,CAAV,EAA0B;UACtBiB,SAAS,GAAGtkB,MAAM,GAAGqjB,YAArB;;;;UAGJwB,eAAJ,EAAqB;YAEbzB,+HAAA;;YAMA,CAACzN,KAAK,CAACyN,WAAD,CAAV,EAAyB;UACrBgB,QAAQ,GAAGtkB,KAAK,GAAGsjB,WAAnB;;;KA5BZ;;;SAiCG;IACHgB,QAAQ,UADL;IAEHE,SAAS;GAFb;;;AAKJ,SAASU,gBAAT,CACItb,QADJ,EAEI7H,KAFJ,EAGI0iB,UAHJ,EAIIhJ,SAJJ,EAKI3R,KALJ;SAOW2a,UAAU,CAAC5sB,GAAX,CAAe,UAACsD,EAAD;QAAEgqB;QAAgBC;QAC9BC,aAAa,GAAGnP,iBAAiB,CAACnU,KAAD,EAAQojB,cAAR,CAAvC;QACMG,WAAW,GAAGpP,iBAAiB,CAACnU,KAAD,EAAQqjB,YAAR,CAArC;QAEMG,aAAa,GACb9J,SAAS,GACToI,wBAAwB,CAACja,QAAD,EAAWyb,aAAX,EAA0BC,WAA1B,CADf,GAETpB,eAAe,CAACta,QAAD,EAAW,CAAC0b,WAAD,CAAX,CAHrB;QAMItnB,6BAAA;QACIwnB,6BADJ;QAEIC,iCAFJ;QAGIC,mCAHJ;QAIIC,iCAJJ;QAMA9iB,2BANA;QAOI+iB,2BAPJ;QAQIC,+BARJ;QASIC,iCATJ;QAUIC,+BAVJ;QAcE5G,QAAQ,GAAG/b,KAAK,CAACgiB,YAAD,EAAeD,cAAf,CAAtB;;QAEI,CAACU,mBAAD,IAAwB,CAACJ,qBAA7B,EAAoD;aACzC;QACHvJ,OAAO,EAAE4J,oBAAoB,IAAIJ,sBAD9B;QAEHlM,MAAM,EAAEuM,mBAAmB,IAAIJ,qBAF5B;QAGHjc,IAAI,EAAEyV,QAHH;QAIHliB,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ;OAJZ;;;QAOE+d,UAAU,GAAGwK,mBAAmB,GAAGI,iBAAzC;QACMxG,UAAU,GAAGgE,eAAe,CAC9BiC,aAD8B,EAE9BC,WAF8B,EAG9BtK,UAAU,GAAG6K,mBAAH,GAAyBJ,qBAHL,EAI9BzK,UAJ8B,EAK9BlR,KAL8B,CAAf,CAMjBjS,GANiB,CAMb,UAAC+d,IAAD,EAAO1a,CAAP;aAAa0a,IAAI,IAAIuJ,QAAQ,CAACjkB,CAAD,CAAR,GAAc,IAAIikB,QAAQ,CAACjkB,CAAD,CAA1B,GAAgC,CAApC,CAAJ;KANA,CAAnB;WAQO;MACHwO,IAAI,EAAEyV,QADH;MAEHjD,OAAO,EAAElB,UAAU,GAAG8K,oBAAH,GAA0BJ,sBAF1C;MAGHlM,MAAM,EAAEwB,UAAU,GAAG+K,mBAAH,GAAyBJ,qBAHxC;MAIH1oB,MAAM,EAAEmiB;KAJZ;GA3CG,CAAP;;;AAmDJ,SAAgB4G,uBACZhhB,WACAyW;MAEMgJ,UAAU,GAAiB,EAAjC;MACMJ,cAAc,GAAG,CAAC,CAACrf,SAAS,CAAC,CAAD,CAAX,EAAgB,CAACA,SAAS,CAAC,CAAD,CAA1B,CAAvB;;MAEIA,SAAS,CAAC,CAAD,CAAT,IAAgBA,SAAS,CAAC,CAAD,CAA7B,EAAkC;IAC9Byf,UAAU,CAAC3mB,IAAX,CACI,CAACumB,cAAD,EAAiB,CAACrf,SAAS,CAAC,CAAD,CAAV,EAAe,CAACA,SAAS,CAAC,CAAD,CAAzB,CAAjB,CADJ,EAEI,CAACqf,cAAD,EAAiB,CAAC,CAACrf,SAAS,CAAC,CAAD,CAAX,EAAgBA,SAAS,CAAC,CAAD,CAAzB,CAAjB,CAFJ;;QAIIyW,SAAJ,EAAe;;MAEXgJ,UAAU,CAAC3mB,IAAX,CACI,CAACumB,cAAD,EAAiBrf,SAAjB,CADJ;;GAPR,MAWO,IAAIA,SAAS,CAAC,CAAD,CAAb,EAAkB;;QAEjByW,SAAJ,EAAe;MACXgJ,UAAU,CAAC3mB,IAAX,CACI,CAACumB,cAAD,EAAiB,CAACA,cAAc,CAAC,CAAD,CAAf,EAAoB,CAAC,CAArB,CAAjB,CADJ,EAEI,CAACA,cAAD,EAAiB,CAACA,cAAc,CAAC,CAAD,CAAf,EAAoB,CAApB,CAAjB,CAFJ,EAGI,CAACA,cAAD,EAAiB,CAACrf,SAAS,CAAC,CAAD,CAAV,EAAe,CAAC,CAAhB,CAAjB,CAHJ,EAII,CAACqf,cAAD,EAAiBrf,SAAjB,CAJJ,EAKI,CAACqf,cAAD,EAAiB,CAACrf,SAAS,CAAC,CAAD,CAAV,EAAe,CAAf,CAAjB,CALJ;KADJ,MAQO;MACHyf,UAAU,CAAC3mB,IAAX,CACI,CAAC,CAACumB,cAAc,CAAC,CAAD,CAAf,EAAoB,CAAC,CAArB,CAAD,EAA0B,CAACrf,SAAS,CAAC,CAAD,CAAV,EAAe,CAAC,CAAhB,CAA1B,CADJ,EAEI,CAAC,CAACqf,cAAc,CAAC,CAAD,CAAf,EAAoB,CAApB,CAAD,EAAyB,CAACrf,SAAS,CAAC,CAAD,CAAV,EAAe,CAAf,CAAzB,CAFJ,EAGI,CAAC,CAACqf,cAAc,CAAC,CAAD,CAAf,EAAoB,CAApB,CAAD,EAAyB,CAACrf,SAAS,CAAC,CAAD,CAAV,EAAe,CAAf,CAAzB,CAHJ;;GAXD,MAiBA,IAAIA,SAAS,CAAC,CAAD,CAAb,EAAkB;;QAEjByW,SAAJ,EAAe;MACXgJ,UAAU,CAAC3mB,IAAX,CACI,CAACumB,cAAD,EAAiB,CAAC,CAAC,CAAF,EAAKA,cAAc,CAAC,CAAD,CAAnB,CAAjB,CADJ,EAEI,CAACA,cAAD,EAAiB,CAAC,CAAD,EAAIA,cAAc,CAAC,CAAD,CAAlB,CAAjB,CAFJ,EAGI,CAACA,cAAD,EAAiB,CAAC,CAAC,CAAF,EAAKrf,SAAS,CAAC,CAAD,CAAd,CAAjB,CAHJ,EAII,CAACqf,cAAD,EAAiB,CAAC,CAAD,EAAIrf,SAAS,CAAC,CAAD,CAAb,CAAjB,CAJJ,EAKI,CAACqf,cAAD,EAAiBrf,SAAjB,CALJ;KADJ,MAQO;MACHyf,UAAU,CAAC3mB,IAAX,CACI,CAAC,CAAC,CAAC,CAAF,EAAKumB,cAAc,CAAC,CAAD,CAAnB,CAAD,EAA0B,CAAC,CAAC,CAAF,EAAKrf,SAAS,CAAC,CAAD,CAAd,CAA1B,CADJ,EAEI,CAAC,CAAC,CAAD,EAAIqf,cAAc,CAAC,CAAD,CAAlB,CAAD,EAAyB,CAAC,CAAD,EAAIrf,SAAS,CAAC,CAAD,CAAb,CAAzB,CAFJ,EAGI,CAAC,CAAC,CAAD,EAAIqf,cAAc,CAAC,CAAD,CAAlB,CAAD,EAAyB,CAAC,CAAD,EAAIrf,SAAS,CAAC,CAAD,CAAb,CAAzB,CAHJ;;GAXD,MAiBA;;IAEHyf,UAAU,CAAC3mB,IAAX,CACI,CAACumB,cAAD,EAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,CADJ,EAEI,CAACA,cAAD,EAAiB,CAAC,CAAC,CAAF,EAAK,CAAL,CAAjB,CAFJ,EAGI,CAACA,cAAD,EAAiB,CAAC,CAAD,EAAI,CAAC,CAAL,CAAjB,CAHJ,EAII,CAACA,cAAD,EAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,CAJJ,EAMI,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAC,CAAL,CAAT,CANJ,EAOI,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,CAPJ,EAQI,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,CARJ,EASI,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAC,CAAF,EAAK,CAAL,CAAT,CATJ,EAWI,CAAC,CAAC,CAAC,CAAF,EAAK,CAAL,CAAD,EAAU,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAV,CAXJ,EAYI,CAAC,CAAC,CAAC,CAAF,EAAK,CAAL,CAAD,EAAU,CAAC,CAAC,CAAF,EAAK,CAAL,CAAV,CAZJ,EAaI,CAAC,CAAC,CAAD,EAAI,CAAC,CAAL,CAAD,EAAU,CAAC,CAAD,EAAI,CAAC,CAAL,CAAV,CAbJ,EAcI,CAAC,CAAC,CAAD,EAAI,CAAC,CAAL,CAAD,EAAU,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAV,CAdJ;;;SAkBGI,UAAP;;AAEJ,SAAgBwB,kBACZrc,UACA7H,OACAiD,WACAyW,WACA3R;MAEM2a,UAAU,GAAGuB,sBAAsB,CAAChhB,SAAD,EAAYyW,SAAZ,CAAzC;MACMyD,KAAK,GAAGI,iBAAiB,CAACvd,KAAD,EAAQiD,SAAR,EAAmByW,SAAnB,CAA/B;MACME,OAAO,GACNuJ,gBAAgB,CAACtb,QAAD,EAAW7H,KAAX,EAAkB0iB,UAAlB,EAA8BhJ,SAA9B,EAAyC3R,KAAzC,CAAhB,OAAA,CACAmV,iBAAiB,CAACrV,QAAD,EAAWsV,KAAX,EAAkBhJ,iBAAiB,CAACnU,KAAD,EAAQ,CAAC,CAAD,EAAI,CAAJ,CAAR,CAAnC,EAAoD+H,KAApD,CADjB,CADP;MAIM0V,eAAe,GAAG9D,iBAAiB,CAACC,OAAD,EAAU,CAAV,CAAzC;MACM8D,gBAAgB,GAAG/D,iBAAiB,CAACC,OAAD,EAAU,CAAV,CAA1C;SAEO;IACH3b,KAAK,EAAE;MACHkc,OAAO,EAAEsD,eAAe,CAACtD,OADtB;MAEHjf,MAAM,EAAEuiB,eAAe,CAACviB,MAAhB,CAAuB,CAAvB;KAHT;IAKHiD,MAAM,EAAE;MACJgc,OAAO,EAAEuD,gBAAgB,CAACvD,OADtB;MAEJjf,MAAM,EAAEwiB,gBAAgB,CAACxiB,MAAjB,CAAwB,CAAxB;;GAPhB;;AAWJ,SAAgBipB,0BACZtc,UACA7H,OACA/B,OACAE,QACAokB,UACAE,WACAxf,WACA8E;MAEMqc,OAAO,GAAGjQ,iBAAiB,CAACnU,KAAD,EAAQiD,SAAR,CAAjC;;MAEM7J,yCAAA;MAEEojB,uCAFF;MAKED,mCALF;;MASFA,cAAc,IAAIC,gBAAtB,EAAwC;QAC9BvgB;;;;MAAA;QAACooB,uBAAD;QAAkBC,wBAAlB;;QAMAC,SAAS,GACTtvB,IAAI,CAAC+J,GAAL,CAASujB,QAAQ,IAAIC,QAArB,EAA+BvkB,KAAK,GAAGgF,SAAS,CAAC,CAAD,CAAT,GAAeohB,eAAtD,CADN;QAEMG,UAAU,GACVvvB,IAAI,CAAC+J,GAAL,CAASyjB,SAAS,IAAID,QAAtB,EAAgCrkB,MAAM,GAAG8E,SAAS,CAAC,CAAD,CAAT,GAAeqhB,gBAAxD,CADN;WAGO,CACHC,SAAS,GAAGtmB,KADT,EAEHumB,UAAU,GAAGrmB,MAFV,CAAP;;;SAKG,CACH,CADG,EAEH,CAFG,CAAP;;AAKJ,SAAgBsmB,cACZ5c,UACA6c,cACAxsB,QACA+F,OACAE,QACA8E,WACAuW,eACAkI,UACAjW,WACAnQ,MACAyM;MAEM/H,KAAK,GAAGuG,uBAAuB,CAACsB,QAAQ,CAACzC,KAAV,CAArC;MACMsU,SAAS,GAAG7R,QAAQ,CAACiD,KAAT,CAAe4O,SAAjC;MAEI6H,WAAW,GAAG,CAAlB;MACIC,YAAY,GAAG,CAAnB;;OAEK,IAAIroB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuB,EAAEA,CAAzB,EAA4B;QAClBib,SAAS,GAAGsQ,YAAY,CAACnD,WAAD,EAAcC,YAAd,CAA9B;;QACMpoB,wEAAA;QACFqkB,0BADE;QAEFC,4BAFE;;QAWAiH,YAAY,GAAGlH,eAAe,CAACtD,OAArC;QACMyK,aAAa,GAAGlH,gBAAgB,CAACvD,OAAvC;QACIkK,eAAe,GAAG5G,eAAe,CAACviB,MAAtC;QACIopB,gBAAgB,GAAG5G,gBAAgB,CAACxiB,MAAxC;;QAEI/B,CAAC,KAAK,CAAV,EAAa;UACL,CAACwrB,YAAL,EAAmB;QACfN,eAAe,GAAG,CAAlB;;;UAEA,CAACO,aAAL,EAAoB;QAChBN,gBAAgB,GAAG,CAAnB;;;;QAGJnrB,CAAC,KAAK,CAAN,IAAWsS,SAAX,IAAwB,CAACkZ,YAAzB,IAAyC,CAACC,aAA9C,EAA6D;aAClD,CAAC,CAAD,EAAI,CAAJ,CAAP;;;QAEAlL,SAAJ,EAAe;UACLmL,SAAS,GAAG5vB,IAAI,CAAC+M,GAAL,CAASqiB,eAAT,KAA6BpmB,KAAK,GAAG,IAAIA,KAAP,GAAe,CAAjD,CAAlB;UACM6mB,UAAU,GAAG7vB,IAAI,CAAC+M,GAAL,CAASsiB,gBAAT,KAA8BnmB,MAAM,GAAG,IAAIA,MAAP,GAAgB,CAApD,CAAnB;UACM4mB,gBAAgB,GAChBJ,YAAY,IAAIC,aAAhB,GAAgCC,SAAS,GAAGC,UAA5C,GACIF,aAAa,IAAK,CAACD,YAAD,IAAiBE,SAAS,GAAGC,UAFzD,CAHW;;UAQPC,gBAAJ,EAAsB;;QAElBV,eAAe,GAAGpmB,KAAK,GAAGqmB,gBAAR,GAA2BnmB,MAA7C;OAFJ,MAGO;;QAEHmmB,gBAAgB,GAAGnmB,MAAM,GAAGkmB,eAAT,GAA2BpmB,KAA9C;;;;IAGRsjB,WAAW,IAAI8C,eAAf;IACA7C,YAAY,IAAI8C,gBAAhB;WAEO,CACH/C,WADG,EAEHC,YAFG,CAAP;;;MAMAve,SAAS,CAAC,CAAD,CAAT,IAAgBA,SAAS,CAAC,CAAD,CAA7B,EAAkC;QACxBhH,+EAAA;QACFsmB,sBADE;QAEFE,wBAFE;;QAKA3hB,oKAAA;QAACujB,uBAAD;QAAkBC,wBAAlB;;IAWN/C,WAAW,IAAI8C,eAAf;IACA7C,YAAY,IAAI8C,gBAAhB;;;SAGG,CACH/C,WADG,EAEHC,YAFG,CAAP;;AAMJ,SAAgBwD,gBACZnd,UACAnH,MACAvI,QACAuL;MAEI,CAACyd,aAAa,CAACtZ,QAAD,EAAW,WAAX,CAAlB,EAA2C;WAChCnE,QAAP;;;MAIAzM,gBAAA;MACAC,gBADA;MAEA2I,gBAFA;MAGAC,gBAHA;MAKE0D,GAAG,GAAGE,QAAQ,GAAGzO,IAAI,CAACiO,EAAhB,GAAqB,GAAjC;MACMob,SAAS,GAAG,CAACrnB,IAAD,EAAOC,IAAP,EAAa2I,IAAb,EAAmBC,IAAnB,EAAyBhK,GAAzB,CAA6B,UAAAmF,GAAA;WAAOoG,KAAK,CAACpG,GAAD,EAAM9C,MAAN,CAAL;GAApC,CAAlB;MACMic,SAAS,GAAGkK,SAAS,CAACxoB,GAAV,CAAc,UAAAmF,GAAA;WAAOijB,MAAM,CAACjjB,GAAD,EAAMuI,GAAN,CAAN;GAArB,CAAlB;MAEMkO,MAAM,GACL2O,iBAAiB,CAACxY,QAAD,EAAWyW,SAAX,EAAsBlK,SAAtB,EAAiCjc,MAAjC,EAAyCuL,QAAzC,CAAjB,OAAA,CACA2a,sBAAsB,CAACxW,QAAD,EAAWyW,SAAX,EAAsBlK,SAAtB,EAAiCjc,MAAjC,EAAyCuL,QAAzC,CADtB,CADP;EAIAgO,MAAM,CAACpH,IAAP,CAAY,UAAChS,CAAD,EAAIiS,CAAJ;WAAUtV,IAAI,CAAC+M,GAAL,CAAS1J,CAAC,GAAGoL,QAAb,IAAyBzO,IAAI,CAAC+M,GAAL,CAASuI,CAAC,GAAG7G,QAAb,CAAzB;GAAtB;;MAEIgO,MAAM,CAACjW,MAAX,EAAmB;WACRiW,MAAM,CAAC,CAAD,CAAb;GADJ,MAEO;WACIhO,QAAP;;;AAGR,SAAgBuhB,cACZpd,UACA5J,OACAE,QACA8E,WACAye,UACAjW,WACA1D;MAEI,CAACoZ,aAAa,CAACtZ,QAAD,EAAW,WAAX,CAAlB,EAA2C;WAChC,CAAC,CAAD,EAAI,CAAJ,CAAP;;;MAEEzO,mBAAA;MACFlB,kBADE;MAEFoD,cAFE;SAICmpB,aAAa,CAChB5c,QADgB,EAEhB,UAAC0Z,WAAD,EAAsBC,YAAtB;WACWC,iBAAiB,CACpBvpB,MADoB,EAEpB+F,KAAK,GAAGsjB,WAFY,EAGpBpjB,MAAM,GAAGqjB,YAHW,EAIpBE,QAJoB,EAKpBze,SALoB,EAMpB3H,IANoB,CAAxB;GAHY,EAWbpD,MAXa,EAWL+F,KAXK,EAWEE,MAXF,EAWU8E,SAXV,EAWqBA,SAXrB,EAWgCye,QAXhC,EAW0CjW,SAX1C,EAWqDnQ,IAXrD,EAW2DyM,KAX3D,CAApB;;AAcJ,SAAgBmd,eACZrd,UACAlT,OACAsO,WACAuW,eACAkI,UACAjW,WACA1D;MAGI9J,mBAAA;MACAE,qBADA;;MAGA,CAACgjB,aAAa,CAACtZ,QAAD,EAAW,UAAX,CAAlB,EAA0C;WAC/B,CAAC,CAAD,EAAI,CAAJ,CAAP;;;MAEEvM,IAAI,GAAGyM,KAAK,CAACzM,IAAnB;MACM6pB,QAAQ,GAAGV,aAAa,CAC1B5c,QAD0B,EAE1B,UAAC0Z,WAAD,EAAsBC,YAAtB;WACWC,iBAAiB,CACpBxiB,WAAW,CAAC8I,KAAD,EAAQzB,IAAI,CAAC3R,KAAD,EAAQ,CAAC4sB,WAAW,GAAGtjB,KAAf,EAAsBujB,YAAY,GAAGrjB,MAArC,CAAR,CAAZ,CADS,EAEpBF,KAFoB,EAGpBE,MAHoB,EAIpBujB,QAJoB,EAKpBze,SALoB,EAMpB3H,IANoB,CAAxB;GAHsB,EAY1B2D,WAAW,CAAC8I,KAAD,EAAQpT,KAAR,CAZe,EAa1BsJ,KAb0B,EAanBE,MAbmB,EAc1B8E,SAd0B,EAe1BuW,aAf0B,EAgB1BkI,QAhB0B,EAiB1BjW,SAjB0B,EAkB1BnQ,IAlB0B,EAmB1ByM,KAnB0B,CAA9B;SAsBO,CACHod,QAAQ,CAAC,CAAD,CAAR,GAAclnB,KADX,EAEHknB,QAAQ,CAAC,CAAD,CAAR,GAAchnB,MAFX,CAAP;;AAKJ,SAAgBmjB,cACZrqB,MACAC,MACAkuB,YACAnM;MAEI7B,EAAE,GAAGlgB,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAAC,CAAD,CAAvB;MACIogB,EAAE,GAAGngB,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAAC,CAAD,CAAvB;;MAEIhC,IAAI,CAAC+M,GAAL,CAASoV,EAAT,IAAenhB,QAAnB,EAA6B;IACzBmhB,EAAE,GAAG,CAAL;;;MAEAniB,IAAI,CAAC+M,GAAL,CAASqV,EAAT,IAAephB,QAAnB,EAA6B;IACzBohB,EAAE,GAAG,CAAL;;;MAEA,CAACD,EAAL,EAAS;;;QAGD,CAAC6B,UAAL,EAAiB;aACN,CAAC,CAAD,EAAImM,UAAJ,CAAP;;;WAEG,CAAC,CAAD,EAAI,CAAJ,CAAP;;;MAEA,CAAC/N,EAAL,EAAS;;QAED4B,UAAJ,EAAgB;aACL,CAACmM,UAAD,EAAa,CAAb,CAAP;;;WAEG,CAAC,CAAD,EAAI,CAAJ,CAAP;;;;MAGE9sB,CAAC,GAAG+e,EAAE,GAAGD,EAAf;MACM7M,CAAC,GAAGtT,IAAI,CAAC,CAAD,CAAJ,GAAUqB,CAAC,GAAGrB,IAAI,CAAC,CAAD,CAA5B;;MAEIgiB,UAAJ,EAAgB;;QAENzZ,CAAC,GAAGlH,CAAC,IAAIpB,IAAI,CAAC,CAAD,CAAJ,GAAUkuB,UAAd,CAAD,GAA6B7a,CAAvC;WAEO,CAAC6a,UAAD,EAAa5lB,CAAC,GAAGtI,IAAI,CAAC,CAAD,CAArB,CAAP;GAJJ,MAKO;;QAEGqI,CAAC,GAAG,CAACrI,IAAI,CAAC,CAAD,CAAJ,GAAUkuB,UAAV,GAAuB7a,CAAxB,IAA6BjS,CAAvC;WAEO,CAACiH,CAAC,GAAGrI,IAAI,CAAC,CAAD,CAAT,EAAckuB,UAAd,CAAP;;;AAIR,SAAgBC,mBACZxd,UACAE;EAEAA,KAAK,CAACud,aAAN,GAAsB/e,uBAAuB,CAACsB,QAAQ,CAACzC,KAAV,CAA7C;;AAGJ,SAAgBmgB,wBACZC,oBACApsB,IACA6C,IACA6E,IACAa;MAHC6R;MAAOC;MACP+H;MAAiBC;MACjB3D;MAAgBE;MAChBuE;MAAgBC;MAEbiJ,OAAO,GAAG,CAAClJ,cAAf;MACImJ,OAAO,GAAG,CAAClJ,gBAAf;;MAEIgJ,kBAAkB,IAAIhS,KAAtB,IAA+BC,KAAnC,EAA0C;IACtCgS,OAAO,GAAG,CAAV;IACAC,OAAO,GAAG,CAAV;QACMC,WAAW,GAAG,EAApB;;QACInK,eAAe,IAAIC,iBAAvB,EAA0C;MACtCkK,WAAW,CAAC5pB,IAAZ,CACI,CAAC,CAAD,EAAIygB,gBAAJ,CADJ,EAEI,CAACD,cAAD,EAAiB,CAAjB,CAFJ;KADJ,MAKO,IAAIf,eAAJ,EAAqB;MACxBmK,WAAW,CAAC5pB,IAAZ,CACI,CAACwgB,cAAD,EAAiB,CAAjB,CADJ;KADG,MAIA,IAAId,iBAAJ,EAAuB;MAC1BkK,WAAW,CAAC5pB,IAAZ,CACI,CAAC,CAAD,EAAIygB,gBAAJ,CADJ;KADG,MAIA,IAAI1E,cAAc,IAAIE,gBAAtB,EAAwC;MAC3C2N,WAAW,CAAC5pB,IAAZ,CACI,CAAC,CAAD,EAAIygB,gBAAJ,CADJ,EAEI,CAACD,cAAD,EAAiB,CAAjB,CAFJ;KADG,MAKA,IAAIzE,cAAJ,EAAoB;MACvB6N,WAAW,CAAC5pB,IAAZ,CACI,CAACwgB,cAAD,EAAiB,CAAjB,CADJ;KADG,MAIA,IAAIvE,gBAAJ,EAAsB;MACzB2N,WAAW,CAAC5pB,IAAZ,CACI,CAAC,CAAD,EAAIygB,gBAAJ,CADJ;;;QAIAmJ,WAAW,CAAClqB,MAAhB,EAAwB;MACpBkqB,WAAW,CAACrb,IAAZ,CAAiB,UAAChS,CAAD,EAAIiS,CAAJ;eACNpH,WAAW,CAAC9B,KAAK,CAAC,CAACmS,KAAD,EAAQC,KAAR,CAAD,EAAiBnb,CAAjB,CAAN,CAAX,GAAwC6K,WAAW,CAAC9B,KAAK,CAAC,CAACmS,KAAD,EAAQC,KAAR,CAAD,EAAiBlJ,CAAjB,CAAN,CAA1D;OADJ;UAGMqb,SAAS,GAAGD,WAAW,CAAC,CAAD,CAA7B;;UAEIC,SAAS,CAAC,CAAD,CAAT,IAAgB3wB,IAAI,CAAC+M,GAAL,CAASwR,KAAT,IAAkBvd,QAAtC,EAAgD;QAC5CwvB,OAAO,GAAG,CAACG,SAAS,CAAC,CAAD,CAApB;QACAF,OAAO,GAAGjS,KAAK,GAAGxe,IAAI,CAAC+M,GAAL,CAASwR,KAAK,GAAGiS,OAAjB,CAAR,GAAoCxwB,IAAI,CAAC+M,GAAL,CAASwR,KAAT,CAApC,GAAsDC,KAAhE;OAFJ,MAGO,IAAImS,SAAS,CAAC,CAAD,CAAT,IAAgB3wB,IAAI,CAAC+M,GAAL,CAASyR,KAAT,IAAkBxd,QAAtC,EAAgD;YAC7C4vB,SAAS,GAAGpS,KAAlB;QACAiS,OAAO,GAAG,CAACE,SAAS,CAAC,CAAD,CAApB;QACAH,OAAO,GAAGjS,KAAK,GAAGve,IAAI,CAAC+M,GAAL,CAASyR,KAAK,GAAGiS,OAAjB,CAAR,GAAoCzwB,IAAI,CAAC+M,GAAL,CAAS6jB,SAAT,CAApC,GAA0DrS,KAApE;;;UAEAgS,kBAAkB,IAAI/J,iBAAtB,IAA2CD,eAA/C,EAAgE;YACxDvmB,IAAI,CAAC+M,GAAL,CAASyjB,OAAT,IAAoBxvB,QAApB,IAAgChB,IAAI,CAAC+M,GAAL,CAASyjB,OAAT,IAAoBxwB,IAAI,CAAC+M,GAAL,CAASua,cAAT,CAAxD,EAAkF;cACxE5nB,KAAK,GAAGM,IAAI,CAAC+M,GAAL,CAASua,cAAT,IAA2BtnB,IAAI,CAAC+M,GAAL,CAASyjB,OAAT,CAAzC;UAEAA,OAAO,IAAI9wB,KAAX;UACA+wB,OAAO,IAAI/wB,KAAX;SAJJ,MAKO,IAAIM,IAAI,CAAC+M,GAAL,CAAS0jB,OAAT,IAAoBzvB,QAApB,IAAgChB,IAAI,CAAC+M,GAAL,CAAS0jB,OAAT,IAAoBzwB,IAAI,CAAC+M,GAAL,CAASwa,gBAAT,CAAxD,EAAoF;cACjF7nB,KAAK,GAAGM,IAAI,CAAC+M,GAAL,CAASwa,gBAAT,IAA6BvnB,IAAI,CAAC+M,GAAL,CAAS0jB,OAAT,CAA3C;UAEAD,OAAO,IAAI9wB,KAAX;UACA+wB,OAAO,IAAI/wB,KAAX;SAJG,MAKA;UACH8wB,OAAO,GAAGrb,SAAS,CAAC,CAACmS,cAAF,EAAkBkJ,OAAlB,CAAnB;UACAC,OAAO,GAAGtb,SAAS,CAAC,CAACoS,gBAAF,EAAoBkJ,OAApB,CAAnB;;;;GA1DhB,MA8DO;IACHD,OAAO,GAAIjS,KAAK,IAAIgI,eAAV,GAA6B,CAACe,cAA9B,GAA+C,CAAzD;IACAmJ,OAAO,GAAIjS,KAAK,IAAIgI,iBAAV,GAA+B,CAACe,gBAAhC,GAAmD,CAA7D;;;SAEG,CAACiJ,OAAD,EAAUC,OAAV,CAAP;;AAEJ,SAAgBI,cACZje,UACA2L,OACAC,OACA+R,oBACAzd;MAGI,CAACoZ,aAAa,CAACtZ,QAAD,EAAW,WAAX,CAAlB,EAA2C;WAChC,CACH;MACI4P,MAAM,EAAE,KADZ;MAEI0C,OAAO,EAAE,KAFb;MAGIjf,MAAM,EAAE;KAJT,EAMH;MACIuc,MAAM,EAAE,KADZ;MAEI0C,OAAO,EAAE,KAFb;MAGIjf,MAAM,EAAE;KATT,CAAP;;;MAaE8E,KAAK,GAAGoG,gBAAgB,CAC1B2B,KAAK,CAACud,aADoB,EAE1B,CAAC9R,KAAD,EAAQC,KAAR,CAF0B,CAA9B;;MAIMra,mBAAA;MAAEwB,cAAF;MAAQuF,gBAAR;MAAetF,YAAf;MAAoBuF,kBAApB;;MACAmW,UAAU,GAAG1O,QAAQ,CAACiD,KAAT,CAAeyL,UAAlC;MACMwP,SAAS,GAAG,CACd,CAACnrB,IAAD,EAAOC,GAAP,CADc,EAEd,CAACsF,KAAD,EAAQtF,GAAR,CAFc,EAGd,CAACD,IAAD,EAAOwF,MAAP,CAHc,EAId,CAACD,KAAD,EAAQC,MAAR,CAJc,CAAlB;;MAOImW,UAAJ,EAAgB;IACZwP,SAAS,CAAChqB,IAAV,CAAe,CAAC,CAACnB,IAAI,GAAGuF,KAAR,IAAiB,CAAlB,EAAqB,CAACtF,GAAG,GAAGuF,MAAP,IAAiB,CAAtC,CAAf;;;MAEEnE,gDAAA;MACF+pB,mCADE;MAEFC,uCAFE;;MAIAnlB,kDAAA;MACFolB,oCADE;MAEFC,wCAFE;;MAKArO,cAAc,GAAGkO,qBAAqB,CAACvO,MAA7C;MACMO,gBAAgB,GAAGiO,uBAAuB,CAACxO,MAAjD;MACM+D,eAAe,GACfwK,qBAAqB,CAAC7L,OAAtB,IACC+L,sBAAsB,CAAC/L,OAF9B;MAGMsB,iBAAiB,GACjBwK,uBAAuB,CAAC9L,OAAxB,IACCgM,wBAAwB,CAAChM,OAFhC;MAGMoC,cAAc,GAAGnS,SAAS,CAAC4b,qBAAqB,CAAC9qB,MAAvB,EAA+BgrB,sBAAsB,CAAChrB,MAAtD,CAAhC;MACMshB,gBAAgB,GAAGpS,SAAS,CAAC6b,uBAAuB,CAAC/qB,MAAzB,EAAiCirB,wBAAwB,CAACjrB,MAA1D,CAAlC;;MACMyG,8KAAA;MAAC8jB,eAAD;MAAUC,eAAV;;SAOC,CACH;IACIvL,OAAO,EAAEqB,eADb;IAEI/D,MAAM,EAAEK,cAFZ;IAGI5c,MAAM,EAAEuqB;GAJT,EAMH;IACItL,OAAO,EAAEsB,iBADb;IAEIhE,MAAM,EAAEO,gBAFZ;IAGI9c,MAAM,EAAEwqB;GATT,CAAP;;;AAcJ,SAASU,iBAAT,CAA2BvO,QAA3B;MACU/B,UAAU,GAAgB,EAAhC;EAEA+B,QAAQ,CAACra,OAAT,CAAiB,UAAAob,OAAA;IACbA,OAAO,CAACE,cAAR,CAAuBtb,OAAvB,CAA+B,UAACpE,EAAD;UAAGuf;;UAC1B7C,UAAU,CAACrgB,OAAX,CAAmBkjB,SAAnB,IAAgC,CAAC,CAArC,EAAwC;;;;MAGxC7C,UAAU,CAAC/Z,IAAX,CAAgB4c,SAAhB;KAJJ;GADJ;SASO7C,UAAP;;;AAGJ,SAASuQ,uBAAT,CACIC,UADJ,EAEIC,WAFJ,EAGInN,SAHJ,EAIIoN,UAJJ;;;MAQUC,WAAW,GAAGH,UAAU,GAAGlN,SAAjC;MACMvE,QAAQ,GAAG4R,WAAW,GAAG,CAAd,GAAkBA,WAAW,GAAGF,WAAhC,GAA8CC,UAA/D;MACMzP,MAAM,GAAG0P,WAAW,GAAG,CAAd,GAAkB,CAAlB,GAAsBA,WAArC;MACM5S,IAAI,GAAGkD,MAAM,GAAGlC,QAAtB;SAEO;IACHhB,IAAI,MADD;IAEH5Y,GAAG,EAAE4Z;GAFT;;;AAKJ,SAAS6R,wBAAT,CACI5Q,UADJ,EAEI6Q,SAFJ,EAGI9S,IAHJ,EAII9J,KAJJ;MAMU6c,UAAU,GAAkC,EAAlD;MAEM/c,KAAK,GAAGH,OAAO,CAACoM,UAAU,CAAClN,MAAX,CAAkB,UAACxP,EAAD;QAAGigB;WAAcA,OAAA;GAAnC,CAAD,EAA8C,UAACjgB,EAAD;QAAGigB;QAASpe;QAAK4rB;QAC1EP,UAAU,GAAGrrB,GAAG,CAAC8O,KAAD,CAAtB;QACMpC,IAAI,GAAG1S,IAAI,CAAC+J,GAAL,CAAS,CAAT,EAAYsnB,UAAU,GAAGK,SAAzB,IAAsC,CAAtC,GAA0C,CAAC,CAA3C,GAA+C,CAA5D;QACM3c,QAAQ,GAAMrC,IAAI,MAAJ,GAAQ1M,GAAG,CAAC8O,KAAK,GAAG,CAAH,GAAO,CAAb,CAA/B;QACM+c,SAAS,GAAGC,IAAI,CAACH,UAAD,EAAa,UAACxtB,EAAD;UAAE4tB;UAAcC;aACxC5N,OAAO,KAAK2N,YAAZ,IAA4BV,UAAU,KAAKW,QAAlD;KADkB,CAAtB;;QAGIH,SAAJ,EAAe;aACJA,SAAS,CAAC,CAAD,CAAhB;;;IAEJF,UAAU,CAAC7qB,IAAX,CAAgB,CAACsd,OAAD,EAAWiN,UAAX,EAAuBtc,QAAvB,CAAhB;WACOA,QAAP;GAXiB,CAArB;EAaAH,KAAK,CAACrM,OAAN,CAAc,UAAAijB,iBAAA;IACVA,iBAAiB,CAACnW,IAAlB,CAAuB,UAAChS,CAAD,EAAIiS,CAAJ;UACbmH,MAAM,GAAG2U,uBAAuB,CAAC/tB,CAAC,CAAC2C,GAAF,CAAM8O,KAAN,CAAD,EAAezR,CAAC,CAACub,IAAjB,EAAuB8S,SAAvB,EAAkC9S,IAAlC,CAAvB,CAA+DA,IAA/D,GACTwS,uBAAuB,CAAC9b,CAAC,CAACtP,GAAF,CAAM8O,KAAN,CAAD,EAAezR,CAAC,CAACub,IAAjB,EAAuB8S,SAAvB,EAAkC9S,IAAlC,CAAvB,CAA+DA,IADrE;aAGOnC,MAAM,IAAIpZ,CAAC,CAAC2C,GAAF,CAAM8O,KAAK,GAAG,CAAH,GAAO,CAAlB,IAAuBQ,CAAC,CAACtP,GAAF,CAAM8O,KAAK,GAAG,CAAH,GAAO,CAAlB,CAAxC;KAJJ;GADJ;SAQOF,KAAP;;;AAEJ,SAASqd,kBAAT,CACIrd,KADJ,EAEIzQ,EAFJ,EAGI0mB,MAHJ,EAII6G,SAJJ,EAKIQ,UALJ,EAMI/N,SANJ,EAOI1C,aAPJ,EAQI0Q,kBARJ,EASIC,SATJ,EAUItd,KAVJ,EAWI+C,KAXJ;MAEKwa;MAAeC;MAAUC;MAAUC;SAW7Bxd,IAAI,CAACJ,KAAK,CAAC/T,GAAN,CAAU,UAAC2qB,iBAAD,EAAoBtnB,CAApB;QACduuB,iBAAiB,GAAG,IAAxB;WAEOjH,iBAAiB,CAAC3qB,GAAlB,CAAsB,UAACsD,EAAD,EAAgBuuB,CAAhB;;;UAAG1sB;UAAK4Y;;UAC3B/S,qEAAA;UACF8mB,gBADE;UAEFC,kBAFE;;UAKFA,QAAQ,GAAGnR,aAAf,EAA8B;eACnB,IAAP;;;UAEEoR,YAAY,GAAGJ,iBAArB;MAEAA,iBAAiB,GAAG,KAApB;UACMK,QAAQ,GAAGX,kBAAkB,IAAIU,YAAtB,GAAqC9vB,UAAU,CAAC6vB,QAAQ,CAACG,OAAT,CAAiBX,SAAjB,CAAD,CAA/C,GAA+E,CAAhG;aAEOva,mBAAA,MAAA;QAAKE,SAAS,EAAE7V,MAAM,CACzB,MADyB,EAEzBmwB,aAFyB,EAGzB,WAHyB,EAIzB,QAJyB;qBAMdS,QAAQ,GAAG,CAAX,GAAeA,QAAf,GAA0B;QACrChb,GAAG,EAAKua,aAAa,iBAAb,GAA4BnuB,CAA5B,MAAA,GAAiCwuB;QAAKtuB,KAAK,YAC/C4C,GAACsrB,SAAD,GAAezH,MAAM,GAAG8H,OAAT,SACf3rB,GAACurB,SAAD,GAAe,CAACpO,SAAD,GAAane,GAAG,CAAC8O,KAAK,GAAG,CAAH,GAAO,CAAb,CAAhB,SACf9N,GAACwrB,SAAD,GAAeI,QAAQ,WAHwB;OAPhD,CAAP;KAdG,CAAP;GAHQ,CAAD,CAAX;;;AAgCJ,SAASI,eAAT,CACIlC,SADJ,EAEI3sB,EAFJ,EAGI0mB,MAHJ,EAII1G,SAJJ,EAKIvF,IALJ,EAMI/G,KANJ;MAEKwa;MAAeC;MAAUC;MAAUC;SAM7B1B,SAAS,CAACjwB,GAAV,CAAc,UAACmF,GAAD,EAAM9B,CAAN;;;WACV2T,mBAAA,MAAA;MAAKE,SAAS,EAAE7V,MAAM,CACzB,MADyB,EAEzBmwB,aAFyB,EAGzB,WAHyB,EAIzB,QAJyB,EAKzB,MALyB;MAM1Bva,GAAG,EAAKua,aAAa,mBAAb,GAA8BnuB;MAAKE,KAAK,YAC/CD,GAACmuB,SAAD,GAAezH,MAAM,SACrB1mB,GAACouB,SAAD,GAAe,CAACpO,SAAD,GAAane,GAAb,SACf7B,GAACquB,SAAD,GAAe5T,IAAI,WAH4B;KAN5C,CAAP;GADG,CAAP;;;AAcJ,SAASqU,gBAAT,CACIpS,UADJ,EAEI1c,EAFJ,EAGI+uB,UAHJ,EAIIC,UAJJ,EAKIre,KALJ,EAMI+C,KANJ;MAEKwa;MAAeC;MAAUC;MAAUC;SAM7B3R,UAAU,CAAChgB,GAAX,CAAe,UAAC6iB,SAAD,EAAYxf,CAAZ;;;QACV8B,mBAAA;QAAK4Y,qBAAL;QAAWwF,2BAAX;WAEDvM,mBAAA,MAAA;MAAKE,SAAS,EAAE7V,MAAM,CACzB,MADyB,EAEzBmwB,aAFyB,EAGzB,WAHyB,EAIzBjO,OAAO,GAAG,MAAH,GAAY,EAJM;MAK1BtM,GAAG,EAAKua,aAAa,aAAb,GAAwBnuB;MAAKE,KAAK,YACzCD,GAACmuB,SAAD,GAAe,CAACY,UAAD,GAAcltB,GAAG,CAAC8O,KAAD,CAAjB,SACf3Q,GAACouB,SAAD,GAAe,CAACY,UAAD,GAAcntB,GAAG,CAAC8O,KAAK,GAAG,CAAH,GAAO,CAAb,CAAjB,SACf3Q,GAACquB,SAAD,GAAe5T,IAAI,WAHsB;KALtC,CAAP;GAHG,CAAP;;;AAgBJ,SAASwU,kBAAT,CACIxgB,QADJ,EAEI0X,aAFJ,EAGID,eAHJ,EAIIgJ,iBAJJ,EAKIC,mBALJ;MAOUnvB,8DAAA;MACF6C,gBADE;MAEEuf,4BAFF;MAGEgN,yBAHF;MAKF1nB,kBALE;MAME2a,8BANF;MAOEgN,2BAPF;;MAWFjN,eAAe,IAAI8M,iBAAiB,CAAC7yB,OAAlB,CAA0B+yB,gBAA1B,IAA8C,CAArE,EAAwE;IACpEF,iBAAiB,CAACvsB,IAAlB,CAAuBysB,gBAAvB;;;MAEA/M,iBAAiB,IAAI8M,mBAAmB,CAAC9yB,OAApB,CAA4BgzB,kBAA5B,IAAkD,CAA3E,EAA8E;IAC1EF,mBAAmB,CAACxsB,IAApB,CAAyB0sB,kBAAzB;;;MAEE9mB,mCAAA;MACF+mB,qCADE;MAEFC,yCAFE;;EAKNL,iBAAiB,CAACvsB,IAAlB,MAAA,CAAAusB,iBAAA,EACOI,uBAAuB,CAAC9f,MAAxB,CAA+B,UAAA3N,GAAA;WAAOqtB,iBAAiB,CAAC7yB,OAAlB,CAA0BwF,GAA1B,IAAiC,CAAjC;GAAtC,CADP;EAGAstB,mBAAmB,CAACxsB,IAApB,MAAA,CAAAwsB,mBAAA,EACOI,yBAAyB,CAAC/f,MAA1B,CAAiC,UAAA3N,GAAA;WAAOstB,mBAAmB,CAAC9yB,OAApB,CAA4BwF,GAA5B,IAAmC,CAAnC;GAAxC,CADP;;;AAIJ,gBAAe;EACXzF,IAAI,EAAE,WADK;EAEXsV,KAAK,EAAE;IACHsW,SAAS,EAAE,CAAC/P,OAAD,EAAUuX,KAAV,CADR;IAEHrS,UAAU,EAAElF,OAFT;IAGH4E,cAAc,EAAE5E,OAHb;IAIH6E,YAAY,EAAE7E,OAJX;IAKHoF,WAAW,EAAEpF,OALV;IAMH+V,kBAAkB,EAAE/V,OANjB;IAOHgW,SAAS,EAAE/V,MAPR;IAQHoF,aAAa,EAAEpF,MARZ;IASH8E,oBAAoB,EAAEwS,KATnB;IAUHzS,kBAAkB,EAAEyS,KAVjB;IAWHnI,iBAAiB,EAAEmI,KAXhB;IAYHvN,MAAM,EAAEwN,MAZL;IAaHvN,WAAW,EAAEuN;GAfN;EAiBX7X,MAAM,EAAN,UAAOnJ,QAAP,EAAkEiF,KAAlE;QACU1T,mBAAA;QACFynB,kBADE;QAEFD,oBAFE;QAGF3pB,cAHE;QAGIC,cAHJ;QAGU2I,cAHV;QAGgBC,cAHhB;QAIFgS,kCAJE;QAKFtM,sCALE;QAMF/K,4CANE;QAQA4B,UAAU,GAAGmJ,gBAAgB,CAAC5K,IAAjB,GAAwBH,mBAAmB,CAACG,IAA/D;QACM0B,SAAS,GAAGkJ,gBAAgB,CAAC3K,GAAjB,GAAuBJ,mBAAmB,CAACI,GAA7D;QAEMiuB,OAAO,GAAG7zB,IAAI,CAAC+J,GAAL,CAAS/H,IAAI,CAAC,CAAD,CAAb,EAAkBC,IAAI,CAAC,CAAD,CAAtB,EAA2B2I,IAAI,CAAC,CAAD,CAA/B,EAAoCC,IAAI,CAAC,CAAD,CAAxC,CAAhB;QACMipB,MAAM,GAAG9zB,IAAI,CAAC+J,GAAL,CAAS/H,IAAI,CAAC,CAAD,CAAb,EAAkBC,IAAI,CAAC,CAAD,CAAtB,EAA2B2I,IAAI,CAAC,CAAD,CAA/B,EAAoCC,IAAI,CAAC,CAAD,CAAxC,CAAf;;QAEI,CAACgS,cAAD,IAAmB,CAACqP,aAAa,CAACtZ,QAAD,EAAW,EAAX,CAArC,EAAqD;aAC1C,EAAP;;;QAEE5L,mBAAA;QACF6E,qBADE;QACF4V,sCADE;QAEF/U,iBAFE;QAEF0lB,kCAFE;QAGF9kB,0BAHE;QAGF6kB,8CAHE;QAKApnB,KAAK,GAAGuG,uBAAuB,CAACsB,QAAQ,CAACzC,KAAV,CAArC;;QACM1C,mBAAA;QAAEzE,gBAAF;QAASE,kBAAT;QAAiBtD,YAAjB;QAAsBD,cAAtB;QAA4BwF,kBAA5B;QAAoCD,gBAApC;;QACAmoB,iBAAiB,GAAa,EAApC;QACMC,mBAAmB,GAAa,EAAtC;QACMS,mBAAmB,GAAgB,EAAzC;QACM5S,oBAAoB,GAAgB,EAA1C;QACM6S,SAAS,GAAwD,EAAvE;;QAEInX,cAAc,CAAC7O,SAAnB,EAA8B;MAC1BgmB,SAAS,CAACltB,IAAV,CAAewd,uBAAuB,CAAC1R,QAAD,EAAW7H,KAAX,EAAkB8R,cAAc,CAAC7O,SAAjC,CAAtC;;;QAEA6O,cAAc,CAACoX,IAAnB,EAAyB;UACfxoB,IAAI,GAAGX,OAAO,CAACC,KAAD,CAApB;;UAEI8R,cAAc,CAACjP,MAAnB,EAA2B;QACtBnC,IAAY,CAACyoB,MAAb,GAAsB,CAACzoB,IAAI,CAAC7F,GAAL,GAAW6F,IAAI,CAACN,MAAjB,IAA2B,CAAjD;QACAM,IAAY,CAACmC,MAAb,GAAsB,CAACnC,IAAI,CAAC9F,IAAL,GAAY8F,IAAI,CAACP,KAAlB,IAA2B,CAAjD;;;MAEL8oB,SAAS,CAACltB,IAAV,CAAeqc,UAAU,CAACvQ,QAAD,EAAWnH,IAAX,EAAiB,IAAjB,EAAuB,CAAvB,CAAzB;;;IAEJuoB,SAAS,CAACzrB,OAAV,CAAkB,UAAAkb,QAAA;UAGN0Q,6CAAA;UAGAC,iDAHA;MAMRf,iBAAiB,CAACvsB,IAAlB,MAAA,CAAAusB,iBAAA,EAA0Bc,gBAAgB,CAACtzB,GAAjB,CAAqB,UAAA8iB,OAAA;eAAWA,OAAO,CAAC3d,GAAR;OAAhC,CAA1B;MACAstB,mBAAmB,CAACxsB,IAApB,MAAA,CAAAwsB,mBAAA,EAA4Bc,kBAAkB,CAACvzB,GAAnB,CAAuB,UAAA8iB,OAAA;eAAWA,OAAO,CAAC3d,GAAR;OAAlC,CAA5B;MACA+tB,mBAAmB,CAACjtB,IAApB,MAAA,CAAAitB,mBAAA,EAA4B5C,iBAAiB,CAACgD,gBAAD,CAA7C;MACAhT,oBAAoB,CAACra,IAArB,MAAA,CAAAqa,oBAAA,EAA6BgQ,iBAAiB,CAACiD,kBAAD,CAA9C;KAZJ;IAeAhB,kBAAkB,CACdxgB,QADc,EAEd,CAACjN,IAAD,EAAOuF,KAAP,CAFc,EAGd,CAACtF,GAAD,EAAMuF,MAAN,CAHc,EAIdkoB,iBAJc,EAKdC,mBALc,CAAlB;QAOMe,sBAAsB,GAAG5C,wBAAwB,CACnDtQ,oBADmD,EAEnD/Z,UAFmD,EAGnD4B,KAHmD,EAInD,CAJmD,CAAvD;QAMMsrB,oBAAoB,GAAG7C,wBAAwB,CACjDsC,mBADiD,EAEjD1sB,SAFiD,EAGjD6B,MAHiD,EAIjD,CAJiD,CAArD;QAMMqa,eAAe,GAAG,CAAC,YAAD,EAAe,MAAf,EAAuB,KAAvB,EAA8B,OAA9B,CAAxB;QACMD,aAAa,GAAG,CAAC,UAAD,EAAa,KAAb,EAAoB,MAApB,EAA4B,QAA5B,CAAtB;WAEO2O,kBAAkB,CACjBoC,sBADiB,EAEjB9Q,eAFiB,EAGjBsQ,OAHiB,EAIjBzsB,UAJiB,EAKjB4B,KALiB,EAMjB4iB,SANiB,EAOjBnK,aAPiB,EAQjB0Q,kBARiB,EASjBC,SATiB,EAUjB,CAViB,EAWjBva,KAXiB,CAAlB,OAAA,CAaAoa,kBAAkB,CACjBqC,oBADiB,EAEjBhR,aAFiB,EAGjBwQ,MAHiB,EAIjBzsB,SAJiB,EAKjB6B,MALiB,EAMjByiB,UANiB,EAOjBlK,aAPiB,EAQjB0Q,kBARiB,EASjBC,SATiB,EAUjB,CAViB,EAWjBva,KAXiB,CAblB,EA0BAmb,eAAe,CACdM,mBADc,EAEd/P,eAFc,EAGdsQ,OAHc,EAIdjI,SAJc,EAKd5iB,KALc,EAMd6O,KANc,CA1Bf,EAkCAmb,eAAe,CACdK,iBADc,EAEd/P,aAFc,EAGdwQ,MAHc,EAIdnI,UAJc,EAKdziB,MALc,EAMd2O,KANc,CAlCf,EA0CAob,gBAAgB,CACf9R,oBADe,EAEfoC,eAFe,EAGfoI,UAHe,EAIfC,SAJe,EAKf,CALe,EAMf/T,KANe,CA1ChB,EAkDAob,gBAAgB,CACfc,mBADe,EAEfzQ,aAFe,EAGfsI,SAHe,EAIfD,UAJe,EAKf,CALe,EAMf9T,KANe,CAlDhB,CADP;GAhGO;EA6JX2D,SAAS,EAAT,UAAU5I,QAAV,EAAqEnR,CAArE;IACImR,QAAQ,CAACzC,KAAT,CAAe0M,cAAf,GAAgC;MAC5BoX,IAAI,EAAE,IADsB;MAE5BrmB,MAAM,EAAE;KAFZ;IAIA2d,SAAS,CAAC3Y,QAAD,CAAT;GAlKO;EAoKX6I,UAAU,EAAV,UAAW7I,QAAX;SACSf,KAAL,CAAWe,QAAX;GArKO;EAuKX2hB,OAAO,EAAP,UAAQ3hB,QAAR;SACSf,KAAL,CAAWe,QAAX;GAxKO;EA0KX4hB,oBAAoB,EAApB,UAAqB/yB,CAArB;WACWgf,kBAAkB,CAAChf,CAAD,CAAlB,IAAyBgzB,oBAA4B,CAAChzB,CAAD,CAA5D;GA3KO;EA6KXia,gBAAgB,EAAhB,UAAiB9I,QAAjB,EAA4EnR,CAA5E;IACImR,QAAQ,CAACzC,KAAT,CAAe0M,cAAf,GAAgC,IAAhC;IACA0O,SAAS,CAAC3Y,QAAD,CAAT;GA/KO;EAiLX8hB,cAAc,EAAd,UAAe9hB,QAAf;SACSf,KAAL,CAAWe,QAAX;GAlLO;EAoLX+hB,cAAc,EAAd,UAAe/hB,QAAf,EAA8BnR,CAA9B;SACS+Z,SAAL,CAAe5I,QAAf,EAAyBnR,CAAzB;GArLO;EAuLXmzB,YAAY,EAAZ,UAAahiB,QAAb;SACSf,KAAL,CAAWe,QAAX;GAxLO;EA0LXiiB,qBAAqB,EAArB,UAAsBjiB,QAAtB,EAAqCnR,CAArC;IACImR,QAAQ,CAACzC,KAAT,CAAe0M,cAAf,GAAgC,IAAhC;IACA0O,SAAS,CAAC3Y,QAAD,CAAT;GA5LO;EA8LXkiB,mBAAmB,EAAnB,UAAoBliB,QAApB;SACSf,KAAL,CAAWe,QAAX;GA/LO;EAiMXf,KAAK,EAAL,UAAMe,QAAN;QACUzC,KAAK,GAAGyC,QAAQ,CAACzC,KAAvB;IAEAA,KAAK,CAAC8b,UAAN,GAAmB,KAAnB;IACA9b,KAAK,CAAC0Q,UAAN,GAAmB,EAAnB;IACA1Q,KAAK,CAAC0M,cAAN,GAAuB,IAAvB;;CAtMR;;AC9oCA;;;;;AAIA,gBAAe;EACXtc,IAAI,EAAE,WADK;EAEXsV,KAAK,EAAE;IACHkf,SAAS,EAAE3Y,OADR;IAEH4Y,YAAY,EAAE3Y,MAFX;IAGHkU,kBAAkB,EAAElU;GALb;EAOXN,MAAM,EAAN,UACInJ,QADJ,EAEIiF,KAFJ;QAIU0Y,kBAAkB,GAAG3d,QAAQ,CAACiD,KAAT,CAAe0a,kBAA1C;QACMpsB,mBAAA;QAAE8wB,sBAAF;QAAY3kB,8BAAZ;;QAEF,CAACigB,kBAAD,IAAuB,CAAC0E,QAA5B,EAAsC;;;;QAGhC7jB,IAAI,GAAG6jB,QAAQ,CAAC7jB,IAAtB;;QAEI,CAACA,IAAI,CAAC,CAAD,CAAL,IAAY,CAACA,IAAI,CAAC,CAAD,CAArB,EAA0B;;;;QAIpBpI,KAAK,GAAGkF,WAAW,CAACkD,IAAD,CAAzB;QACM7C,GAAG,GAAGT,MAAM,CAACsD,IAAD,EAAO,CAAC,CAAD,EAAI,CAAJ,CAAP,CAAlB;WAEOyG,mBAAA,MAAA;MAAKE,SAAS,EAAE7V,MAAM,CACzB,MADyB,EAEzB,YAFyB,EAGzB,UAHyB,EAIzB,QAJyB;MAK1B4V,GAAG,EAAE;MAAuB1T,KAAK,EAAE;QAClC4E,KAAK,EAAKA,KAAK,OADmB;QAElCvG,SAAS,EAAE,eAAa6N,YAAY,CAAC,CAAD,CAAzB,SAAA,GAAmCA,YAAY,CAAC,CAAD,CAA/C,gBAAA,GAAgE/B,GAAhE;;KAPR,CAAP;GA1BO;EAoCXiN,SAAS,EAAT,UACI5I,QADJ,EAEInR,CAFJ;QAIYqR,eAAA;QAAOoiB,2BAAP;QAAoBC,+BAApB;QACFhlB,KAAK,GAAGyC,QAAQ,CAACzC,KAAvB;QAEIE,uCAAA;QACA1L,qBADA;QAEAuS,uBAFA;;QAKAA,OAAJ,EAAa;aACF,KAAP;;;IAEJ/G,KAAK,CAAC+G,OAAN,GAAgBie,aAAa,IAAIviB,QAAQ,CAACuG,aAA1C;QACM/U,KAAK,GAAGyK,MAAM,CAAC7K,gBAAP,CAAwBW,MAAxB,CAAd;IAEAmO,KAAK,CAACA,KAAN,GAAc,EAAd;IACAA,KAAK,CAACnN,IAAN,GAAa5C,UAAU,CAACqB,KAAK,CAACuB,IAAN,IAAc,EAAf,CAAV,IAAgC,CAA7C;IACAmN,KAAK,CAAClN,GAAN,GAAY7C,UAAU,CAACqB,KAAK,CAACwB,GAAN,IAAa,EAAd,CAAV,IAA+B,CAA3C;IACAkN,KAAK,CAAC3H,MAAN,GAAepI,UAAU,CAACqB,KAAK,CAAC+G,MAAN,IAAgB,EAAjB,CAAV,IAAkC,CAAjD;IACA2H,KAAK,CAAC5H,KAAN,GAAcnI,UAAU,CAACqB,KAAK,CAAC8G,KAAN,IAAe,EAAhB,CAAV,IAAiC,CAA/C;IACA4H,KAAK,CAACrQ,SAAN,GAAkB4N,eAAlB;IACAyC,KAAK,CAACsiB,cAAN,GAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB;IAEApX,YAAY,CAACpL,QAAD,EAAW;MAAEE,KAAK;KAAlB,CAAZ;IAEAA,KAAK,CAACuiB,QAAN,GAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB;IACAviB,KAAK,CAACwiB,cAAN,GAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB;IACAxiB,KAAK,CAACmD,MAAN,GAAe,KAAf;IAEAma,kBAAkB,CAACxd,QAAD,EAAWE,KAAX,CAAlB;QACMD,MAAM,GAAGF,UAAU,CAAcC,QAAd,EAAwBnR,CAAxB,EAA2B;MAChD8zB,GAAG,EAAE,UAAC9rB,SAAD;QACDqJ,KAAK,CAACsiB,cAAN,GAAuB3rB,SAAvB;;KAFiB,CAAzB;QAKMgT,MAAM,GAAGyY,WAAW,IAAI9hB,YAAY,CAACR,QAAD,EAAW,aAAX,EAA0BC,MAA1B,CAA1C;;QAEI4J,MAAM,KAAK,KAAf,EAAsB;MAClB3J,KAAK,CAACmD,MAAN,GAAe,IAAf;MACArD,QAAQ,CAACzC,KAAT,CAAe8kB,QAAf,GAA0B;QACtBO,SAAS,EAAE5iB,QAAQ,CAAC9H,OAAT,EADW;QAEtBsG,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ;OAFV;KAFJ,MAMO;MACHjB,KAAK,CAAC+G,OAAN,GAAgB,IAAhB;MACApE,KAAK,CAAC4C,OAAN,GAAgB,KAAhB;;;WAEG5C,KAAK,CAACmD,MAAN,GAAepD,MAAf,GAAwB,KAA/B;GAtFO;EAwFX4iB,IAAI,EAAJ,UACI7iB,QADJ,EAEInR,CAFJ;QAIYqR,eAAA;QAAOoiB,2BAAP;QAAoBnX,yBAApB;QACFQ,eAAA;QAAOC,eAAP;QACE9I,uBAAA;QAASO,qBAAT;QAAiBof,yBAAjB;QAA2BC,qCAA3B;QAA2C7yB,2BAA3C;QAAsD2yB,qCAAtD;;QAEJ,CAACnf,MAAL,EAAa;;;;QAGPJ,KAAK,GAAGjD,QAAQ,CAACiD,KAAvB;QAEMkD,cAAc,GAAGlD,KAAK,CAACkD,cAA7B;QACMic,YAAY,GAAGE,WAAW,GAAG,CAAH,GAAQrf,KAAK,CAACmf,YAAN,IAAsB,CAA9D;QACMzE,kBAAkB,GAAG2E,WAAW,GAAG,CAAH,GAAQrf,KAAK,CAAC0a,kBAAN,IAA4B,CAA1E;QAEI/N,MAAM,GAAG,KAAb;QACIkT,aAAa,GAAG,CAApB;;QAEInF,kBAAkB,GAAG,CAArB,KAA2BhS,KAAK,IAAIC,KAApC,CAAJ,EAAgD;UACtCmX,GAAG,GAAGlkB,QAAQ,CAAC3D,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAACyQ,KAAD,EAAQC,KAAR,CAAT,CAAN,GAAiC,GAAjC,GAAuCxe,IAAI,CAACiO,EAA7C,EAAiDsiB,kBAAjD,CAApB;UACMrF,CAAC,GAAGhd,WAAW,CAAC,CAACqQ,KAAD,EAAQC,KAAR,CAAD,CAArB;MACAkX,aAAa,GAAGC,GAAG,GAAG31B,IAAI,CAACiO,EAAX,GAAgB,GAAhC;MAEAsQ,KAAK,GAAG2M,CAAC,GAAGlrB,IAAI,CAAC41B,GAAL,CAASF,aAAT,CAAZ;MACAlX,KAAK,GAAG0M,CAAC,GAAGlrB,IAAI,CAAC61B,GAAL,CAASH,aAAT,CAAZ;;;QAGA,CAAChgB,OAAD,IAAY,CAACwf,WAAb,IAA4B,CAACnX,UAA7B,KAA4CQ,KAAK,IAAIC,KAArD,CAAJ,EAAiE;UACvDra,qEAAA;UAACoe,oBAAD;UAAeE,sBAAf;;UAIFI,oCAAA;UACA0D,sCADA;UAEAe,oCAFA;UAKAvE,wCAAA;UACAyD,0CADA;UAEAe,wCAFA;MAIJ/E,MAAM,GAAGK,cAAc,IAAIE,gBAAlB,IAAsCwD,eAAtC,IAAyDC,iBAAlE;MAEAjI,KAAK,IAAI+I,cAAT;MACA9I,KAAK,IAAI+I,gBAAT;;;IAEJzU,KAAK,CAACgjB,SAAN,GAAkBvX,KAAlB;IACAzL,KAAK,CAACijB,SAAN,GAAkBvX,KAAlB;QACMwX,eAAe,GAAG3kB,IAAI,CAACgN,WAAW,CAAC;MAAEvL,KAAK,OAAP;MAASyL,KAAK,OAAd;MAAgBC,KAAK;KAAtB,EAA0B,IAA1B,CAAZ,EAA6C4W,cAA7C,CAA5B;QACM3rB,SAAS,GAAG4H,IAAI,CAACgN,WAAW,CAAC;MAAEvL,KAAK,OAAP;MAASyL,KAAK,OAAd;MAAgBC,KAAK;KAAtB,EAA0B,KAA1B,CAAZ,EAA8C4W,cAA9C,CAAtB;;QAEI,CAAC7E,kBAAD,IAAuB,CAAC/N,MAA5B,EAAoC;MAChC9Q,aAAa,CAACjI,SAAD,EAAYurB,YAAZ,CAAb;MACAtjB,aAAa,CAACskB,eAAD,EAAkBhB,YAAlB,CAAb;;;QAGEiB,UAAU,GAAG7pB,KAAK,CAAC4pB,eAAD,EAAkBZ,cAAlB,CAAxB;QACMhkB,IAAI,GAAGhF,KAAK,CAAC3C,SAAD,EAAY2rB,cAAZ,CAAlB;QACMc,KAAK,GAAG9pB,KAAK,CAACgF,IAAD,EAAOikB,QAAP,CAAnB;QACMc,WAAW,GAAG/pB,KAAK,CAAC6pB,UAAD,EAAaX,cAAb,CAAzB;IAEAxiB,KAAK,CAACuiB,QAAN,GAAiBjkB,IAAjB;IACA0B,KAAK,CAACwiB,cAAN,GAAuBW,UAAvB;QAEMtwB,IAAI,GAAGmN,KAAK,CAACnN,IAAN,GAAaswB,UAAU,CAAC,CAAD,CAApC;QACMrwB,GAAG,GAAGkN,KAAK,CAAClN,GAAN,GAAYqwB,UAAU,CAAC,CAAD,CAAlC;QACM/qB,KAAK,GAAG4H,KAAK,CAAC5H,KAAN,GAAc+qB,UAAU,CAAC,CAAD,CAAtC;QACM9qB,MAAM,GAAG2H,KAAK,CAAC3H,MAAN,GAAe8qB,UAAU,CAAC,CAAD,CAAxC;QACMG,aAAa,GAAM3zB,SAAS,gBAAT,GAAuB2O,IAAI,CAAC,CAAD,CAA3B,SAAA,GAAqCA,IAAI,CAAC,CAAD,CAAzC,QAAzB;IAEAwB,QAAQ,CAACzC,KAAT,CAAe8kB,QAAf,CAAwB7jB,IAAxB,GAA+B8jB,WAAW,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAH,GAAY9jB,IAAtD;;QACI,CAAC8jB,WAAD,IAAgB,CAACnc,cAAjB,IAAmCmd,KAAK,CAACzjB,KAAN,CAAY,UAAAjB,GAAA;aAAO,CAACA,GAAD;KAAnB,CAAnC,IAA+D2kB,WAAW,CAACtiB,IAAZ,CAAiB,UAAArC,GAAA;aAAO,CAACA,GAAD;KAAxB,CAAnE,EAAkG;;;;QAG5FqB,MAAM,GAAGF,UAAU,CAASC,QAAT,EAAmBnR,CAAnB,EAAsB;MAC3CgB,SAAS,EAAE2zB,aADgC;MAE3ChlB,IAAI,MAFuC;MAG3C8kB,KAAK,OAHsC;MAI3CzsB,SAAS,WAJkC;MAK3CwsB,UAAU,YALiC;MAM3CE,WAAW,aANgC;MAO3CH,eAAe,iBAP4B;MAQ3CrwB,IAAI,MARuC;MAS3CC,GAAG,KATwC;MAU3CsF,KAAK,OAVsC;MAW3CC,MAAM,QAXqC;MAY3CuK,OAAO;KAZc,CAAzB;KAeCwf,WAAD,IAAgB9hB,YAAY,CAACR,QAAD,EAAW,QAAX,EAAqBC,MAArB,CAA5B;WACOA,MAAP;GApLO;EAsLX0hB,OAAO,EAAP,UACI3hB,QADJ,EAEInR,CAFJ;QAIYyzB,2BAAA;QAAapiB,eAAb;QAAoBmD,iBAApB;IAERrD,QAAQ,CAACzC,KAAT,CAAe+G,OAAf,GAAyB,IAAzB;IACAtE,QAAQ,CAACzC,KAAT,CAAe8kB,QAAf,GAA0B,IAA1B;;QACI,CAACniB,KAAK,CAACmD,MAAX,EAAmB;;;;IAGnBnD,KAAK,CAACmD,MAAN,GAAe,KAAf;KACCif,WAAD,IAAgB9hB,YAAY,CAACR,QAAD,EAAW,WAAX,EAAwBD,UAAU,CAAYC,QAAZ,EAAsBnR,CAAtB,EAAyB;MACnFwU,MAAM;KADoD,CAAlC,CAA5B;WAGOA,MAAP;GArMO;EAuMX0e,cAAc,EAAd,UAAe/hB,QAAf,EAAwCnR,CAAxC;QACUqR,KAAK,GAAGrR,CAAC,CAACqR,KAAhB;QAEMD,MAAM,GAAG,KAAK2I,SAAL,CAAe5I,QAAf,EAAyBnR,CAAzB,CAAf;;QAEI,CAACoR,MAAL,EAAa;aACF,KAAP;;;QAEEiE,MAAM,GAAGwG,gBAAgB,CAAC1K,QAAD,EAAW,IAAX,EAAiB,WAAjB,EAA8BE,KAA9B,EAAqCrR,CAArC,CAA/B;;QACM40B,UAAU,gBACTxjB;MACH+C,OAAO,EAAEhD,QAAQ,CAACiD,KAAT,CAAeD;MACxBkB,MAAM;MAHV;;QAKM2F,MAAM,GAAGrJ,YAAY,CAACR,QAAD,EAAW,kBAAX,EAA+ByjB,UAA/B,CAA3B;IAEAvjB,KAAK,CAACmD,MAAN,GAAewG,MAAM,KAAK,KAA1B;WAEO3J,KAAK,CAACmD,MAAN,GAAepD,MAAf,GAAwB,KAA/B;GAzNO;EA2NXyjB,SAAS,EAAT,UAAU1jB,QAAV,EAAmCnR,CAAnC;QACUqR,KAAK,GAAGrR,CAAC,CAACqR,KAAhB;;QAEI,CAACA,KAAK,CAACmD,MAAX,EAAmB;;;;QAGbpD,MAAM,GAAG,KAAK4iB,IAAL,CAAU7iB,QAAV,EAAoBnR,CAApB,CAAf;QACM0C,YAAA;QAAE2xB,wBAAF;QAAaC,wBAAb;QACAjf,MAAM,GAAGwG,gBAAgB,CAAC1K,QAAD,EAAW,IAAX,EAAiB,MAAjB,EAAyBE,KAAzB,eAAqCrR;MAAG8c,KAAK,EAAEuX;MAAWtX,KAAK,EAAEuX;MAAjE,CAA/B;;QAEI,CAACljB,MAAL,EAAa;;;;QAGPwjB,UAAU;MACZzgB,OAAO,EAAEhD,QAAQ,CAACiD,KAAT,CAAeD;MACxBkB,MAAM;OACHjE,OAHP;;IAMAO,YAAY,CAACR,QAAD,EAAW,aAAX,EAA0ByjB,UAA1B,CAAZ;WACOA,UAAP;GA/OO;EAiPXzB,YAAY,EAAZ,UAAahiB,QAAb,EAAsCnR,CAAtC;QACYwU,iBAAA;QAAQnD,eAAR;;QAEJ,CAACA,KAAK,CAACmD,MAAX,EAAmB;;;;SAGdse,OAAL,CAAa3hB,QAAb,EAAuBnR,CAAvB;IACA6b,gBAAgB,CAAC1K,QAAD,EAAW,IAAX,EAAiB,SAAjB,EAA4BE,KAA5B,EAAmCrR,CAAnC,CAAhB;IACA2R,YAAY,CAACR,QAAD,EAAW,gBAAX,EAA6BD,UAAU,CAACC,QAAD,EAAWnR,CAAX,EAAc;MAC7DmU,OAAO,EAAEhD,QAAQ,CAACiD,KAAT,CAAeD,OADqC;MAE7DK,MAAM;KAFyC,CAAvC,CAAZ;WAKOA,MAAP;GA9PO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiSX4E,OAAO,EAAP,UAAQjI,QAAR;QACUE,KAAK,GAAG,EAAd;QACMrH,IAAI,GAAGmH,QAAQ,CAAC9H,OAAT,EAAb;QACIyT,KAAK,GAAG,CAAZ;QACIC,KAAK,GAAG,CAAZ;WAEO;MACHxD,SAAS,EAAE,KADR;MAEHG,YAAY,EAAZ,UAAa1Z,CAAb;eACW;UAAEqR,KAAK;SAAd;OAHD;MAKH+H,OAAO,EAAP,UAAQpZ,CAAR;YACQ,OAAOA,CAAX,EAAc;UACV8c,KAAK,GAAG9c,CAAC,CAAC6I,CAAF,GAAMmB,IAAI,CAAC9F,IAAnB;SADJ,MAEO,IAAI,YAAYlE,CAAhB,EAAmB;UACtB8c,KAAK,IAAI9c,CAAC,CAAC80B,MAAX;;;YAEA,OAAO90B,CAAX,EAAc;UACV+c,KAAK,GAAG/c,CAAC,CAAC8I,CAAF,GAAMkB,IAAI,CAAC7F,GAAnB;SADJ,MAEO,IAAI,YAAYnE,CAAhB,EAAmB;UACtB+c,KAAK,IAAI/c,CAAC,CAAC+0B,MAAX;;;eAGG;UAAE1jB,KAAK,OAAP;UAASyL,KAAK,OAAd;UAAgBC,KAAK;SAA5B;OAjBD;MAmBH1D,UAAU;eACC;UAAEhI,KAAK,OAAP;UAASmD,MAAM,EAAE;SAAxB;;KApBR;GAvSO;EA+TXpE,KAAK,EAAL,UAAMe,QAAN;IACIA,QAAQ,CAACzC,KAAT,CAAe8kB,QAAf,GAA0B,IAA1B;;CAhUR;;SCdgBwB,cACZtmB,OACA+lB,OAAiBhjB,YACjBwjB;0BAAA,EAAA;IAAAA,gBAAA;;;MAEMja,MAAM,GAAGtM,KAAK,CAAC+G,OAAN,CAAeyf,IAAf,CAAoBT,KAApB,EAA2BhjB,UAA3B,CAAf;sBAEQwjB,SAAS,GAAGnhB,eAAe,CAACpF,KAAD,EAAQsM,MAAR,CAAlB,GAAoCA;IACjDyY,WAAW,EAAE;IAFjB;;;AAMJ;;;wBAAA;cACY,GAAQ,CAAR;cACA,GAAQ,CAAR;eACA,GAAS,CAAT;eACA,GAAS,CAAT;eACA,GAAS,KAAT;eACA,GAAS,KAAT;cACA,GAAQ,EAAR;;;;;mBAED,GAAP,UAAiB0B,MAAjB,EAAmC1jB,UAAnC;SACS+C,MAAL,GAAc,KAAd;SACKoE,MAAL,GAAc,KAAd;SACKvH,KAAL,GAAa,EAAb;WAEO,KAAK6jB,IAAL,CAAUC,MAAV,EAAkB1jB,UAAlB,CAAP;GALG;;cAOA,GAAP,UAAY0jB,MAAZ,EAA8B1jB,UAA9B;WACW,KAAKyjB,IAAL,CAAU,CACbC,MAAM,CAAC,CAAD,CAAN,GAAY,KAAKC,KADJ,EAEbD,MAAM,CAAC,CAAD,CAAN,GAAY,KAAKE,KAFJ,CAAV,EAGJ5jB,UAHI,CAAP;GADG;;cAMA,GAAP,UAAYgjB,KAAZ,EAA6BhjB,UAA7B;QACQF,OAAJ;QACIC,OAAJ;;QACI,CAAC,KAAKoH,MAAV,EAAkB;WACTwc,KAAL,GAAaX,KAAK,CAAC,CAAD,CAAlB;WACKY,KAAL,GAAaZ,KAAK,CAAC,CAAD,CAAlB;WACKjU,MAAL,GAAciU,KAAK,CAAC,CAAD,CAAnB;WACKhU,MAAL,GAAcgU,KAAK,CAAC,CAAD,CAAnB;MAEAljB,OAAO,GAAGkjB,KAAK,CAAC,CAAD,CAAf;MACAjjB,OAAO,GAAGijB,KAAK,CAAC,CAAD,CAAf;WAEK7b,MAAL,GAAc,IAAd;KATJ,MAUO;MAEHrH,OAAO,GAAG,KAAK6jB,KAAL,GAAaX,KAAK,CAAC,CAAD,CAA5B;MACAjjB,OAAO,GAAG,KAAK6jB,KAAL,GAAaZ,KAAK,CAAC,CAAD,CAA5B;WACKjgB,MAAL,GAAc,IAAd;;;SAGC4gB,KAAL,GAAa7jB,OAAb;SACK8jB,KAAL,GAAa7jB,OAAb;WAEO;MACHD,OAAO,SADJ;MAEHC,OAAO,SAFJ;MAGHC,UAAU,YAHP;MAIH+C,MAAM,EAAE,KAAKA,MAJV;MAKHsI,KAAK,EAAEvL,OAAO,GAAG,KAAKiP,MALnB;MAMHzD,KAAK,EAAEvL,OAAO,GAAG,KAAKiP,MANnB;MAOHqU,MAAM,EAAEL,KAAK,CAAC,CAAD,CAPV;MAQHM,MAAM,EAAEN,KAAK,CAAC,CAAD,CARV;MASHpjB,KAAK,EAAE,KAAKA,KATT;MAUHoiB,WAAW,EAAE,IAVV;MAWHC,aAAa,EAAE;KAXnB;GAvBG;;sBAqCX;GA3DA;;ACAA;;;;;AAKA,SAAS4B,kBAAT,CACInkB,QADJ,EAEIE,KAFJ,EAEyBE,OAFzB,EAE0CC,OAF1C,EAE2D/P,MAF3D,EAE6EuI,IAF7E;MAIUnK,CAAC,GAAGsR,QAAQ,CAACzC,KAAT,CAAe9J,IAAf,GAAsB,CAAtB,GAA0B,CAApC;MACMga,UAAU,GAAG7V,gBAAgB,CAACoI,QAAQ,CAACzC,KAAT,CAAejI,UAAhB,EAA4BhF,MAA5B,EAAoC5B,CAApC,CAAnC;MACM01B,mBAAmB,GAAG3lB,IAAI,CAAC,CAAC5F,IAAI,CAAC9F,IAAN,EAAY8F,IAAI,CAAC7F,GAAjB,CAAD,EAAwBya,UAAxB,CAAhC;EAEAvN,KAAK,CAACkkB,mBAAN,GAA4BA,mBAA5B;EACAlkB,KAAK,CAACmkB,OAAN,GAAgBnpB,MAAM,CAACkpB,mBAAD,EAAsB,CAAChkB,OAAD,EAAUC,OAAV,CAAtB,CAAN,GAAkDjT,IAAI,CAACiO,EAAvD,GAA4D,GAA5E;EACA6E,KAAK,CAACokB,WAAN,GAAoBpkB,KAAK,CAACmkB,OAA1B;EACAnkB,KAAK,CAACqkB,QAAN,GAAiBrkB,KAAK,CAACmkB,OAAvB;EACAnkB,KAAK,CAACskB,IAAN,GAAa,CAAb;;;AAEJ,SAASC,YAAT,CACIzkB,QADJ,EAEI0kB,YAFJ,EAGIxkB,KAHJ,EAIIykB,UAJJ,EAKIvpB,SALJ,EAMIwpB,WANJ;MASQP,uBAAA;MAGEQ,WAAW,GAAGD,WAAW,GAAGD,UAAlC;MACMnmB,IAAI,GAAG2e,eAAe,CACxBnd,QADwB,EAExB0kB,YAFwB,EAGxBxkB,KAAK,CAAC5P,MAHkB,EAIxBq0B,UAJwB,CAA5B;EAMAzkB,KAAK,CAACmkB,OAAN,GAAgB7lB,IAAhB;MAEM8kB,KAAK,GAAGloB,SAAS,IAAIoD,IAAI,GAAG6lB,OAAX,CAAvB;SAEO,CAACf,KAAD,EAAQ9kB,IAAR,EAAcqmB,WAAd,CAAP;;;AAEJ,SAASC,MAAT,CACI9kB,QADJ,EAEI0kB,YAFJ,EAGIxkB,KAHJ,EAII6iB,GAJJ,EAKI3nB,SALJ,EAMIwpB,WANJ,EAOIG,cAPJ,EAQInV,MARJ;MAWQyU,uBAAA;MACAC,+BADA;MAEAC,yBAFA;MAGAS,qBAHA;;MAMAX,OAAO,GAAGtB,GAAV,IAAiBsB,OAAO,GAAG,GAA3B,IAAkCtB,GAAG,GAAG,EAA5C,EAAgD;;MAE1C7iB,KAAK,CAACskB,IAAR;GAFJ,MAGO,IAAIH,OAAO,GAAGtB,GAAV,IAAiBsB,OAAO,GAAG,EAA3B,IAAiCtB,GAAG,GAAG,GAA3C,EAAgD;;MAEjD7iB,KAAK,CAACskB,IAAR;;;MAEEA,IAAI,GAAGtkB,KAAK,CAACskB,IAAnB;MACMS,mBAAmB,GAAGD,QAAQ,GAAG,GAAX,GAAiBV,WAAjB,GAA+BC,QAA/B,GAA0CK,WAAtE;MACIC,WAAW,GAAGL,IAAI,GAAG,GAAP,GAAazB,GAAb,GAAmBwB,QAAnB,GAA8BK,WAAhD;EAEA1kB,KAAK,CAACmkB,OAAN,GAAgBQ,WAAW,GAAGL,IAAI,GAAG,GAArB,GAA2BD,QAA3B,GAAsCK,WAAtD;EAEAC,WAAW,GAAGhmB,QAAQ,CAACgmB,WAAD,EAAcE,cAAd,CAAtB;MACIvmB,IAAI,GAAGpD,SAAS,IAAIypB,WAAW,GAAGD,WAAlB,CAApB;;MACIhV,MAAJ,EAAY;IACRpR,IAAI,GAAG2e,eAAe,CAACnd,QAAD,EAAW0kB,YAAX,EAAyBxkB,KAAK,CAAC5P,MAA/B,EAAuCkO,IAAvC,CAAtB;IACAqmB,WAAW,GAAGrmB,IAAI,GAAGpD,SAAP,GAAmBwpB,WAAjC;;;EAEJ1kB,KAAK,CAACokB,WAAN,GAAoBO,WAAW,GAAGL,IAAI,GAAG,GAArB,GAA2BD,QAA3B,GAAsCK,WAA1D;MAEMtB,KAAK,GAAGloB,SAAS,IAAIypB,WAAW,GAAGI,mBAAlB,CAAvB;SAEO,CAAC3B,KAAD,EAAQ9kB,IAAR,EAAcqmB,WAAd,CAAP;;;AAEJ,SAASK,aAAT,CACIllB,QADJ,EAEI0kB,YAFJ,EAGIxkB,KAHJ,EAII9E,SAJJ,EAKIgF,OALJ,EAKqBC,OALrB,EAMIukB,WANJ,EAOIG,cAPJ;SASWD,MAAM,CACT9kB,QADS,EAET0kB,YAFS,EAGTxkB,KAHS,EAIThF,MAAM,CAACgF,KAAK,CAACkkB,mBAAP,EAA4B,CAAChkB,OAAD,EAAUC,OAAV,CAA5B,CAAN,GAAwDjT,IAAI,CAACiO,EAA7D,GAAkE,GAJzD,EAKTD,SALS,EAMTwpB,WANS,EAOTG,cAPS,EAQT,IARS,CAAb;;;AAYJ,SAAgBI,aACZC,kBACAh2B,MACAC,MACA2I,MACAC;MAEImtB,gBAAgB,KAAK,MAAzB,EAAiC;WACtB,CAACptB,IAAD,EAAO5I,IAAP,CAAP;GADJ,MAEO,IAAIg2B,gBAAgB,KAAK,OAAzB,EAAkC;WAC9B,CAAC/1B,IAAD,EAAO4I,IAAP,CAAP;GADG,MAEA,IAAImtB,gBAAgB,KAAK,QAAzB,EAAmC;WAC/B,CAACntB,IAAD,EAAOD,IAAP,CAAP;;;SAEG,CAAC5I,IAAD,EAAOC,IAAP,CAAP;;AAGJ,SAAgBuyB,qBAAqB/yB;MAC7BA,CAAC,CAAC+U,SAAN,EAAiB;WACN,IAAP;;;SAEGmK,QAAQ,CAAClf,CAAC,CAACyR,UAAF,CAAavO,MAAd,EAAsBzC,MAAM,CAAC,UAAD,CAA5B,CAAf;;AAGJ,gBAAe;EACX3B,IAAI,EAAE,WADK;EAEXic,QAAQ,EAAE,IAFC;EAGX3G,KAAK,EAAE;IACHoiB,SAAS,EAAE7b,OADR;IAEH4b,gBAAgB,EAAEE,MAFf;IAGHP,cAAc,EAAEtb;GANT;EAQXN,MAAM,EAAN,UAAOnJ,QAAP,EAAkDiF,KAAlD;QACU1T,mBAAA;QACF8zB,wBADE;QAEFD,sCAFE;;QAIF,CAACC,SAAL,EAAgB;aACL,IAAP;;;QAEEjxB,mBAAA;QAAEhF,cAAF;QAAQC,cAAR;QAAc2I,cAAd;QAAoBC,cAApB;QAA0BmD,wBAA1B;QACAjD,KAAK,GAAGgtB,YAAY,CAACC,gBAAD,EAAoBh2B,IAApB,EAA0BC,IAA1B,EAAgC2I,IAAhC,EAAsCC,IAAtC,CAA1B;QACMstB,WAAW,GAAGnoB,cAAc,CAACjF,KAAD,EAAQiD,SAAR,CAAlC;WAGI6J,mBAAA,MAAA;MAAKC,GAAG,EAAC;MAAWC,SAAS,EAAE7V,MAAM,CAAC,oBAAD;MAAwBkC,KAAK,EAAE;;QAEhE3B,SAAS,EAAE,+BAA6B,CAACsI,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAcA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAf,IAA8B,CAA3D,SAAA,GAAmE,CAACA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,IAAcA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAf,IAA8B,CAAjG,gBAAA,GAAgHotB,WAAhH;;KAFf,EAIItgB,mBAAA,MAAA;MAAKE,SAAS,EAAE7V,MAAM,CAAC,SAAD,EAAY,UAAZ;KAAtB,CAJJ,CADJ;GApBO;EA6BXsyB,oBAAoB,sBA7BT;EA8BX9Y,gBAAgB,EAAhB,UACI9I,QADJ,EAEInR,CAFJ;QAIQqR,eAAA;QACAE,mBADA;QACSC,mBADT;QAEAyJ,6BAFA;QAEcqB,yBAFd;QAE0BnB,uBAF1B;QAGApG,uBAHA;QAKErS,mBAAA;QACFQ,kBADE;QACMgB,cADN;QACYC,YADZ;QACiB1C,kBADjB;QACyBoN,8BADzB;QAEFtC,wBAFE;QAESoC,oCAFT;QAE0BC,oCAF1B;;QAKF,CAACmG,SAAD,IAAc,CAAC7R,MAAnB,EAA2B;aAChB,KAAP;;;QAGE8G,IAAI,GAAGmH,QAAQ,CAAC9H,OAAT,EAAb;IACAgI,KAAK,CAACrH,IAAN,GAAaA,IAAb;IACAqH,KAAK,CAACrQ,SAAN,GAAkB4N,eAAlB;IACAyC,KAAK,CAACnN,IAAN,GAAaA,IAAb;IACAmN,KAAK,CAAClN,GAAN,GAAYA,GAAZ;;QAEI4Q,SAAS,IAAIoG,SAAb,IAA0BmB,UAA9B,EAA0C;UAChCqa,cAAc,GAAG1b,YAAY,IAAI,CAAvC;MAEA5J,KAAK,CAACulB,UAAN,GAAmB;QACfn1B,MAAM,EAAEuI,IAAI,CAAC6E,YADE;QAEf2mB,OAAO,EAAEmB,cAFM;QAGfjB,QAAQ,EAAEiB,cAHK;QAIflB,WAAW,EAAEkB,cAJE;QAIchB,IAAI,EAAE;OAJvC;MAMAtkB,KAAK,CAACwlB,SAAN,GAAkB;QACdp1B,MAAM,EAAEuI,IAAI,CAACvI,MADC;QAEd+zB,OAAO,EAAEmB,cAFK;QAEWjB,QAAQ,EAAEiB,cAFrB;QAGdlB,WAAW,EAAEkB,cAHC;QAGehB,IAAI,EAAE;OAHvC;KATJ,MAcO;MACHtkB,KAAK,CAACulB,UAAN,GAAmB;QAAEn1B,MAAM,EAAEuI,IAAI,CAAC6E;OAAlC;MACAwC,KAAK,CAACwlB,SAAN,GAAkB;QAAEp1B,MAAM,EAAEuI,IAAI,CAACvI;OAAjC;UAEMq1B,WAAW,GAAG5nB,aAAa,CAACiC,QAAQ,CAACiG,UAAT,CAAoBC,UAApB,EAAD,CAAjC;MAEAie,kBAAkB,CAACnkB,QAAD,EAAWE,KAAK,CAACulB,UAAjB,EAA6BrlB,OAA7B,EAAsCC,OAAtC,EAA+C3C,YAA/C,EAA6DioB,WAA7D,CAAlB;MACAxB,kBAAkB,CAACnkB,QAAD,EAAWE,KAAK,CAACwlB,SAAjB,EAA4BtlB,OAA5B,EAAqCC,OAArC,EAA8C/P,MAA9C,EAAsDq1B,WAAtD,CAAlB;;;IAGJzlB,KAAK,CAAC9E,SAAN,GAAkBA,SAAlB;IACA8E,KAAK,CAAC1C,eAAN,GAAwBA,eAAxB;IACA0C,KAAK,CAAC0kB,WAAN,GAAoB,CAApB;IACA1kB,KAAK,CAACA,KAAN,GAAc,EAAd;QAEMD,MAAM,GAAGF,UAAU,CAAgBC,QAAhB,EAA0BnR,CAA1B,EAA6B;MAClD8zB,GAAG,EAAE,UAACiD,UAAD;QACD1lB,KAAK,CAAC0kB,WAAN,GAAoBgB,UAApB;;KAFiB,CAAzB;QAKM/b,MAAM,GAAGrJ,YAAY,CAACR,QAAD,EAAW,eAAX,EAA4BC,MAA5B,CAA3B;IACAC,KAAK,CAAC2lB,QAAN,GAAiBhc,MAAM,KAAK,KAA5B;IACA7J,QAAQ,CAACzC,KAAT,CAAe0M,cAAf,GAAgC,EAAhC;WAEO/J,KAAK,CAAC2lB,QAAN,GAAiB5lB,MAAjB,GAA0B,KAAjC;GA5FO;EA8FX6lB,WAAW,EAAX,UACI9lB,QADJ,EAEInR,CAFJ;;;QAIYqR,eAAA;QAAOE,mBAAP;QAAgBC,mBAAhB;QAAyByJ,6BAAzB;QAAuCqB,yBAAvC;QAAmDnB,uBAAnD;QAEJ5O,2BAAA;QACAoC,uCADA;QAEAioB,6BAFA;QAGAC,2BAHA;QAIAG,yBAJA;QAKAjB,+BALA;QAMA/rB,iBANA;;QASA,CAACgtB,QAAL,EAAe;;;;QAGTE,mBAAA;QACFC,sBADE;QACFjB,uCADE;QAEF5e,kCAFE;QAKFmd,KAAJ;QACI9kB,IAAJ;QACI6X,MAAJ;QACIkN,WAAJ;QACIF,UAAJ;QACI4C,YAAJ;;QAEI,gBAAgBp3B,CAApB,EAAuB;UACb81B,UAAU,GAAG91B,CAAC,CAAC81B,UAArB;MAEApzB,gFAAA,EAAC+xB,aAAD,EAAQ9kB,YAAR,EAAc6X,cAAd;MAEAjiB,iFAAA,EAACmvB,mBAAD,EAAcF,kBAAd,EAA0B4C,oBAA1B;KALJ,MAOO,IAAIjc,SAAS,IAAImB,UAAjB,EAA6B;MAChClS,4FAAA,EAACqqB,aAAD,EAAQ9kB,YAAR,EAAc6X,cAAd;MAEAvc,6FAAA,EAACypB,mBAAD,EAAcF,kBAAd,EAA0B4C,oBAA1B;KAHG,MAKA;MACHvrB,uGAAA,EAAC4oB,aAAD,EAAQ9kB,YAAR,EAAc6X,cAAd;MAEAxb,8GAAA,EAAC0oB,mBAAD,EAAcF,kBAAd,EAA0B4C,oBAA1B;;;QAKA,CAAC3C,KAAD,IAAU,CAACC,WAAX,IAA0B,CAACpd,cAA/B,EAA+C;;;;QAGzClG,MAAM,GAAGF,UAAU,CAAWC,QAAX,EAAqBnR,CAArB,EAAwB;MAC7Cy0B,KAAK,OADwC;MAE7C9kB,IAAI,MAFyC;MAG7C6X,MAAM,QAHuC;MAI7CgN,UAAU,YAJmC;MAK7CE,WAAW,aALkC;MAM7C0C,YAAY,cANiC;MAO7Cp2B,SAAS,EAAKqQ,KAAK,CAACrQ,SAAN,aAAA,GAA0B2O,IAA1B,SAP+B;MAQ7CsE,OAAO,EAAE,CAAC,CAACkH;KARU,CAAzB;IAUAxJ,YAAY,CAACR,QAAD,EAAW,UAAX,EAAuBC,MAAvB,CAAZ;WAEOA,MAAP;GA/JO;EAiKX6hB,cAAc,EAAd,UAAe9hB,QAAf,EAA0DnR,CAA1D;QACYqR,eAAA;QAAOmD,iBAAP;;QAEJ,CAACnD,KAAK,CAAC2lB,QAAX,EAAqB;aACV,KAAP;;;IAEJ3lB,KAAK,CAAC2lB,QAAN,GAAiB,KAAjB;IAEArlB,YAAY,CAACR,QAAD,EAAW,aAAX,EAA0BD,UAAU,CAAcC,QAAd,EAAwBnR,CAAxB,EAA2B;MACvEwU,MAAM;KADsC,CAApC,CAAZ;WAGOA,MAAP;GA5KO;EA8KX6iB,yBAAyB,EAAEtE,oBA9KhB;EA+KXK,qBAAqB,EAArB,UAAsBjiB,QAAtB,EAA+CnR,CAA/C;QACYqR,eAAA;QAAOI,yBAAP;QACF/O,mBAAA;QACFmU,oBADE;QAEFC,kBAFE;QAGFwgB,oCAHE;QAMAlmB,MAAM,GAAG,KAAK6I,gBAAL,CAAsB9I,QAAtB,EAAgCnR,CAAhC,CAAf;;QAEI,CAACoR,MAAL,EAAa;aACF,KAAP;;;IAGJA,MAAM,CAAC0iB,GAAP,CAAW3iB,QAAQ,CAACnE,QAApB;QAEMqI,MAAM,GAAGwG,gBAAgB,CAC3B1K,QAD2B,EAE3B,IAF2B,EAG3B,kBAH2B,EAI3BE,KAJ2B,eAKtBrR;MAAGib,YAAY,EAAE;MALK,EAM3B,UAACiB,KAAD,EAAQC,UAAR,EAAoBob,WAApB;UACU70B,gBAAA;UAAEwB,cAAF;UAAQC,YAAR;UAAa0K,8BAAb;UACA2oB,WAAW,GAAG5nB,IAAI,CACpBjF,KAAK,CAAC,CAACzG,IAAD,EAAOC,GAAP,CAAD,EAAc,CAAC0S,UAAD,EAAaC,SAAb,CAAd,CADe,EAEpBnM,KAAK,CAACkE,YAAD,EAAeyoB,kBAAf,CAFe,CAAxB;MAKAnb,UAAU,CAACsb,UAAX,GAAwBD,WAAxB;MACAD,WAAW,CAACxd,SAAZ,GAAwB2d,SAAS,CAAC3d,SAAV,CACpBmC,KADoB,EAEpB,IAAIyb,aAAJ,GAAoB5d,SAApB,CAA8Byd,WAA9B,EAA2C/lB,UAA3C,CAFoB,CAAxB;KAduB,CAA/B;;QAqBMmjB,UAAU,gBACTxjB;MACH+C,OAAO,EAAEhD,QAAQ,CAACiD,KAAT,CAAeD;MACxBkB,MAAM;MAHV;;QAKM2F,MAAM,GAAGrJ,YAAY,CAACR,QAAD,EAAW,oBAAX,EAAiCyjB,UAAjC,CAA3B;IAEAvjB,KAAK,CAAC2lB,QAAN,GAAiBhc,MAAM,KAAK,KAA5B;WAEO3J,KAAK,CAAC2lB,QAAN,GAAiB5lB,MAAjB,GAA0B,KAAjC;GA7NO;EA+NXwmB,gBAAgB,EAAhB,UAAiBzmB,QAAjB,EAA0CnR,CAA1C;QACYyR,yBAAA;QAAYJ,eAAZ;;QAEJ,CAACA,KAAK,CAAC2lB,QAAX,EAAqB;;;;QAGf5lB,MAAM,GAAG,KAAK6lB,WAAL,CAAiB9lB,QAAjB,EAA2BnR,CAA3B,CAAf;;QAEI,CAACoR,MAAL,EAAa;;;;QAGP6J,YAAY,GAAG7J,MAAM,CAACojB,UAA5B;QACMN,GAAG,GAAG9iB,MAAM,CAACsjB,WAAnB;QACM5nB,GAAG,GAAGonB,GAAG,GAAG,GAAN,GAAY31B,IAAI,CAACiO,EAA7B;QAEM6I,MAAM,GAAGwG,gBAAgB,CAC3B1K,QAD2B,EAE3B,IAF2B,EAG3B,aAH2B,EAI3BE,KAJ2B,eAKtBrR;MAAGib,YAAY;MALO,EAM3B,UAACiB,KAAD,EAAQC,UAAR,EAAoBnB,MAApB,EAA4BvY,CAA5B;UACUC,0BAAA;UAAC0yB,aAAD;UAAQC,aAAR;;UACA9vB,gCAAA;UAACgM,eAAD;UAAUC,eAAV;;UACAijB,KAAK,GAAG,CAACljB,OAAO,GAAG6jB,KAAX,EAAkB5jB,OAAO,GAAG6jB,KAA5B,CAAd;MAEAlZ,UAAU,CAACsb,UAAX,GAAwB,CAAClmB,OAAD,EAAUC,OAAV,CAAxB;UAEMqmB,UAAU,GAAGH,SAAS,CAAC1D,IAAV,CACf9X,KADe,EAEf8Y,aAAa,CAAC9Y,KAAK,CAACxN,KAAP,EAAc+lB,KAAd,EAAqBhjB,UAArB,EAAiC,KAAjC,CAFE,CAAnB;MAIAuJ,MAAM,CAACgZ,IAAP,GAAc6D,UAAd;KAjBuB,CAA/B;IAoBA1mB,QAAQ,CAACnE,QAAT,GAAoBoE,MAAM,CAACgmB,YAA3B;;QAEMxC,UAAU;MACZzgB,OAAO,EAAEhD,QAAQ,CAACiD,KAAT,CAAeD;MACxBkB,MAAM;MACNye,GAAG,EAAE,UAAC9mB,QAAD;QACDmE,QAAQ,CAACnE,QAAT,GAAoBA,QAApB;;OAEDoE,OANP;;IASAO,YAAY,CAACR,QAAD,EAAW,eAAX,EAA4ByjB,UAA5B,CAAZ;WACOA,UAAP;GA9QO;EAgRXvB,mBAAmB,EAAnB,UAAoBliB,QAApB,EAA6CnR,CAA7C;QACYwU,iBAAA;QAAQnD,eAAR;;QAEJ,CAACA,KAAK,CAAC2lB,QAAX,EAAqB;;;;SAIhB/D,cAAL,CAAoB9hB,QAApB,EAA8BnR,CAA9B;IACA6b,gBAAgB,CAAC1K,QAAD,EAAW,IAAX,EAAiB,gBAAjB,EAAmCE,KAAnC,EAA0CrR,CAA1C,CAAhB;QAEM40B,UAAU,GAAqB1jB,UAAU,CAACC,QAAD,EAAWnR,CAAX,EAAc;MACzDmU,OAAO,EAAEhD,QAAQ,CAACiD,KAAT,CAAeD,OADiC;MAEzDK,MAAM;KAFqC,CAA/C;IAKA7C,YAAY,CAACR,QAAD,EAAW,kBAAX,EAA+ByjB,UAA/B,CAAZ;WACOpgB,MAAP;GAhSO;;;;;;;;;;;;;;;;;;;;;;;EAwTX4E,OAAO,EAAP;QACU/H,KAAK,GAAG,EAAd;QACIymB,UAAU,GAAG,CAAjB;WAEO;MACHve,SAAS,EAAE,IADR;MAEHG,YAAY,EAAZ,UAAa1Z,CAAb;eACW;UAAEqR,KAAK;SAAd;OAHD;MAKH+H,OAAO,EAAP,UAAQpZ,CAAR;QACI83B,UAAU,IAAI93B,CAAC,CAAC+3B,WAAhB;eAEO;UAAE1mB,KAAK,OAAP;UAASykB,UAAU,EAAEgC;SAA5B;OARD;MAUHze,UAAU;eACC;UAAEhI,KAAK,OAAP;UAASmD,MAAM,EAAE;SAAxB;;KAXR;;CA5TR;;SC5IgBwjB,eACZ7mB,UACA8mB,mBACA7hB;MAEM1T,mBAAA;MACFnC,cADE;MACIC,cADJ;MACU2I,cADV;MACgBC,cADhB;MAEF4D,sBAFE;MAKFzH,oCAAA;MAAAymB,mDAAA;MAEE1iB,KAAK,GAAG,CAAC/I,IAAD,EAAOC,IAAP,EAAa2I,IAAb,EAAmBC,IAAnB,CAAd;MAEM8uB,YAAY,GAAqB,EAAvC;EACAlM,UAAU,CAACllB,OAAX,CAAmB,UAAAyF,SAAA;IACf2rB,YAAY,CAAC3rB,SAAD,CAAZ,GAA0B,IAA1B;GADJ;SAGOyf,UAAU,CAAC5sB,GAAX,CAAe,UAAAmN,SAAA;QACZgR,OAAO,GAAG3d,iBAAiB,CAAC2M,SAAD,CAAjC;;QAEI,CAACgR,OAAD,IAAY,CAAC2a,YAAY,CAAC3rB,SAAD,CAA7B,EAA0C;aAC/B,IAAP;;;QAEE4rB,iBAAiB,GAAG,CAACnoB,QAAQ,CAAChD,QAAQ,GAAGzO,IAAI,CAACiO,EAAhB,GAAqB,GAAtB,EAA2B,EAA3B,CAAR,GAAyCnM,mBAAmB,CAACkM,SAAD,CAA7D,IAA4E,GAAtG;WAGI6J,mBAAA,MAAA;MAAKE,SAAS,EAAE7V,MAAM,CAAC,SAAD,EAAY,WAAZ,EAAyB8L,SAAzB;uBACH4rB;wBAAmC5rB;MAAW8J,GAAG,EAAE,eAAa9J;MAC/E5J,KAAK,EAAEoK,mBAAmB,MAAnB,OAAA,GAAoBC,iBAAauQ,OAAO,CAACne,GAAR,CAAY,UAAAiU,KAAA;eAAS/J,KAAK,CAAC+J,KAAD,CAAL;OAArB,EAAjC;KAFX,CADJ;GARG,CAAP;;AAeJ,SAAgB+kB,oBACZjnB,UACAiF;SAEO4hB,cAAc,CAAC7mB,QAAD,EAAW,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,GAAzB,EAA8B,GAA9B,EAAmC,GAAnC,EAAwC,GAAxC,CAAX,EAAyDiF,KAAzD,CAArB;;AAEJ,SAAgBiiB,yBACZlnB,UACAiF;SAEO4hB,cAAc,CAAC7mB,QAAD,EAAW,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAX,EAAqCiF,KAArC,CAArB;;;AChBJ;;;;;AAKA,gBAAe;EACXtX,IAAI,EAAE,WADK;EAEXwT,SAAS,EAAE,MAFA;EAGX8C,UAAU,EAAE,IAHD;EAIX2F,QAAQ,EAAE,IAJC;EAKX3G,KAAK,EAAE;IACHkkB,SAAS,EAAE3d,OADR;IAEH4d,cAAc,EAAE3d,MAFb;IAGH4d,gBAAgB,EAAEtG,KAHf;IAIHpT,aAAa,EAAEoT,KAJZ;IAKHlP,SAAS,EAAErI;GAVJ;EAYXL,MAAM,EAAN,UAAOnJ,QAAP,EAA2DiF,KAA3D;QACU1T,mBAAA;QAAE41B,wBAAF;QAAa9hB,cAAb;;QACF8hB,SAAJ,EAAe;UACP9hB,IAAJ,EAAU;eACC6hB,wBAAwB,CAAClnB,QAAD,EAAWiF,KAAX,CAA/B;;;aAEGgiB,mBAAmB,CAACjnB,QAAD,EAAWiF,KAAX,CAA1B;;GAlBG;EAqBX2c,oBAAoB,EAAE/T,kBArBX;EAsBX/E,gBAAgB,EAAhB,UACI9I,QADJ,EAEInR,CAFJ;;;QAKQyR,yBAAA;QACA0J,uBADA;QAEA8D,mCAFA;QAGA5N,eAHA;QAME9E,SAAS,GAAG0S,eAAe,KAAK9D,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAH,GAAY7L,YAAY,CAACmC,UAAU,CAACvO,MAAZ,CAAtC,CAAjC;QAEMqC,mBAAA;QAAErC,kBAAF;QAAUqE,gBAAV;QAAiBE,kBAAjB;;QAEF,CAAC8E,SAAD,IAAc,CAACrJ,MAAnB,EAA2B;aAChB,KAAP;;;KAEHiY,SAAD,IAAcoB,YAAY,CAACpL,QAAD,EAAW;MAAEE,KAAK;KAAlB,CAA1B;IAEAA,KAAK,CAACA,KAAN,GAAc,EAAd;IACAA,KAAK,CAAC9E,SAAN,GAAkBA,SAAlB;IACA8E,KAAK,CAAConB,gBAAN,GAAyBlxB,KAAzB;IACA8J,KAAK,CAACqnB,iBAAN,GAA0BjxB,MAA1B;IACA4J,KAAK,CAAC9G,SAAN,GAAkB,CAAlB;IACA8G,KAAK,CAAC7G,UAAN,GAAmB,CAAnB;IACA9H,uBAAA,EACI2O,gBAAA,QADJ,EAEIA,iBAAA,QAFJ;IAIAA,KAAK,CAACzO,eAAN,GAAwBuO,QAAQ,CAACiD,KAAT,CAAexR,eAAvC;IACAyO,KAAK,CAACqb,cAAN,GAAuB7N,iBAAiB,CAAC1N,QAAD,EAAW5E,SAAX,CAAxC;IACA8E,KAAK,CAACsN,aAAN,GAAsBI,wBAAwB,CAAC5N,QAAD,EAAWE,KAAK,CAACqb,cAAjB,CAA9C;IACArb,KAAK,CAACsnB,qBAAN,GAA8B5Z,wBAAwB,CAAC5N,QAAD,EAAW5E,SAAX,CAAtD;QAEM6E,MAAM,GAAGF,UAAU,CAAgBC,QAAhB,EAA0BnR,CAA1B,EAA6B;MAClDuM,SAAS,WADyC;MAElDunB,GAAG,EAAE,UAACpxB,EAAD;YAAEk2B;YAAYC;QACfxnB,KAAK,CAACunB,UAAN,GAAmBA,UAAnB;QACAvnB,KAAK,CAACwnB,WAAN,GAAoBA,WAApB;OAJ8C;MAMlDC,SAAS,EAAE,UAACr3B,MAAD;QACP4P,KAAK,CAACzO,eAAN,GAAwBnB,MAAxB;OAP8C;MASlDsY,SAAS,EAAE2d,SAAS,CAAC3d,SAAV,CACP5I,QADO,EAEP,IAAIwmB,aAAJ,GAAoB5d,SAApB,CAA8B,CAAC,CAAD,EAAI,CAAJ,CAA9B,EAAsCtI,UAAtC,CAFO;KATU,CAAzB;QAcMuJ,MAAM,GAAGrJ,YAAY,CAACR,QAAD,EAAW,eAAX,EAA4BC,MAA5B,CAA3B;;QACI4J,MAAM,KAAK,KAAf,EAAsB;MAClB3J,KAAK,CAAC0nB,QAAN,GAAiB,IAAjB;MACA5nB,QAAQ,CAACzC,KAAT,CAAe0M,cAAf,GAAgC;QAC5B7O,SAAS;OADb;;;WAIG8E,KAAK,CAAC0nB,QAAN,GAAiB3nB,MAAjB,GAA0B,KAAjC;GA9EO;EAgFX6lB,WAAW,EAAX,UACI9lB,QADJ,EAEInR,CAFJ;QAKQqR,eAAA;QACAyL,eADA;QACOC,eADP;QAEAT,yBAFA;QAEYnB,uBAFZ;QAGAK,iCAHA;QAGgBwd,2BAHhB;QAG6BvnB,yBAH7B;QAIAwnB,mCAJA;QAKA3a,yBALA;QAMAwX,yBANA;QASAvpB,2BAAA;QACAwsB,yBADA;QAEAn2B,uCAFA;;QAKA,CAACm2B,QAAL,EAAe;;;;QAIXH,6BAAA;QACAC,+BADA;QAEAJ,yCAFA;QAGAC,2CAHA;QAIAnuB,2BAJA;QAKAC,6BALA;QAOE9H,mBAAA;QACF6C,sBADE;QACFgzB,uCADE;QAEFjhB,kCAFE;QAIF4hB,aAAa,GAAG3sB,SAApB;;QAEI,CAACA,SAAS,CAAC,CAAD,CAAV,IAAiB,CAACA,SAAS,CAAC,CAAD,CAA/B,EAAoC;MAChC2sB,aAAa,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAhB;;;QAEElW,SAAS,GAAG7R,QAAQ,CAACiD,KAAT,CAAe4O,SAAf,IAA4BiW,eAA9C;QACMzmB,OAAO,GAAG0mB,aAAa,CAAC,CAAD,CAAb,IAAoB,CAACA,aAAa,CAAC,CAAD,CAAlD;QACMzmB,KAAK,GAAGD,OAAO,GAAGkmB,iBAAiB,GAAGD,gBAAvB,GAA0CA,gBAAgB,GAAGC,iBAAlF;QACMhM,cAAc,GAAG1J,SAAS,IAAI1G,UAAb,GAA0B/P,SAA1B,GAAsC8E,KAAK,CAACqb,cAAnE;QACM/N,aAAa,GAAGL,UAAU,KAAK0E,SAAS,GAAG3R,KAAK,CAACsnB,qBAAT,GAAiCtnB,KAAK,CAACsN,aAArD,CAAhC;QACIwa,SAAS,GAAW,CAAxB;QACIC,UAAU,GAAW,CAAzB;;QAEItD,UAAJ,EAAgB;MACZqD,SAAS,GAAGrD,UAAU,CAAC,CAAD,CAAtB;MACAsD,UAAU,GAAGtD,UAAU,CAAC,CAAD,CAAvB;KAFJ,MAGO,IAAIkD,WAAJ,EAAiB;MACpBG,SAAS,GAAG,CAACH,WAAW,CAAC,CAAD,CAAX,GAAiB,CAAlB,IAAuBP,gBAAnC;MACAW,UAAU,GAAG,CAACJ,WAAW,CAAC,CAAD,CAAX,GAAiB,CAAlB,IAAuBN,iBAApC;KAFG,MAIA,IAAIvd,SAAJ,EAAe;UACdK,cAAJ,EAAoB;QAChB2d,SAAS,GAAG3d,cAAZ;QACA4d,UAAU,GAAG5d,cAAc,GAAGkd,iBAAjB,GAAqCD,gBAAlD;;KAHD,MAKA;UACG9oB,IAAI,GAAGiN,WAAW,CAAC;QAAEvL,KAAK,OAAP;QAASyL,KAAK,OAAd;QAAgBC,KAAK;OAAtB,CAAxB;MAEAoc,SAAS,GAAGD,aAAa,CAAC,CAAD,CAAb,GAAmBvpB,IAAI,CAAC,CAAD,CAAnC;MACAypB,UAAU,GAAGF,aAAa,CAAC,CAAD,CAAb,GAAmBvpB,IAAI,CAAC,CAAD,CAApC;;UAEIqT,SAAS,IAAIyV,gBAAb,IAAiCC,iBAArC,EAAwD;YAC9C5rB,GAAG,GAAGT,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAASsD,IAAT,CAAlB;YACM0pB,WAAW,GAAGhtB,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS6sB,aAAT,CAA1B;YACMI,QAAQ,GAAGjtB,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAACosB,gBAAD,EAAmBC,iBAAnB,CAAT,CAAvB;YACMvb,IAAI,GAAG1Q,WAAW,CAAC,CAAC0sB,SAAD,EAAYC,UAAZ,CAAD,CAAxB;YACMG,QAAQ,GAAGh7B,IAAI,CAAC41B,GAAL,CAASrnB,GAAG,GAAGusB,WAAf,IAA8Blc,IAA/C;;YAEI,CAAC+b,aAAa,CAAC,CAAD,CAAlB,EAAuB;;UAEnBE,UAAU,GAAGG,QAAb;UACAJ,SAAS,GAAGzmB,iBAAiB,CAAC0mB,UAAD,EAAa5mB,OAAb,EAAsBC,KAAtB,CAA7B;SAHJ,MAIO,IAAI,CAACymB,aAAa,CAAC,CAAD,CAAlB,EAAuB;;UAE1BC,SAAS,GAAGI,QAAZ;UACAH,UAAU,GAAG7mB,kBAAkB,CAAC4mB,SAAD,EAAY3mB,OAAZ,EAAqBC,KAArB,CAA/B;SAHG,MAIA;;UAEH0mB,SAAS,GAAG56B,IAAI,CAAC41B,GAAL,CAASmF,QAAT,IAAqBC,QAAjC;UACAH,UAAU,GAAG76B,IAAI,CAAC61B,GAAL,CAASkF,QAAT,IAAqBC,QAAlC;;;;;QAIR1L,SAAS,GAAGqL,aAAa,CAAC,CAAD,CAAb,IAAoBlW,SAApB,GACVzkB,IAAI,CAAC8J,GAAL,CAASowB,gBAAgB,GAAGU,SAA5B,EAAuC55B,QAAvC,CADU,GACyCk5B,gBADzD;QAEI3K,UAAU,GAAGoL,aAAa,CAAC,CAAD,CAAb,IAAoBlW,SAApB,GACXzkB,IAAI,CAAC8J,GAAL,CAASqwB,iBAAiB,GAAGU,UAA7B,EAAyC75B,QAAzC,CADW,GAC0Cm5B,iBAD3D;;QAGI1V,SAAS,IAAIyV,gBAAb,IAAiCC,iBAArC,EAAwD;;MAEpD5K,UAAU,GAAGD,SAAS,GAAG6K,iBAAZ,GAAgCD,gBAA7C;;;QAEAe,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAf;;QAEI,CAACre,SAAL,EAAgB;MACZqe,QAAQ,GAAGjL,aAAa,CACpBpd,QADoB,EACV0c,SADU,EAEpBC,UAFoB,EAERvhB,SAFQ,EAGpB8E,KAAK,CAACsnB,qBAHc,EAIpB7C,UAJoB,EAKpBzkB,KALoB,CAAxB;;;QAQAykB,UAAJ,EAAgB;OACXA,UAAU,CAAC,CAAD,CAAX,KAAmB0D,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAjC;OACC1D,UAAU,CAAC,CAAD,CAAX,KAAmB0D,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAjC;;;QAEAxW,SAAJ,EAAe;UACPkW,aAAa,CAAC,CAAD,CAAb,IAAoBA,aAAa,CAAC,CAAD,CAAjC,IAAwCM,QAAQ,CAAC,CAAD,CAAhD,IAAuDA,QAAQ,CAAC,CAAD,CAAnE,EAAwE;YAChEj7B,IAAI,CAAC+M,GAAL,CAASkuB,QAAQ,CAAC,CAAD,CAAjB,IAAwBj7B,IAAI,CAAC+M,GAAL,CAASkuB,QAAQ,CAAC,CAAD,CAAjB,CAA5B,EAAmD;UAC/CA,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd;SADJ,MAEO;UACHA,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd;;;;UAGFC,QAAQ,GAAG,CAACD,QAAQ,CAAC,CAAD,CAAT,IAAgB,CAACA,QAAQ,CAAC,CAAD,CAA1C;;UAEIC,QAAJ,EAAc;YACNjnB,OAAJ,EAAa;UACTqb,SAAS,GAAG7d,QAAQ,CAAC6d,SAAD,EAAY0K,cAAZ,CAApB;SADJ,MAEO;UACHzK,UAAU,GAAG9d,QAAQ,CAAC8d,UAAD,EAAayK,cAAb,CAArB;;;;UAIHW,aAAa,CAAC,CAAD,CAAb,IAAoB,CAACA,aAAa,CAAC,CAAD,CAAnC,IACIM,QAAQ,CAAC,CAAD,CAAR,IAAe,CAACA,QAAQ,CAAC,CAAD,CAD5B,IAEIC,QAAQ,IAAIjnB,OAHpB,EAIE;QACEqb,SAAS,IAAI2L,QAAQ,CAAC,CAAD,CAArB;QACA1L,UAAU,GAAGvb,kBAAkB,CAACsb,SAAD,EAAYrb,OAAZ,EAAqBC,KAArB,CAA/B;OANJ,MAOO,IACF,CAACymB,aAAa,CAAC,CAAD,CAAd,IAAqBA,aAAa,CAAC,CAAD,CAAnC,IACI,CAACM,QAAQ,CAAC,CAAD,CAAT,IAAgBA,QAAQ,CAAC,CAAD,CAD5B,IAEIC,QAAQ,IAAI,CAACjnB,OAHd,EAIL;QACEsb,UAAU,IAAI0L,QAAQ,CAAC,CAAD,CAAtB;QACA3L,SAAS,GAAGnb,iBAAiB,CAACob,UAAD,EAAatb,OAAb,EAAsBC,KAAtB,CAA7B;;KA9BR,MAgCO;MACHob,SAAS,IAAI2L,QAAQ,CAAC,CAAD,CAArB;MACA1L,UAAU,IAAI0L,QAAQ,CAAC,CAAD,CAAtB;;UACI,CAACA,QAAQ,CAAC,CAAD,CAAb,EAAkB;QACd3L,SAAS,GAAG7d,QAAQ,CAAC6d,SAAD,EAAY0K,cAAZ,CAApB;;;UAEA,CAACiB,QAAQ,CAAC,CAAD,CAAb,EAAkB;QACd1L,UAAU,GAAG9d,QAAQ,CAAC8d,UAAD,EAAayK,cAAb,CAArB;;;;IAGR1K,SAAS,GAAGtvB,IAAI,CAACC,KAAL,CAAWqvB,SAAX,CAAZ;IACAC,UAAU,GAAGvvB,IAAI,CAACC,KAAL,CAAWsvB,UAAX,CAAb;IAEAqL,SAAS,GAAGtL,SAAS,GAAG4K,gBAAxB;IACAW,UAAU,GAAGtL,UAAU,GAAG4K,iBAA1B;QAEMjE,KAAK,GAAG,CAAC0E,SAAS,GAAG5uB,SAAb,EAAwB6uB,UAAU,GAAG5uB,UAArC,CAAd;IAEA6G,KAAK,CAAC9G,SAAN,GAAkB4uB,SAAlB;IACA9nB,KAAK,CAAC7G,UAAN,GAAmB4uB,UAAnB;;QAEI,CAAC9hB,cAAD,IAAmBmd,KAAK,CAACzjB,KAAN,CAAY,UAAAjB,GAAA;aAAO,CAACA,GAAD;KAAnB,CAAvB,EAAiD;;;;QAI3C2pB,YAAY,GAAG,CAACpd,UAAD,IAAenB,SAAf,GACf,CAAC,CAAD,EAAI,CAAJ,CADe,GAEfuD,aAAa,CACXvN,QADW,EAEX0c,SAFW,EAEAC,UAFA,EAGXpB,cAHW,EAGK/N,aAHL,EAGoB/b,eAHpB,CAFnB;QAOMwO,MAAM,GAAGF,UAAU,CAAWC,QAAX,EAAqBnR,CAArB,EAAwB;MAC7CuH,KAAK,EAAEqxB,UAAU,GAAGO,SADyB;MAE7C1xB,MAAM,EAAEoxB,WAAW,GAAGO,UAFuB;MAG7C3rB,WAAW,EAAEogB,SAHgC;MAI7CngB,YAAY,EAAEogB,UAJ+B;MAK7CvhB,SAAS,WALoC;MAM7CoD,IAAI,EAAE,CAACwpB,SAAD,EAAYC,UAAZ,CANuC;MAO7C3E,KAAK,OAPwC;MAQ7CxgB,OAAO,EAAE,CAAC,CAACkH,SARkC;MAS7C6Y,IAAI,EAAE0D,SAAS,CAAC1D,IAAV,CACF7iB,QADE,EAEF6jB,aAAa,CAAC7jB,QAAQ,CAACzC,KAAV,EAAiBgrB,YAAjB,EAA+BjoB,UAA/B,EAA2C,KAA3C,CAFX;KATe,CAAzB;IAcAE,YAAY,CAACR,QAAD,EAAW,UAAX,EAAuBC,MAAvB,CAAZ;WACOA,MAAP;GA9QO;EAgRXuoB,gBAAgB,EAAhB,UACIxoB,QADJ,EAEInR,CAFJ;QAIUqR,KAAK,GAAGrR,CAAC,CAACqR,KAAhB;QAEI0nB,yBAAA;QACAN,yCADA;QAEAC,2CAFA;QAGAnuB,2BAHA;QAIAC,6BAJA;;QAOA,CAACuuB,QAAL,EAAe;;;;QAGTr2B,mBAAA;QACF6E,gBADE;QAEFE,kBAFE;QAIAmyB,UAAU,GAAGryB,KAAK,IAAIkxB,gBAAgB,GAAGluB,SAAvB,CAAxB;QACMsvB,WAAW,GAAGpyB,MAAM,IAAIixB,iBAAiB,GAAGluB,UAAxB,CAA1B;QACMsvB,YAAY,GAAGv7B,IAAI,CAAC+M,GAAL,CAASsuB,UAAT,IAAuB,CAA5C;QACMG,aAAa,GAAGx7B,IAAI,CAAC+M,GAAL,CAASuuB,WAAT,IAAwB,CAA9C;;QAEIC,YAAJ,EAAkB;MACdzoB,KAAK,CAACunB,UAAN,IAAoBgB,UAApB;MACAvoB,KAAK,CAAConB,gBAAN,IAA0BmB,UAA1B;MACAvoB,KAAK,CAAC9G,SAAN,IAAmBqvB,UAAnB;;;QAEAG,aAAJ,EAAmB;MACf1oB,KAAK,CAACwnB,WAAN,IAAqBgB,WAArB;MACAxoB,KAAK,CAACqnB,iBAAN,IAA2BmB,WAA3B;MACAxoB,KAAK,CAAC7G,UAAN,IAAoBqvB,WAApB;;;QAEAC,YAAY,IAAIC,aAApB,EAAmC;WAC1B9C,WAAL,CAAiB9lB,QAAjB,EAA2BnR,CAA3B;aACO,IAAP;;GArTG;EAwTXizB,cAAc,EAAd,UACI9hB,QADJ,EAEInR,CAFJ;QAIYqR,eAAA;QAAOmD,iBAAP;;QACJ,CAACnD,KAAK,CAAC0nB,QAAX,EAAqB;aACV,KAAP;;;IAEJ1nB,KAAK,CAAC0nB,QAAN,GAAiB,KAAjB;QAEM3nB,MAAM,GAAGF,UAAU,CAAcC,QAAd,EAAwBnR,CAAxB,EAA2B;MAChDwU,MAAM;KADe,CAAzB;IAGA7C,YAAY,CAACR,QAAD,EAAW,aAAX,EAA0BC,MAA1B,CAAZ;WACOoD,MAAP;GAtUO;EAwUX6iB,yBAAyB,EAAErY,kBAxUhB;EAyUXoU,qBAAqB,EAArB,UAAsBjiB,QAAtB,EAA+CnR,CAA/C;QACYqR,eAAA;QACFD,MAAM,GAAG,KAAK6I,gBAAL,CAAsB9I,QAAtB,EAAgCnR,CAAhC,CAAf;;QAEI,CAACoR,MAAL,EAAa;aACF,KAAP;;;QAEE7E,SAAS,GAAG6E,MAAM,CAAC7E,SAAzB;QACM4R,QAAQ,GAAGP,wBAAwB,CAAC/N,uBAAuB,CAACsB,QAAQ,CAACzC,KAAV,CAAxB,EAA0CnC,SAA1C,CAAzC;QAEM8I,MAAM,GAAGwG,gBAAgB,CAC3B1K,QAD2B,EAE3B,IAF2B,EAG3B,kBAH2B,EAI3BE,KAJ2B,EAK3B,UAAC6K,KAAD,EAAQC,UAAR;UACU5X,GAAG,GAAGqZ,wBAAwB,CAAC/N,uBAAuB,CAACqM,KAAK,CAACxN,KAAP,CAAxB,EAAuCnC,SAAvC,CAApC;;UACM7J,4HAAA;UAACs3B,iBAAD;UAAYC,iBAAZ;;MAKN9d,UAAU,CAAC6d,SAAX,GAAuBA,SAAvB;MACA7d,UAAU,CAAC8d,SAAX,GAAuBA,SAAvB;aAEOj6B,CAAP;KAfuB,CAA/B;;QAmBM40B,UAAU,gBACTxjB;MACH+C,OAAO,EAAEhD,QAAQ,CAACiD,KAAT,CAAeD;MACxBkB,MAAM;MAHV;;QAKM2F,MAAM,GAAGrJ,YAAY,CAACR,QAAD,EAAW,oBAAX,EAAiCyjB,UAAjC,CAA3B;IAEAvjB,KAAK,CAAC0nB,QAAN,GAAiB/d,MAAM,KAAK,KAA5B;WACO3J,KAAK,CAAC0nB,QAAN,GAAiB3nB,MAAjB,GAA0B,KAAjC;GA9WO;EAgXXwmB,gBAAgB,EAAhB,UAAiBzmB,QAAjB,EAA0CnR,CAA1C;QACYqR,eAAA;;QACJ,CAACA,KAAK,CAAC0nB,QAAX,EAAqB;;;;QAGf3nB,MAAM,GAAG,KAAK6lB,WAAL,CAAiB9lB,QAAjB,EAA2BnR,CAA3B,CAAf;;QAEI,CAACoR,MAAL,EAAa;;;;QAIT3D,gCAAA;QAAaC,kCAAb;QAA2BiC,kBAA3B;QAGEqT,SAAS,GAAG7R,QAAQ,CAACiD,KAAT,CAAe4O,SAAjC;QAEMgW,WAAW,GAAG,CAChBvrB,WAAW,IAAIA,WAAW,GAAGkC,IAAI,CAAC,CAAD,CAAtB,CADK,EAEhBjC,YAAY,IAAIA,YAAY,GAAGiC,IAAI,CAAC,CAAD,CAAvB,CAFI,CAApB;QAIMgP,aAAa,GAAGtN,KAAK,CAACsnB,qBAA5B;QAEMtjB,MAAM,GAAGwG,gBAAgB,CAC3B1K,QAD2B,EAE3B,IAF2B,EAG3B,aAH2B,EAI3BE,KAJ2B,EAK3B,UAAClB,CAAD,EAAIgM,UAAJ;UACUzZ,6JAAA;UAAC6O,eAAD;UAAUC,eAAV;;0BAWCxR;QACHg5B,WAAW;QACX1a,UAAU,EAAE1O,IAAI,CAAC+O,aAAD,EAAgB,CAACpN,OAAD,EAAUC,OAAV,CAAhB;QAChBynB,eAAe,EAAEjW;QAJrB;KAhBuB,CAA/B;;QAwBM4R,UAAU;MACZzgB,OAAO,EAAEhD,QAAQ,CAACiD,KAAT,CAAeD;MACxBkB,MAAM;OACHjE,OAHP;;IAMAO,YAAY,CAACR,QAAD,EAAW,eAAX,EAA4ByjB,UAA5B,CAAZ;WACOA,UAAP;GAraO;EAuaXvB,mBAAmB,EAAnB,UAAoBliB,QAApB,EAA6CnR,CAA7C;QACYwU,iBAAA;QAAQnD,eAAR;;QAEJ,CAACA,KAAK,CAAC0nB,QAAX,EAAqB;;;;SAIhB9F,cAAL,CAAoB9hB,QAApB,EAA8BnR,CAA9B;IACA6b,gBAAgB,CAAC1K,QAAD,EAAW,IAAX,EAAiB,gBAAjB,EAAmCE,KAAnC,EAA0CrR,CAA1C,CAAhB;QAEM40B,UAAU,GAAqB1jB,UAAU,CAAmBC,QAAnB,EAA6BnR,CAA7B,EAAgC;MAC3EmU,OAAO,EAAEhD,QAAQ,CAACiD,KAAT,CAAeD,OADmD;MAE3EK,MAAM;KAFqC,CAA/C;IAKA7C,YAAY,CAACR,QAAD,EAAW,kBAAX,EAA+ByjB,UAA/B,CAAZ;WACOpgB,MAAP;GAvbO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2dX4E,OAAO,EAAP,UAAQjI,QAAR;QACUE,KAAK,GAAG,EAAd;QACI8nB,SAAS,GAAG,CAAhB;QACIC,UAAU,GAAG,CAAjB;QACMpvB,IAAI,GAAGmH,QAAQ,CAAC9H,OAAT,EAAb;WAEO;MACHkQ,SAAS,EAAE,IADR;MAEHG,YAAY,EAAZ,UAAa1Z,CAAb;eACW;UAAEqR,KAAK,OAAP;UAAS4N,eAAe,EAAEjf,CAAC,CAACuM,SAAF,IAAe,CAAC,CAAD,EAAI,CAAJ;SAAhD;OAHD;MAKH6M,OAAO,EAAP,UAAQpZ,CAAR;YACQ,iBAAiBA,CAArB,EAAwB;UACpBm5B,SAAS,GAAGn5B,CAAC,CAACyN,WAAF,GAAgBzD,IAAI,CAACyD,WAAjC;SADJ,MAEO,IAAI,gBAAgBzN,CAApB,EAAuB;UAC1Bm5B,SAAS,IAAIn5B,CAAC,CAACk6B,UAAf;;;YAEA,kBAAkBl6B,CAAtB,EAAyB;UACrBo5B,UAAU,GAAGp5B,CAAC,CAAC0N,YAAF,GAAiB1D,IAAI,CAAC0D,YAAnC;SADJ,MAEO,IAAI,iBAAiB1N,CAArB,EAAwB;UAC3Bo5B,UAAU,IAAIp5B,CAAC,CAACm6B,WAAhB;;;eAGG;UAAE9oB,KAAK,OAAP;UAASykB,UAAU,EAAE,CAACqD,SAAD,EAAYC,UAAZ;SAA5B;OAjBD;MAmBH/f,UAAU;eACC;UAAEhI,KAAK,OAAP;UAASmD,MAAM,EAAE;SAAxB;;KApBR;;CAjeR;;ACRA;;;;;AAIA,eAAe;EACX1V,IAAI,EAAE,UADK;EAEXwT,SAAS,EAAE,MAFA;EAGXyI,QAAQ,EAAE,IAHC;EAIX3G,KAAK,EAAE;IACHgmB,QAAQ,EAAEzf,OADP;IAEH0f,aAAa,EAAEzf,MAFZ;IAGH4d,gBAAgB,EAAE/B,MAHf;IAIHzT,SAAS,EAAErI;GARJ;EAUXL,MAAM,EAAN,UAAOnJ,QAAP,EAA2EiF,KAA3E;QACU1T,mBAAA;QAAE41B,wBAAF;QAAa8B,sBAAb;QAAuB5jB,cAAvB;;QACF,CAAC8hB,SAAD,IAAc8B,QAAlB,EAA4B;UACpB5jB,IAAJ,EAAU;eACC6hB,wBAAwB,CAAClnB,QAAD,EAAWiF,KAAX,CAA/B;;;aAEGgiB,mBAAmB,CAACjnB,QAAD,EAAWiF,KAAX,CAA1B;;GAhBG;EAmBX2c,oBAAoB,EAAE/T,kBAnBX;EAoBX/E,gBAAgB,EAAhB,UACI9I,QADJ,EAEInR,CAFJ;QAIYqR,eAAA;QAAO8J,uBAAP;QAAkB1J,yBAAlB;QAA8BwN,mCAA9B;QACF1S,SAAS,GAAG0S,eAAe,KAAK9D,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAH,GAAY7L,YAAY,CAACmC,UAAU,CAACvO,MAAZ,CAAtC,CAAjC;QACMR,mBAAA;QACF6E,gBADE;QAEFE,kBAFE;QAGFmH,oCAHE;QAIF1L,kBAJE;;QAOF,CAACqJ,SAAD,IAAc,CAACrJ,MAAnB,EAA2B;aAChB,KAAP;;;QAEA,CAACiY,SAAL,EAAgB;MACZoB,YAAY,CAACpL,QAAD,EAAW;QAAEE,KAAK;OAAlB,CAAZ;;;IAGJA,KAAK,CAACA,KAAN,GAAc,EAAd;IACAA,KAAK,CAACrQ,SAAN,GAAkB4N,eAAlB;IACAyC,KAAK,CAACuiB,QAAN,GAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB;IACAviB,KAAK,CAAC9E,SAAN,GAAkBA,SAAlB;IACA8E,KAAK,CAAC9J,KAAN,GAAcA,KAAd;IACA8J,KAAK,CAAC5J,MAAN,GAAeA,MAAf;IACA4J,KAAK,CAACipB,UAAN,GAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB;IACAjpB,KAAK,CAACsN,aAAN,GAAsBI,wBAAwB,CAAC5N,QAAD,EAAW5E,SAAX,CAA9C;QAEM6E,MAAM,GAAGF,UAAU,CAAeC,QAAf,EAAyBnR,CAAzB,EAA4B;MACjDuM,SAAS,WADwC;MAEjDunB,GAAG,EAAE,UAAC71B,KAAD;QACDoT,KAAK,CAACipB,UAAN,GAAmBr8B,KAAnB;OAH6C;MAKjD8b,SAAS,EAAE2d,SAAS,CAAC3d,SAAV,CACP5I,QADO,EAEP,IAAIwmB,aAAJ,GAAoB5d,SAApB,CAA8B,CAAC,CAAD,EAAI,CAAJ,CAA9B,EAAsCtI,UAAtC,CAFO;KALU,CAAzB;QAUMuJ,MAAM,GAAGrJ,YAAY,CAACR,QAAD,EAAW,cAAX,EAA2BC,MAA3B,CAA3B;;QAEI4J,MAAM,KAAK,KAAf,EAAsB;MAClB3J,KAAK,CAACkpB,OAAN,GAAgB,IAAhB;MACAppB,QAAQ,CAACzC,KAAT,CAAe0M,cAAf,GAAgC;QAC5B7O,SAAS;OADb;;;WAKG8E,KAAK,CAACkpB,OAAN,GAAgBnpB,MAAhB,GAAyB,KAAhC;GApEO;EAsEX6lB,WAAW,EAAX,UACI9lB,QADJ,EAEInR,CAFJ;QAIQqR,eAAA;QAAOyL,eAAP;QAAcC,eAAd;QACAic,2BADA;QAEAxd,iCAFA;QAGAyd,mCAHA;QAIA3c,yBAJA;QAIYnB,uBAJZ;QAIuB1J,yBAJvB;QAKA6M,yBALA;QAMAwX,yBANA;QASAlC,yBAAA;QACArnB,2BADA;QAEAhF,mBAFA;QAGAE,qBAHA;QAIAzG,2BAJA;QAKAu5B,uBALA;QAMAD,6BANA;;QASA,CAACC,OAAL,EAAc;aACH,KAAP;;;QAGE73B,mBAAA;QACF23B,gCADE;QAEF/iB,kCAFE;QAIA0L,SAAS,GAAG7R,QAAQ,CAACiD,KAAT,CAAe4O,SAAf,IAA4BiW,eAA9C;QACMvqB,KAAK,GAAGyC,QAAQ,CAACzC,KAAvB;QACM8D,OAAO,GAAGjG,SAAS,CAAC,CAAD,CAAT,IAAgB,CAACA,SAAS,CAAC,CAAD,CAA1C;QACMqsB,UAAU,GAAGrxB,KAAK,GAAG+yB,UAAU,CAAC,CAAD,CAArC;QACMzB,WAAW,GAAGpxB,MAAM,GAAG6yB,UAAU,CAAC,CAAD,CAAvC;QACM7nB,KAAK,GAAGD,OAAO,GAAGqmB,WAAW,GAAGD,UAAjB,GAA8BA,UAAU,GAAGC,WAAhE;QACInxB,MAAM,GAAW,CAArB;QACIC,MAAM,GAAW,CAArB;;QAEIqxB,WAAJ,EAAiB;MACbtxB,MAAM,GAAGsxB,WAAW,CAAC,CAAD,CAApB;MACArxB,MAAM,GAAGqxB,WAAW,CAAC,CAAD,CAApB;KAFJ,MAGO,IAAI7d,SAAJ,EAAe;UACdK,cAAJ,EAAoB;QAChB9T,MAAM,GAAG,CAACH,KAAK,GAAGiU,cAAT,IAA2BjU,KAApC;QACAI,MAAM,GAAG,CAACF,MAAM,GAAG+T,cAAc,GAAG/T,MAAjB,GAA0BF,KAApC,IAA6CE,MAAtD;;KAHD,MAKA;UACGkI,IAAI,GAAGiN,WAAW,CAAC;QAAEvL,KAAK,OAAP;QAASyL,KAAK,OAAd;QAAgBC,KAAK;OAAtB,CAAxB;UACIoc,SAAS,GAAG5sB,SAAS,CAAC,CAAD,CAAT,GAAeoD,IAAI,CAAC,CAAD,CAAnC;UACIypB,UAAU,GAAG7sB,SAAS,CAAC,CAAD,CAAT,GAAeoD,IAAI,CAAC,CAAD,CAApC;;UAEIqT,SAAS,IAAIzb,KAAb,IAAsBE,MAA1B,EAAkC;YACxBqF,GAAG,GAAGT,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAASsD,IAAT,CAAlB;YACM0pB,WAAW,GAAGhtB,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAASE,SAAT,CAA1B;YACM+sB,QAAQ,GAAGjtB,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAACusB,UAAD,EAAaC,WAAb,CAAT,CAAvB;YACM1b,IAAI,GAAG1Q,WAAW,CAAC,CAAC0sB,SAAD,EAAYC,UAAZ,CAAD,CAAxB;YACMG,QAAQ,GAAGh7B,IAAI,CAAC41B,GAAL,CAASrnB,GAAG,GAAGusB,WAAf,IAA8Blc,IAA/C;;YAEI,CAAC5Q,SAAS,CAAC,CAAD,CAAd,EAAmB;;UAEf6sB,UAAU,GAAGG,QAAb;UACAJ,SAAS,GAAGzmB,iBAAiB,CAAC0mB,UAAD,EAAa5mB,OAAb,EAAsBC,KAAtB,CAA7B;SAHJ,MAIO,IAAI,CAAClG,SAAS,CAAC,CAAD,CAAd,EAAmB;;UAEtB4sB,SAAS,GAAGI,QAAZ;UACAH,UAAU,GAAG7mB,kBAAkB,CAAC4mB,SAAD,EAAY3mB,OAAZ,EAAqBC,KAArB,CAA/B;SAHG,MAIA;;UAEH0mB,SAAS,GAAG56B,IAAI,CAAC41B,GAAL,CAASmF,QAAT,IAAqBC,QAAjC;UACAH,UAAU,GAAG76B,IAAI,CAAC61B,GAAL,CAASkF,QAAT,IAAqBC,QAAlC;;;;MAGR7xB,MAAM,GAAG,CAACH,KAAK,GAAG4xB,SAAT,IAAsB5xB,KAA/B;MACAI,MAAM,GAAG,CAACF,MAAM,GAAG2xB,UAAV,IAAwB3xB,MAAjC;;;IAEJC,MAAM,GAAG6E,SAAS,CAAC,CAAD,CAAT,IAAgByW,SAAhB,GAA4Btb,MAAM,GAAG4yB,UAAU,CAAC,CAAD,CAA/C,GAAqDA,UAAU,CAAC,CAAD,CAAxE;IACA3yB,MAAM,GAAG4E,SAAS,CAAC,CAAD,CAAT,IAAgByW,SAAhB,GAA4Brb,MAAM,GAAG2yB,UAAU,CAAC,CAAD,CAA/C,GAAqDA,UAAU,CAAC,CAAD,CAAxE;;QAEI5yB,MAAM,KAAK,CAAf,EAAkB;MACdA,MAAM,GAAG,CAACksB,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd,GAAkB,CAAlB,GAAsB,CAAC,CAAxB,IAA6Bp0B,SAAtC;;;QAEAmI,MAAM,KAAK,CAAf,EAAkB;MACdA,MAAM,GAAG,CAACisB,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd,GAAkB,CAAlB,GAAsB,CAAC,CAAxB,IAA6Bp0B,SAAtC;;;QAGEg7B,OAAO,GAAG,CAAC9yB,MAAM,GAAG4yB,UAAU,CAAC,CAAD,CAApB,EAAyB3yB,MAAM,GAAG2yB,UAAU,CAAC,CAAD,CAA5C,CAAhB;QACIr8B,KAAK,GAAG,CAACyJ,MAAD,EAASC,MAAT,CAAZ;QACImb,aAAa,GAAGvW,SAApB;;QAEI4E,QAAQ,CAACiD,KAAT,CAAe6E,SAAnB,EAA8B;MAC1B6J,aAAa,GAAG,CACZ,CAAC0X,OAAO,CAAC,CAAD,CAAP,IAAc,CAAd,GAAkB,CAAlB,GAAsB,CAAC,CAAxB,IAA6BjuB,SAAS,CAAC,CAAD,CAD1B,EAEZ,CAACiuB,OAAO,CAAC,CAAD,CAAP,IAAc,CAAd,GAAkB,CAAlB,GAAsB,CAAC,CAAxB,IAA6BjuB,SAAS,CAAC,CAAD,CAF1B,CAAhB;UAIM6O,cAAc,GAAG1M,KAAK,CAAC0M,cAAN,IAAwB,EAA/C;UACMqf,cAAc,GAAGrf,cAAc,CAAC7O,SAAtC;;UAEImuB,OAAO,CAACD,cAAD,CAAP,KAA4BA,cAAc,CAAC,CAAD,CAAd,IAAqBA,cAAc,CAAC,CAAD,CAA/D,CAAJ,EAAyE;QACrE/rB,KAAK,CAAC0M,cAAN,GAAuB;UAAE7O,SAAS;SAAlC;;;;QAGJitB,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAf;;QAEI,CAACre,SAAL,EAAgB;MACZqe,QAAQ,GAAGhL,cAAc,CACrBrd,QADqB,EAErBqpB,OAFqB,EAGrBjuB,SAHqB,EAIrBuW,aAJqB,EAKrBzR,KAAK,CAACsN,aALe,EAMrBmX,UANqB,EAOrBzkB,KAPqB,CAAzB;;;QAWA2R,SAAJ,EAAe;UACPzW,SAAS,CAAC,CAAD,CAAT,IAAgBA,SAAS,CAAC,CAAD,CAAzB,IAAgCitB,QAAQ,CAAC,CAAD,CAAxC,IAA+CA,QAAQ,CAAC,CAAD,CAA3D,EAAgE;YACxDj7B,IAAI,CAAC+M,GAAL,CAASkuB,QAAQ,CAAC,CAAD,CAAjB,IAAwBj7B,IAAI,CAAC+M,GAAL,CAASkuB,QAAQ,CAAC,CAAD,CAAjB,CAA5B,EAAmD;UAC/CA,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd;SADJ,MAEO;UACHA,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd;;;;UAIFC,QAAQ,GAAG,CAACD,QAAQ,CAAC,CAAD,CAAT,IAAgB,CAACA,QAAQ,CAAC,CAAD,CAA1C;;UAEIC,QAAJ,EAAc;YACNjnB,OAAJ,EAAa;UACTgoB,OAAO,CAAC,CAAD,CAAP,GAAaxqB,QAAQ,CAACwqB,OAAO,CAAC,CAAD,CAAP,GAAaF,UAAU,CAAC,CAAD,CAAxB,EAA6BD,aAA7B,CAAR,GAAuDC,UAAU,CAAC,CAAD,CAA9E;SADJ,MAEO;UACHE,OAAO,CAAC,CAAD,CAAP,GAAaxqB,QAAQ,CAACwqB,OAAO,CAAC,CAAD,CAAP,GAAaF,UAAU,CAAC,CAAD,CAAxB,EAA6BD,aAA7B,CAAR,GAAuDC,UAAU,CAAC,CAAD,CAA9E;;;;UAKH/tB,SAAS,CAAC,CAAD,CAAT,IAAgB,CAACA,SAAS,CAAC,CAAD,CAA3B,IACIitB,QAAQ,CAAC,CAAD,CAAR,IAAe,CAACA,QAAQ,CAAC,CAAD,CAD5B,IAEIC,QAAQ,IAAIjnB,OAHpB,EAIE;QACEgoB,OAAO,CAAC,CAAD,CAAP,IAAchB,QAAQ,CAAC,CAAD,CAAtB;YACMmB,UAAU,GAAGpoB,kBAAkB,CAAChL,KAAK,GAAGizB,OAAO,CAAC,CAAD,CAAf,GAAqBF,UAAU,CAAC,CAAD,CAAhC,EAAqC9nB,OAArC,EAA8CC,KAA9C,CAArC;QAEA+nB,OAAO,CAAC,CAAD,CAAP,GAAaG,UAAU,GAAGlzB,MAAb,GAAsB6yB,UAAU,CAAC,CAAD,CAA7C;OARJ,MASO,IACF,CAAC/tB,SAAS,CAAC,CAAD,CAAV,IAAiBA,SAAS,CAAC,CAAD,CAA3B,IACI,CAACitB,QAAQ,CAAC,CAAD,CAAT,IAAgBA,QAAQ,CAAC,CAAD,CAD5B,IAEIC,QAAQ,IAAI,CAACjnB,OAHd,EAIL;QACEgoB,OAAO,CAAC,CAAD,CAAP,IAAchB,QAAQ,CAAC,CAAD,CAAtB;YACMoB,SAAS,GAAGloB,iBAAiB,CAACjL,MAAM,GAAG+yB,OAAO,CAAC,CAAD,CAAhB,GAAsBF,UAAU,CAAC,CAAD,CAAjC,EAAsC9nB,OAAtC,EAA+CC,KAA/C,CAAnC;QAEA+nB,OAAO,CAAC,CAAD,CAAP,GAAaI,SAAS,GAAGrzB,KAAZ,GAAoB+yB,UAAU,CAAC,CAAD,CAA3C;;KApCR,MAsCO;MACHE,OAAO,CAAC,CAAD,CAAP,IAAchB,QAAQ,CAAC,CAAD,CAAtB;MACAgB,OAAO,CAAC,CAAD,CAAP,IAAchB,QAAQ,CAAC,CAAD,CAAtB;;UACI,CAACA,QAAQ,CAAC,CAAD,CAAb,EAAkB;QACdgB,OAAO,CAAC,CAAD,CAAP,GAAaxqB,QAAQ,CAACwqB,OAAO,CAAC,CAAD,CAAP,GAAaF,UAAU,CAAC,CAAD,CAAxB,EAA6BD,aAA7B,CAAR,GAAuDC,UAAU,CAAC,CAAD,CAA9E;;;UAEA,CAACd,QAAQ,CAAC,CAAD,CAAb,EAAkB;QACdgB,OAAO,CAAC,CAAD,CAAP,GAAaxqB,QAAQ,CAACwqB,OAAO,CAAC,CAAD,CAAP,GAAaF,UAAU,CAAC,CAAD,CAAxB,EAA6BD,aAA7B,CAAR,GAAuDC,UAAU,CAAC,CAAD,CAA9E;;;;QAGJE,OAAO,CAAC,CAAD,CAAP,KAAe,CAAnB,EAAsB;MAClBA,OAAO,CAAC,CAAD,CAAP,GAAa,CAAC5G,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd,GAAkB,CAAlB,GAAsB,CAAC,CAAxB,IAA6Bp0B,SAA1C;;;QAEAg7B,OAAO,CAAC,CAAD,CAAP,KAAe,CAAnB,EAAsB;MAClBA,OAAO,CAAC,CAAD,CAAP,GAAa,CAAC5G,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd,GAAkB,CAAlB,GAAsB,CAAC,CAAxB,IAA6Bp0B,SAA1C;;;QAEEi1B,KAAK,GAAG,CAAC+F,OAAO,CAAC,CAAD,CAAP,GAAa5G,QAAQ,CAAC,CAAD,CAAtB,EAA2B4G,OAAO,CAAC,CAAD,CAAP,GAAa5G,QAAQ,CAAC,CAAD,CAAhD,CAAd;IACA31B,KAAK,GAAGqC,SAAS,CAACk6B,OAAD,EAAUF,UAAV,CAAjB;IAEAjpB,KAAK,CAACuiB,QAAN,GAAiB4G,OAAjB;;QAEI9yB,MAAM,KAAKksB,QAAQ,CAAC,CAAD,CAAnB,IAA0BjsB,MAAM,KAAKisB,QAAQ,CAAC,CAAD,CAA7C,IAAoD,CAACtc,cAAzD,EAAyE;aAC9D,KAAP;;;QAEEoiB,YAAY,GAAG,CAACpd,UAAD,IAAenB,SAAf,GACf,CAAC,CAAD,EAAI,CAAJ,CADe,GAEfkD,YAAY,CAAClN,QAAD,EAAWsjB,KAAX,EAAkBloB,SAAlB,EAA6B+R,UAA7B,CAFlB;QAIMlN,MAAM,GAAGF,UAAU,CAAUC,QAAV,EAAoBnR,CAApB,EAAuB;MAC5C/B,KAAK,OADuC;MAE5CsO,SAAS,WAFmC;MAG5CoD,IAAI,EAAE6qB,OAHsC;MAI5C/F,KAAK,OAJuC;MAK5CzzB,SAAS,EAAKA,SAAS,YAAT,GAAmB0G,MAAnB,OAAA,GAA8BC,MAA9B,MAL8B;MAM5CsM,OAAO,EAAE,CAAC,CAACkH,SANiC;MAO5C6Y,IAAI,EAAE0D,SAAS,CAAC1D,IAAV,CACF7iB,QADE,EAEF6jB,aAAa,CAAC7jB,QAAQ,CAACzC,KAAV,EAAiBgrB,YAAjB,EAA+BjoB,UAA/B,EAA2C,KAA3C,CAFX;KAPe,CAAzB;IAYAE,YAAY,CAACR,QAAD,EAAW,SAAX,EAAsBC,MAAtB,CAAZ;WAEOA,MAAP;GA1QO;EA4QX6hB,cAAc,EAAd,UAAe9hB,QAAf,EAAyDnR,CAAzD;QACYqR,eAAA;QAAOmD,iBAAP;;QACJ,CAACnD,KAAK,CAACkpB,OAAX,EAAoB;aACT,KAAP;;;IAGJlpB,KAAK,CAACkpB,OAAN,GAAgB,KAAhB;IAEA5oB,YAAY,CAACR,QAAD,EAAW,YAAX,EAAyBD,UAAU,CAAaC,QAAb,EAAuBnR,CAAvB,EAA0B;MACrEwU,MAAM;KADqC,CAAnC,CAAZ;WAGOA,MAAP;GAvRO;EAyRX6iB,yBAAyB,EAAErY,kBAzRhB;EA0RXoU,qBAAqB,EAArB,UAAsBjiB,QAAtB,EAA+CnR,CAA/C;QACYqR,eAAA;QAEFD,MAAM,GAAG,KAAK6I,gBAAL,CAAsB9I,QAAtB,EAAgCnR,CAAhC,CAAf;;QAEI,CAACoR,MAAL,EAAa;aACF,KAAP;;;QAEE7E,SAAS,GAAG6E,MAAM,CAAC7E,SAAzB;QACM4R,QAAQ,GAAGY,wBAAwB,CAAC5N,QAAD,EAAW5E,SAAX,CAAzC;IAEA8E,KAAK,CAAC8M,QAAN,GAAiBA,QAAjB;QAEM9I,MAAM,GAAGwG,gBAAgB,CAC3B1K,QAD2B,EAE3B,IAF2B,EAG3B,kBAH2B,EAI3BE,KAJ2B,EAK3B,UAAC6K,KAAD,EAAQC,UAAR;UACU5X,GAAG,GAAGwa,wBAAwB,CAAC7C,KAAD,EAAQ3P,SAAR,CAApC;;UACM7J,4HAAA;UAACs3B,iBAAD;UAAYC,iBAAZ;;MAKN9d,UAAU,CAAC6d,SAAX,GAAuBA,SAAvB;MACA7d,UAAU,CAAC8d,SAAX,GAAuBA,SAAvB;aAEOj6B,CAAP;KAfuB,CAA/B;;QAmBM40B,UAAU,gBACTxjB;MACH+C,OAAO,EAAEhD,QAAQ,CAACiD,KAAT,CAAeD;MACxBkB,MAAM;MAHV;;QAKM2F,MAAM,GAAGrJ,YAAY,CAACR,QAAD,EAAW,mBAAX,EAAgCyjB,UAAhC,CAA3B;IAEAvjB,KAAK,CAACkpB,OAAN,GAAgBvf,MAAM,KAAK,KAA3B;WACO3J,KAAK,CAACkpB,OAAN,GAAgB3F,UAAhB,GAA6B,KAApC;GAlUO;EAoUXgD,gBAAgB,EAAhB,UAAiBzmB,QAAjB,EAA0CnR,CAA1C;QACYqR,eAAA;;QACJ,CAACA,KAAK,CAACkpB,OAAX,EAAoB;;;;QAGdnpB,MAAM,GAAG,KAAK6lB,WAAL,CAAiB9lB,QAAjB,EAA2BnR,CAA3B,CAAf;;QACI,CAACoR,MAAL,EAAa;;;;QAGP4R,SAAS,GAAG7R,QAAQ,CAACiD,KAAT,CAAe4O,SAAjC;QACQ/kB,oBAAA;QACFkgB,QAAQ,GAAG9M,KAAK,CAAC8M,QAAvB;QAEM9I,MAAM,GAAGwG,gBAAgB,CAC3B1K,QAD2B,EAE3B,IAF2B,EAG3B,aAH2B,EAI3BE,KAJ2B,EAK3B,UAAClB,CAAD,EAAIgM,UAAJ;UACUzZ,iJAAA;UAAC6O,eAAD;UAAUC,eAAV;;0BAWCxR;QACHg5B,WAAW,EAAE/6B;QACbg7B,eAAe,EAAEjW;QACjB1E,UAAU,EAAE1O,IAAI,CAACuO,QAAD,EAAW,CAAC5M,OAAD,EAAUC,OAAV,CAAX;QAJpB;KAhBuB,CAA/B;;QAwBMojB,UAAU;MACZzgB,OAAO,EAAEhD,QAAQ,CAACiD,KAAT,CAAeD;MACxBkB,MAAM;OACHjE,OAHP;;IAMAO,YAAY,CAACR,QAAD,EAAW,cAAX,EAA2ByjB,UAA3B,CAAZ;WACOA,UAAP;GAhXO;EAkXXvB,mBAAmB,EAAnB,UAAoBliB,QAApB,EAA6CnR,CAA7C;QACYwU,iBAAA;QAAQnD,eAAR;;QAEJ,CAACA,KAAK,CAACkpB,OAAX,EAAoB;;;;SAGftH,cAAL,CAAoB9hB,QAApB,EAA8BnR,CAA9B;IACA6b,gBAAgB,CAAC1K,QAAD,EAAW,IAAX,EAAiB,gBAAjB,EAAmCE,KAAnC,EAA0CrR,CAA1C,CAAhB;QAEM40B,UAAU,GAAG1jB,UAAU,CAAkBC,QAAlB,EAA4BnR,CAA5B,EAA+B;MACxDmU,OAAO,EAAEhD,QAAQ,CAACiD,KAAT,CAAeD,OADgC;MAExDK,MAAM;KAFmB,CAA7B;IAKA7C,YAAY,CAACR,QAAD,EAAW,iBAAX,EAA8ByjB,UAA9B,CAAZ;WACOpgB,MAAP;GAjYO;;;;;;;;;;;;;;;;;;;;;;;;;EA2ZX4E,OAAO,EAAP;QACU/H,KAAK,GAAG,EAAd;QACI8nB,SAAS,GAAG,CAAhB;QACIC,UAAU,GAAG,CAAjB;WAEO;MACH7f,SAAS,EAAE,IADR;MAEHG,YAAY,EAAZ,UAAa1Z,CAAb;eACW;UAAEqR,KAAK,OAAP;UAAS4N,eAAe,EAAEjf,CAAC,CAACuM,SAAF,IAAe,CAAC,CAAD,EAAI,CAAJ;SAAhD;OAHD;MAKH6M,OAAO,EAAP,UAAQpZ,CAAR;QACIm5B,SAAS,IAAIn5B,CAAC,CAACk6B,UAAf;QACAd,UAAU,IAAIp5B,CAAC,CAACm6B,WAAhB;eAEO;UAAE9oB,KAAK,OAAP;UAASykB,UAAU,EAAE,CAACqD,SAAD,EAAYC,UAAZ;SAA5B;OATD;MAWH/f,UAAU;eACC;UAAEhI,KAAK,OAAP;UAASmD,MAAM,EAAE;SAAxB;;KAZR;;CAhaR;;ACVA,SAASqmB,gBAAT,CAA0Bt6B,IAA1B,EAA0CC,IAA1C;SACWD,IAAI,CAACnB,GAAL,CAAS,UAACmF,GAAD,EAAM9B,CAAN;WAAYkhB,GAAG,CAACpf,GAAD,EAAM/D,IAAI,CAACiC,CAAD,CAAV,EAAe,CAAf,EAAkB,CAAlB,CAAH;GAArB,CAAP;;;AAGJ,SAASq4B,cAAT,CAAwBv6B,IAAxB,EAAwCC,IAAxC,EAAwD2I,IAAxD;;MAEU4xB,IAAI,GAAG1uB,MAAM,CAAC9L,IAAD,EAAOC,IAAP,CAAnB;MACMw6B,IAAI,GAAG3uB,MAAM,CAAC9L,IAAD,EAAO4I,IAAP,CAAnB;MAEM2D,GAAG,GAAGkuB,IAAI,GAAGD,IAAnB;SAEOjuB,GAAG,IAAI,CAAP,GAAWA,GAAX,GAAiBA,GAAG,GAAG,IAAIvO,IAAI,CAACiO,EAAvC;;;AAGJ,SAASyuB,UAAT,CAAoBC,MAApB,EAAwCC,MAAxC;MACUJ,IAAI,GAAGD,cAAc,CAACI,MAAM,CAAC,CAAD,CAAP,EAAYA,MAAM,CAAC,CAAD,CAAlB,EAAuBA,MAAM,CAAC,CAAD,CAA7B,CAA3B;MACMF,IAAI,GAAGF,cAAc,CAACK,MAAM,CAAC,CAAD,CAAP,EAAYA,MAAM,CAAC,CAAD,CAAlB,EAAuBA,MAAM,CAAC,CAAD,CAA7B,CAA3B;MACMC,EAAE,GAAG78B,IAAI,CAACiO,EAAhB;;MAEKuuB,IAAI,IAAIK,EAAR,IAAcJ,IAAI,IAAII,EAAvB,IAA+BL,IAAI,IAAIK,EAAR,IAAcJ,IAAI,IAAII,EAAzD,EAA8D;WACnD,KAAP;;;SAEG,IAAP;;;AAGJ,eAAe;EACXt8B,IAAI,EAAE,UADK;EAEXwT,SAAS,EAAE,MAFA;EAGX8B,KAAK,EAAE;IACHinB,QAAQ,EAAE1gB,OADP;IAEH6d,gBAAgB,EAAEtG;GALX;EAOX5X,MAAM,EAAN,UAAOnJ,QAAP,EAAkFiF,KAAlF;QACU1T,mBAAA;QAAE41B,wBAAF;QAAa8B,sBAAb;QAAuBiB,sBAAvB;;QAEF/C,SAAS,IAAI8B,QAAb,IAAyB,CAACiB,QAA9B,EAAwC;;;;QAGlC91B,mBAAA;QAAEhF,cAAF;QAAQC,cAAR;QAAc2I,cAAd;QAAoBC,cAApB;QAEAkyB,YAAY,GAAGT,gBAAgB,CAACt6B,IAAD,EAAOC,IAAP,CAArC;QACM+6B,YAAY,GAAGV,gBAAgB,CAACr6B,IAAD,EAAOD,IAAP,CAArC;QACMi7B,YAAY,GAAGX,gBAAgB,CAACt6B,IAAD,EAAO4I,IAAP,CAArC;QACMsyB,YAAY,GAAGZ,gBAAgB,CAAC1xB,IAAD,EAAO5I,IAAP,CAArC;QACMm7B,UAAU,GAAGb,gBAAgB,CAAC1xB,IAAD,EAAOC,IAAP,CAAnC;QACMuyB,UAAU,GAAGd,gBAAgB,CAACzxB,IAAD,EAAOD,IAAP,CAAnC;QACMyyB,UAAU,GAAGf,gBAAgB,CAACr6B,IAAD,EAAO4I,IAAP,CAAnC;QACMyyB,UAAU,GAAGhB,gBAAgB,CAACzxB,IAAD,EAAO5I,IAAP,CAAnC;YAGI4V,mBAAA,MAAA;MAAKE,SAAS,EAAE7V,MAAM,CAAC,MAAD;MAAU4V,GAAG,EAAC;MAAa1T,KAAK,EAAEkK,YAAY,CAACyuB,YAAD,EAAeI,UAAf;KAApE,GACAtlB,mBAAA,MAAA;MAAKE,SAAS,EAAE7V,MAAM,CAAC,MAAD;MAAU4V,GAAG,EAAC;MAAa1T,KAAK,EAAEkK,YAAY,CAAC0uB,YAAD,EAAeI,UAAf;KAApE,GACAvlB,mBAAA,MAAA;MAAKE,SAAS,EAAE7V,MAAM,CAAC,MAAD;MAAU4V,GAAG,EAAC;MAAa1T,KAAK,EAAEkK,YAAY,CAAC2uB,YAAD,EAAeI,UAAf;KAApE,GACAxlB,mBAAA,MAAA;MAAKE,SAAS,EAAE7V,MAAM,CAAC,MAAD;MAAU4V,GAAG,EAAC;MAAa1T,KAAK,EAAEkK,YAAY,CAAC4uB,YAAD,EAAeI,UAAf;KAApE,UACGzD,mBAAmB,CAACjnB,QAAD,EAAWiF,KAAX,EAL1B;GAxBO;EAgCX2c,oBAAoB,EAApB,UAAqB/yB,CAArB;QACQA,CAAC,CAAC+U,SAAN,EAAiB;aACN,KAAP;;;WAEGmK,QAAQ,CAAClf,CAAC,CAACyR,UAAF,CAAavO,MAAd,EAAsBzC,MAAM,CAAC,WAAD,CAA5B,CAAf;GApCO;EAsCXwZ,gBAAgB,EAAhB,UACI9I,QADJ,EAEInR,CAFJ;QAIYqR,eAAA;QAAOI,yBAAP;QACAvO,8BAAA;QACA44B,+BAAA;QACFvvB,SAAS,GAAG+C,YAAY,CAACwsB,WAAD,CAA9B;;QAEI,CAACvvB,SAAD,IAAc,CAACrJ,MAAnB,EAA2B;aAChB,KAAP;;;QAEEwL,KAAK,GAAGyC,QAAQ,CAACzC,KAAvB;QAEI9L,uCAAA;QAAiBgC,iBAAjB;QACAgK,uCADA;QACiB/J,iCADjB;QAEA0C,mBAFA;QAEOE,qBAFP;QAGAvD,iBAHA;QAGMC,eAHN;IAMJkN,KAAK,CAACA,KAAN,GAAc,EAAd;IACAA,KAAK,CAACzC,eAAN,GAAwBA,eAAxB;IACAyC,KAAK,CAAC0qB,gBAAN,GAAyBn3B,IAAI,GAAGC,YAAH,GAAkBM,gBAAgB,CAACN,YAAD,EAAe,CAAf,EAAkB,CAAlB,CAA/D;IACAwM,KAAK,CAAC2qB,mBAAN,GAA4B70B,eAAe,CAAC4D,MAAM,CAACsG,KAAK,CAAC0qB,gBAAP,EAAyB,CAAzB,CAAP,EAAoC,CAApC,EAAuC,CAAvC,CAA3C;IACA1qB,KAAK,CAAC9E,SAAN,GAAkBA,SAAlB;IACA8E,KAAK,CAACnN,IAAN,GAAaA,IAAb;IACAmN,KAAK,CAAClN,GAAN,GAAYA,GAAZ;IAEAoY,YAAY,CAACpL,QAAD,EAAW;MAAEE,KAAK;KAAlB,CAAZ;IACAA,KAAK,CAAC/H,KAAN,GAAc,CACV,CAAC,CAAD,EAAI,CAAJ,CADU,EAEV,CAAC/B,KAAD,EAAQ,CAAR,CAFU,EAGV,CAAC,CAAD,EAAIE,MAAJ,CAHU,EAIV,CAACF,KAAD,EAAQE,MAAR,CAJU,EAKZrI,GALY,CAKR,UAACmM,CAAD,EAAI9I,CAAJ;aAAUkI,KAAK,CAACY,CAAD,EAAI3I,eAAJ,CAAL;KALF,CAAd;IAOAyO,KAAK,CAACqM,SAAN,GAAkBrM,KAAK,CAAC/H,KAAN,CAAYlK,GAAZ,CAAgB,UAACsD,EAAD;UAAEmG;UAAGC;aAAiBE,QAAQ,CAACqI,KAAK,CAAC0qB,gBAAP,EAAyB,CAAClzB,CAAD,EAAIC,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAzB,EAAuC,CAAvC,CAAR;KAAtC,CAAlB;IACAuI,KAAK,CAAC4qB,WAAN,GAAoBn7B,oBAAoB,CAAC,CAAD,CAAxC;IACAuQ,KAAK,CAAC3M,UAAN,GAAmB5D,oBAAoB,CAAC,CAAD,CAAvC;IACAuQ,KAAK,CAACud,aAAN,GAAsB/e,uBAAuB,CAACnB,KAAD,CAA7C;IACA2C,KAAK,CAAC6qB,UAAN,GAAmB5e,wBAAwB,CAAC/Q,SAAD,CAA3C;IACAmC,KAAK,CAAC0M,cAAN,GAAuB;MACnB7O,SAAS;KADb;QAIM6E,MAAM,GAAGF,UAAU,CAAcC,QAAd,EAAwBnR,CAAxB,EAA2B;MAChD8zB,GAAG,EAAE,UAACtyB,MAAD;QACD6P,KAAK,CAAC4qB,WAAN,GAAoBz6B,MAApB;;KAFiB,CAAzB;QAKMwZ,MAAM,GAAGrJ,YAAY,CAACR,QAAD,EAAW,aAAX,EAA0BC,MAA1B,CAA3B;;QACI4J,MAAM,KAAK,KAAf,EAAsB;MAClB3J,KAAK,CAAC8qB,MAAN,GAAe,IAAf;;;WAEG9qB,KAAK,CAAC8qB,MAAb;GA5FO;EA8FXlF,WAAW,EAAX,UACI9lB,QADJ,EAEInR,CAFJ;QAIYqR,eAAA;QACFyL,eAAA;QAAOC,eAAP;QAEFif,+CAAA;QAAqBt3B,6BAArB;QAAiCy3B,qBAAjC;QAAyCF,+BAAzC;QACA3yB,mBADA;QAEA4yB,6BAFA;QAGAtN,mCAHA;;QAMA,CAACuN,MAAL,EAAa;aACF,KAAP;;;QAGA1R,aAAa,CAACtZ,QAAD,EAAW,UAAX,CAAjB,EAAyC;UAC/BirB,aAAa,GAAeF,UAAU,CAAC98B,GAAX,CAAe,UAACiU,KAAD;eAAmBub,aAAa,CAACvb,KAAD,CAAb;OAAlC,CAAlC;;UAEI+oB,aAAa,CAACr3B,MAAd,GAAuB,CAA3B,EAA8B;QAC1Bq3B,aAAa,CAAC/2B,IAAd,CAAmB,CACf,CAAC+2B,aAAa,CAAC,CAAD,CAAb,CAAiB,CAAjB,IAAsBA,aAAa,CAAC,CAAD,CAAb,CAAiB,CAAjB,CAAvB,IAA8C,CAD/B,EAEf,CAACA,aAAa,CAAC,CAAD,CAAb,CAAiB,CAAjB,IAAsBA,aAAa,CAAC,CAAD,CAAb,CAAiB,CAAjB,CAAvB,IAA8C,CAF/B,CAAnB;;;UAME15B;;SAAA;UACFwe,kCADE;UAEFD,8BAFE;;MAQNlE,KAAK,IAAImE,kBAAkB,CAAC1c,MAA5B;MACAsY,KAAK,IAAImE,gBAAgB,CAACzc,MAA1B;;;QAGEmL,IAAI,GAAGiN,WAAW,CAAC;MAAEvL,KAAK,OAAP;MAASyL,KAAK,OAAd;MAAgBC,KAAK;KAAtB,EAA0B,IAA1B,CAAxB;QACMW,SAAS,GAAGrM,KAAK,CAACqM,SAAN,CAAgB1W,KAAhB,EAAlB;IAEAk1B,UAAU,CAACp1B,OAAX,CAAmB,UAACuM,KAAD;MACfqK,SAAS,CAACrK,KAAD,CAAT,GAAmBzD,IAAI,CAAC8N,SAAS,CAACrK,KAAD,CAAV,EAAmB1D,IAAnB,CAAvB;KADJ;;QAII,CAACrQ,UAAU,CAAC0R,KAAX,CACD,UAAAqrB,WAAA;aAAepB,UAAU,CAACoB,WAAW,CAACj9B,GAAZ,CAAgB,UAAAqD,CAAA;eAAK6G,KAAK,CAAC7G,CAAD,CAAL;OAArB,CAAD,EAAiC45B,WAAW,CAACj9B,GAAZ,CAAgB,UAAAqD,CAAA;eAAKib,SAAS,CAACjb,CAAD,CAAT;OAArB,CAAjC,CAAV;KADd,CAAL,EAEG;aACQ,KAAP;;;QAEE65B,CAAC,GAAGC,gBAAgB,CACtBjzB,KAAK,CAAC,CAAD,CADiB,EAEtBA,KAAK,CAAC,CAAD,CAFiB,EAGtBA,KAAK,CAAC,CAAD,CAHiB,EAItBA,KAAK,CAAC,CAAD,CAJiB,EAKtBoU,SAAS,CAAC,CAAD,CALa,EAMtBA,SAAS,CAAC,CAAD,CANa,EAOtBA,SAAS,CAAC,CAAD,CAPa,EAQtBA,SAAS,CAAC,CAAD,CARa,CAA1B;;QAWI,CAAC4e,CAAC,CAACv3B,MAAP,EAAe;aACJ,KAAP;;;QAGEvD,MAAM,GAAG0F,kBAAkB,CAACH,QAAQ,CAACi1B,mBAAD,EAAsBM,CAAtB,EAAyB,CAAzB,CAAT,CAAjC;QACMt7B,SAAS,GAAMqQ,KAAK,CAACzC,eAAN,eAAA,GAAkCpN,MAAM,CAACnC,IAAP,CAAY,GAAZ,CAAlC,MAArB;QAEMo1B,KAAK,GAAG+H,WAAW,CAACzxB,MAAM,CAACrG,UAAD,EAAa,CAAb,CAAP,EAAwBlD,MAAxB,EAAgC,CAAhC,CAAzB;IAEA6P,KAAK,CAAC3M,UAAN,GAAmBlD,MAAnB;IAEAmQ,YAAY,CAACR,QAAD,EAAW,QAAX,EAAqBD,UAAU,CAASC,QAAT,EAAmBnR,CAAnB,EAAsB;MAC7Dy0B,KAAK,OADwD;MAE7DjzB,MAAM,EAAEg7B,WAAW,CAACP,WAAD,EAAcz6B,MAAd,EAAsB,CAAtB,CAF0C;MAG7DuF,QAAQ,EAAEy1B,WAHmD;MAI7D7sB,IAAI,EAAEnO,MAJuD;MAK7DR,SAAS;KAL8B,CAA/B,CAAZ;WAOO,IAAP;GA9KO;EAgLXiyB,cAAc,EAAd,UACI9hB,QADJ,EAEInR,CAFJ;QAIYqR,eAAA;QAAOmD,iBAAP;;QACJ,CAACnD,KAAK,CAAC8qB,MAAX,EAAmB;aACR,KAAP;;;IAEJ9qB,KAAK,CAAC8qB,MAAN,GAAe,KAAf;IAEAxqB,YAAY,CAACR,QAAD,EAAW,WAAX,EAAwBD,UAAU,CAAYC,QAAZ,EAAsBnR,CAAtB,EAAyB;MACnEwU,MAAM;KADoC,CAAlC,CAAZ;WAGOA,MAAP;;CA7LR;;AC/CO,IAAMioB,IAAI,GAAGh8B,MAAM,CAAC,MAAD,CAAnB;AACP,AAAO,IAAMi8B,WAAW,GAAGj8B,MAAM,CAAC,aAAD,CAA1B;AACP,AAAO,IAAMk8B,UAAU,GAAGl8B,MAAM,CAAC,YAAD,CAAzB;AACP,AAAO,IAAMm8B,KAAK,GAAGn8B,MAAM,CAAC,OAAD,CAApB;;ACOP,SAASo8B,YAAT,CAAsB1rB,QAAtB;MACUrP,EAAE,GAAGqP,QAAQ,CAAC6D,WAApB;MACMtS,mBAAA;MAAE6E,gBAAF;MAASE,kBAAT;EAENq1B,WAAW,CAACh7B,EAAD,EAAK86B,KAAL,CAAX;EAEA96B,EAAE,CAACa,KAAH,CAASo6B,OAAT,IAAoB,iCAA+Bx1B,KAA/B,iBAAA,GAAmDE,MAAnD,OAApB;;;AAGJ,SAASu1B,YAAT,CAAsB5mB,KAAtB;SACYA,mBAAA,MAAA;IAAKC,GAAG,EAAC;IAAcC,SAAS,EAAEomB;GAAlC,EACJtmB,mBAAA,MAAA;IAAKE,SAAS,EAAEqmB;GAAhB,CADI,EAEJvmB,mBAAA,MAAA;IAAKE,SAAS,EAAEqmB;GAAhB,CAFI,EAGJvmB,mBAAA,MAAA;IAAKE,SAAS,EAAEqmB;GAAhB,CAHI,EAIJvmB,mBAAA,MAAA;IAAKE,SAAS,EAAEqmB;GAAhB,CAJI,CAAR;;;AAOJ,eAAe;EACX79B,IAAI,EAAE,UADK;EAEXsV,KAAK,EAAE;IACHkE,QAAQ,EAAEqC;GAHH;EAKXL,MAAM,EAAN,UAAOnJ,QAAP,EAAkDiF,KAAlD;QACU1T,mBAAA;QAAEQ,kBAAF;QAAUoV,sBAAV;QAAoBW,wBAApB;QACA1T,mBAAA;QAAEgC,gBAAF;QAASE,kBAAT;QAAiBlH,cAAjB;QAAuBC,cAAvB;QAA6B2I,cAA7B;QAAmCC,cAAnC;;QAEF6P,SAAJ,EAAe;aACJ,CACH7C,mBAAA,MAAA;QAAKC,GAAG,EAAC;QAAOa,GAAG,EAAEA,GAAG,CAAC/F,QAAD,EAAW,aAAX;QAA2BmF,SAAS,EAAEmmB;OAA9D,CADG,EAEHO,YAAY,CAAC5mB,KAAD,CAFT,CAAP;;;QAKA,CAAClT,MAAD,IAAW,CAACoV,QAAhB,EAA0B;aACf,EAAP;;;QAEEgkB,CAAC,GAAGC,gBAAgB,CACtB,CAAC,CAAD,EAAI,CAAJ,CADsB,EAEtB,CAACh1B,KAAD,EAAQ,CAAR,CAFsB,EAGtB,CAAC,CAAD,EAAIE,MAAJ,CAHsB,EAItB,CAACF,KAAD,EAAQE,MAAR,CAJsB,EAKtBlH,IALsB,EAMtBC,IANsB,EAOtB2I,IAPsB,EAQtBC,IARsB,CAA1B;QAUMpI,SAAS,GAAGs7B,CAAC,CAACv3B,MAAF,GAAW,cAAYmC,kBAAkB,CAACo1B,CAAD,CAAlB,CAAsBj9B,IAAtB,CAA2B,GAA3B,CAAZ,MAAX,GAA4D,MAA9E;WAEO,CACH+W,mBAAA,MAAA;MAAKC,GAAG,EAAC;MAAOa,GAAG,EAAEA,GAAG,CAAC/F,QAAD,EAAW,aAAX;MAA2BmF,SAAS,EAAEmmB;MAAM95B,KAAK,EAAE;QACvEwB,GAAG,EAAE,KADkE;QAEvED,IAAI,EAAE,KAFiE;QAGvEqD,KAAK,EAAKA,KAAK,OAHwD;QAIvEE,MAAM,EAAKA,MAAM,OAJsD;QAKvE7E,eAAe,EAAE,KALsD;QAMvE5B,SAAS;;KANb,CADG,EASHg8B,YAAY,CAAC5mB,KAAD,CATT,CAAP;GA9BO;EA0CX2D,SAAS,EAAT,UAAU5I,QAAV,EAAqCzO,EAArC;QAAuC2O;QAAOE;QAASC;QAASC;;QACxD,CAACA,UAAL,EAAiB;aACN,KAAP;;;IAEJJ,KAAK,CAAC4rB,UAAN,GAAmB,KAAnB;IACA5rB,KAAK,CAACyqB,WAAN,GAAoBrqB,UAAU,CAACvO,MAA/B;QACM8R,WAAW,GAAG7D,QAAQ,CAAC6D,WAA7B;QACMzP,mBAAA;QACFuJ,sCADE;QAEFvO,cAFE;QAEIC,cAFJ;QAEU2I,cAFV;QAEgBC,cAFhB;QAGF7B,gBAHE;QAGKE,kBAHL;QAIFhB,0BAJE;QAKF7B,cALE;QAOEV,4BAAA;QAAMC,0BAAN;;QACFiG,sCAAA;QACFyd,sBADE;QAEFE,oBAFE;;QAIAloB,CAAC,GAAG+E,IAAI,GAAG,CAAH,GAAO,CAArB;QACM0E,KAAK,GAAGJ,aAAa,CAACzC,UAAD,EAAac,KAAb,EAAoBE,MAApB,EAA4B5H,CAA5B,CAA3B;;QACMoL,mBAAA;QACFiyB,kBADE;QAEFC,gBAFE;;QAKAC,eAAe,GAAGzyB,KAAK,CACzB,CAAC4G,OAAD,EAAUC,OAAV,CADyB,EAEzB5B,IAAI,CAAC,CAAC1L,IAAI,GAAGg5B,QAAR,EAAkB/4B,GAAG,GAAGg5B,OAAxB,CAAD,EAAmC7zB,KAAK,CAAC,CAAD,CAAxC,CAFqB,CAA7B;;QAKMuC,kFAAA;QAACwxB,YAAD;QAAOC,YAAP;;QAMAC,KAAK,GAAG,CACV;MAAEr5B,IAAI,EAAE2jB,YAAR;MAAsB1jB,GAAG,EAAE4jB,WAA3B;MAAwCxgB,KAAK,OAA7C;MAA+CE,MAAM,EAAE61B,IAAI,GAAG;KADpD,EAEV;MAAEp5B,IAAI,EAAE2jB,YAAR;MAAsB1jB,GAAG,EAAE4jB,WAA3B;MAAwCxgB,KAAK,EAAE81B,IAAI,GAAG,EAAtD;MAA0D51B,MAAM;KAFtD,EAGV;MAAEvD,IAAI,EAAE2jB,YAAR;MAAsB1jB,GAAG,EAAE4jB,WAAW,GAAGuV,IAAd,GAAqB,EAAhD;MAAoD/1B,KAAK,OAAzD;MAA2DE,MAAM,EAAEA,MAAM,GAAG61B,IAAT,GAAgB;KAHzE,EAIV;MAAEp5B,IAAI,EAAE2jB,YAAY,GAAGwV,IAAf,GAAsB,EAA9B;MAAkCl5B,GAAG,EAAE4jB,WAAvC;MAAoDxgB,KAAK,EAAEA,KAAK,GAAG81B,IAAR,GAAe,EAA1E;MAA8E51B,MAAM;KAJ1E,CAAd;QAOM+1B,QAAQ,GAAG,GAAGx2B,KAAH,CAASy2B,IAAT,CAAczoB,WAAW,CAAC0oB,kBAAZ,CAAgCF,QAA9C,CAAjB;IACAD,KAAK,CAACz2B,OAAN,CAAc,UAACkD,IAAD,EAAOvH,CAAP;MACV+6B,QAAQ,CAAC/6B,CAAD,CAAR,CAAYE,KAAZ,CAAkBo6B,OAAlB,GACM,WAAS/yB,IAAI,CAAC9F,IAAd,aAAA,GAA6B8F,IAAI,CAAC7F,GAAlC,gBAAA,GAAmD6F,IAAI,CAACzC,KAAxD,iBAAA,GAA4EyC,IAAI,CAACvC,MAAjF,QADN;KADJ;IAIAk2B,QAAQ,CAAC3oB,WAAD,EAAc4nB,KAAd,CAAR;GA3FO;EA6FX5I,IAAI,EAAJ,UAAK7iB,QAAL,EAAgCzO,EAAhC;QAAkC2O;QAAOI;;QACjC,CAACA,UAAL,EAAiB;aACN,KAAP;;;QAEA,CAACJ,KAAK,CAAC4rB,UAAX,EAAuB;MACnB5rB,KAAK,CAAC4rB,UAAN,GAAmB,IAAnB;MACAJ,YAAY,CAAC1rB,QAAD,CAAZ;;GAnGG;EAsGX2hB,OAAO,EAAP,UAAQ3hB,QAAR,EAAkDnR,CAAlD;QACQ,CAACA,CAAC,CAACyR,UAAP,EAAmB;aACR,KAAP;;;QAEIA,yBAAA;QAAYwrB,yBAAZ;QAAwB5rB,eAAxB;;QACJ,CAACA,KAAK,CAAC4rB,UAAX,EAAuB;MACnBJ,YAAY,CAAC1rB,QAAD,CAAZ;;;QAGEjO,MAAM,GAAGiO,QAAQ,CAACzC,KAAT,CAAexL,MAA9B;QACM44B,WAAW,GAAGrqB,UAAU,CAACvO,MAA/B;;QAEI+5B,UAAU,IAAI9rB,QAAQ,CAACysB,iBAAT,CAA2B9B,WAA3B,CAAlB,EAA2D;;;;QAGrD+B,cAAc,GAAG36B,MAAM,CAAC46B,QAAP,CAAgBhC,WAAhB,CAAvB;IAEAnqB,YAAY,CAACR,QAAD,EAAW,SAAX,EAAsBD,UAAU,CAAUC,QAAV,EAAoBnR,CAApB,EAAuB;MAC/D87B,WAAW,aADoD;MAE/DjkB,QAAQ,EAAE3U,MAAM,KAAK44B,WAF0C;MAG/D+B,cAAc;KAH0B,CAAhC,CAAZ;GAvHO;EA6HX3K,cAAc,EAAd,UAAe/hB,QAAf,EAAwCnR,CAAxC;WACW,KAAK+Z,SAAL,CAAe5I,QAAf,EAAyBnR,CAAzB,CAAP;GA9HO;EAgIX60B,SAAS,EAAT,UAAU1jB,QAAV,EAAmCnR,CAAnC;WACW,KAAKg0B,IAAL,CAAU7iB,QAAV,EAAoBnR,CAApB,CAAP;GAjIO;EAmIXmzB,YAAY,EAAZ,UACIhiB,QADJ,EAEInR,CAFJ;QAIYyR,yBAAA;QAAYwrB,yBAAZ;QAAwB5rB,eAAxB;;QACJ,CAACI,UAAL,EAAiB;aACN,KAAP;;;QAEA,CAACwrB,UAAL,EAAiB;MACbJ,YAAY,CAAC1rB,QAAD,CAAZ;;;QAEE4sB,eAAe,GAAG1sB,KAAK,CAACyqB,WAA9B;QACMA,WAAW,GAAGrqB,UAAU,CAACvO,MAA/B;;QAEI+5B,UAAU,IAAI9rB,QAAQ,CAACysB,iBAAT,CAA2B9B,WAA3B,CAAd,IAAyDiC,eAAe,KAAKjC,WAAjF,EAA8F;;;;QAGxF3nB,OAAO,GAAGhD,QAAQ,CAACiD,KAAT,CAAeD,OAA/B;QACI6pB,WAAW,GAAG7pB,OAAO,CAACpV,OAAR,CAAgB+8B,WAAhB,CAAlB;QACMjkB,QAAQ,GAAGmmB,WAAW,GAAG,CAAC,CAAhC;QACIH,cAAc,GAAG,KAArB;;QAEIG,WAAW,KAAK,CAAC,CAArB,EAAwB;MACpBA,WAAW,GAAGC,SAAS,CAAC9pB,OAAD,EAAU,UAAA+pB,YAAA;eAAgBA,YAAY,CAACJ,QAAb,CAAsBhC,WAAtB,CAAA;OAA1B,CAAvB;MACA+B,cAAc,GAAGG,WAAW,GAAG,CAAC,CAAhC;;;IAGJrsB,YAAY,CAACR,QAAD,EAAW,cAAX,EAA2BD,UAAU,CAACC,QAAD,EAAWnR,CAAX,EAAc;MAC3DmU,OAAO,SADoD;MAE3D2nB,WAAW,aAFgD;MAG3DkC,WAAW,aAHgD;MAI3DnmB,QAAQ,UAJmD;MAK3DgmB,cAAc;KAL+B,CAArC,CAAZ;;CA9JR;;ACzBA,aAAe;EACX/+B,IAAI,EAAE,QADK;EAEXsV,KAAK,EAAE;IACH3S,MAAM,EAAEkZ;GAHD;EAKXL,MAAM,EAAN,UAAOnJ,QAAP,EAAkCiF,KAAlC;QACQ,CAACjF,QAAQ,CAACiD,KAAT,CAAe3S,MAApB,EAA4B;aACjB,IAAP;;;QAEEiB,mBAAA;QAAEmM,8BAAF;QAAgB7B,sBAAhB;WAEC,CACHoJ,mBAAA,MAAA;MAAKE,SAAS,EAAE7V,MAAM,CAAC,SAAD,EAAY,QAAZ;MAClBkC,KAAK,EAAEoK,mBAAmB,CAACC,QAAD,EAAW6B,YAAX;MAA0BwH,GAAG,EAAC;KAD5D,CADG,CAAP;;CAXR;;ACEA,SAAS8nB,wBAAT,CAAkCn+B,CAAlC;MACUo+B,eAAe,GAAGp+B,CAAC,CAACo+B,eAA1B;SAEO,CACHA,eAAe,CAACv4B,UADb,EAEHu4B,eAAe,CAACt4B,SAFb,CAAP;;;AAMJ,iBAAe;EACXhH,IAAI,EAAE,YADK;EAEXic,QAAQ,EAAE,IAFC;EAGX3G,KAAK,EAAE;IACHiqB,UAAU,EAAE1jB,OADT;IAEHyjB,eAAe,EAAEjM,MAFd;IAGHmM,eAAe,EAAE1jB;GANV;EAQXb,SAAS,EAAT,UAAU5I,QAAV,EAAsDnR,CAAtD;QACUoU,KAAK,GAAGjD,QAAQ,CAACiD,KAAvB;QAEI1R,0BAAA;QAAA07B,8DAAA;QAGEG,UAAU,GAAG,IAAIC,UAAJ,EAAnB;IAEAx+B,CAAC,CAACqR,KAAF,CAAQktB,UAAR,GAAqBA,UAArB;QAEME,WAAW,GAAGz+B,CAAC,CAACuZ,SAAF,GAAc,gBAAd,GAAiC,eAArD;QACMpF,OAAO,GAAGnU,CAAC,CAACmU,OAAlB;IAEAoqB,UAAU,CAACG,EAAX,CAAc,QAAd,EAAwB,UAACh8B,EAAD;UAAGe;UAAW8I;UAC5B6E,MAAM,GAAGF,UAAU,CAAWC,QAAX,EAAqBnR,CAArB,EAAwB;QAC7Co+B,eAAe,EAAE36B,SAD4B;QAE7C8I,SAAS;OAFY,CAAzB;UAKM0I,SAAS,GAAGd,OAAO,GAAG,eAAH,GAAqB,UAA9C;;UACIA,OAAJ,EAAa;QACT/C,MAAM,CAAC+C,OAAP,GAAiBA,OAAjB;;;MAEJxC,YAAY,CAACR,QAAD,EAAW8D,SAAX,EAAsB7D,MAAtB,CAAZ;KAVJ,EAWGstB,EAXH,CAWM,MAXN,EAWc,UAACh8B,EAAD;UAAGqsB;UAASC;MACtB7d,QAAQ,CAACstB,WAAD,CAAR,CAAsBE,QAAtB,CAA+B5P,OAA/B,EAAwCC,OAAxC,EAAiDhvB,CAAC,CAACyR,UAAnD,EAA+D,KAA/D;KAZJ;IAcA8sB,UAAU,CAACxkB,SAAX,CAAqB/Z,CAArB,EAAwB;MACpByD,SAAS,EAAE26B;KADf;GAnCO;EAuCXQ,WAAW,EAAX,UAAYztB,QAAZ,EAAwDnR,CAAxD;QAEQu+B,+BAAA;;QAEA,CAACA,UAAL,EAAiB;;;;QAGX77B,mBAAA;QACF6C,uBADE;QACF64B,8DADE;QAEFh0B,uBAFE;QAEFk0B,wCAFE;QAGFrzB,yBAHE;QAGF4zB,iEAHE;IAMNN,UAAU,CAACvK,IAAX,CAAgBh0B,CAAhB,EAAmB;MACfyD,SAAS,EAAE26B,eADI;MAEf3Z,SAAS,EAAE6Z,eAFI;MAGfO,iBAAiB,EAAE,UAACC,EAAD;eACRD,iBAAiB,CAAC;UAAET,eAAe,EAAEU,EAAE,CAACr7B,SAAtB;UAAiC8I,SAAS,EAAEuyB,EAAE,CAACvyB;SAAhD,CAAxB;;KAJR;WAQO,IAAP;GA5DO;EA8DXynB,IAAI,EAAJ,UAAK7iB,QAAL,EAAiDnR,CAAjD;WACW,KAAK4+B,WAAL,CAAiBztB,QAAjB,EAA2BnR,CAA3B,CAAP;GA/DO;EAiEX8yB,OAAO,EAAP,UAAQ3hB,QAAR,EAAoDnR,CAApD;IACIA,CAAC,CAACqR,KAAF,CAAQktB,UAAR,CAAmBzL,OAAnB;IACA9yB,CAAC,CAACqR,KAAF,CAAQktB,UAAR,GAAqB,IAArB;GAnEO;EAqEXtkB,gBAAgB,EAAhB,UAAiB9I,QAAjB,EAA6DnR,CAA7D;WACW,KAAK+Z,SAAL,CAAe5I,QAAf,eAA8BnR;MAAGuZ,SAAS,EAAE;MAA5C,CAAP;GAtEO;EAwEX0d,WAAW,EAAX,UAAY9lB,QAAZ,EAAwDnR,CAAxD;WACW,KAAKg0B,IAAL,CAAU7iB,QAAV,EAAoBnR,CAApB,CAAP;GAzEO;EA2EXizB,cAAc,EAAd,UAAe9hB,QAAf,EAA2DnR,CAA3D;WACW,KAAK8yB,OAAL,CAAa3hB,QAAb,EAAuBnR,CAAvB,CAAP;GA5EO;EA8EXkzB,cAAc,EAAd,UAAe/hB,QAAf,EAAwCnR,CAAxC;WACW,KAAK+Z,SAAL,CAAe5I,QAAf,EAAyBnR,CAAzB,CAAP;GA/EO;EAiFX60B,SAAS,EAAT,UAAU1jB,QAAV,EAAmCnR,CAAnC;WACW,KAAKg0B,IAAL,CAAU7iB,QAAV,eAAyBnR;MAAGmU,OAAO,EAAEhD,QAAQ,CAACiD,KAAT,CAAeD;MAApD,CAAP;GAlFO;EAoFXgf,YAAY,EAAZ,UAAahiB,QAAb,EAAsCnR,CAAtC;WACW,KAAK8yB,OAAL,CAAa3hB,QAAb,EAAuBnR,CAAvB,CAAP;GArFO;EAuFXozB,qBAAqB,EAArB,UAAsBjiB,QAAtB,EAA+CnR,CAA/C;WACW,KAAK+Z,SAAL,CAAe5I,QAAf,EAAyBnR,CAAzB,CAAP;GAxFO;EA0FX++B,eAAe,EAAf,UAAgB5tB,QAAhB,EAAyCnR,CAAzC;WACW,KAAKg0B,IAAL,CAAU7iB,QAAV,eAAyBnR;MAAGmU,OAAO,EAAEhD,QAAQ,CAACiD,KAAT,CAAeD;MAApD,CAAP;GA3FO;EA6FX6qB,kBAAkB,EAAlB,UAAmB7tB,QAAnB,EAA4CnR,CAA5C;WACW,KAAK8yB,OAAL,CAAa3hB,QAAb,EAAuBnR,CAAvB,CAAP;;CA9FR;;ACfA,cAAe;EACXlB,IAAI,EAAE,EADK;EAEXsV,KAAK,EAAE;IACHlR,MAAM,EAAEivB,MADL;IAEH1uB,SAAS,EAAE0uB,MAFR;IAGH7Z,QAAQ,EAAEqC,OAHP;IAIHlZ,MAAM,EAAEkZ,OAJL;IAKH/X,eAAe,EAAEsvB,KALd;IAMH1b,IAAI,EAAEmE,OANH;IAOH7I,KAAK,EAAEogB,KAPJ;IAQH5b,SAAS,EAAEmgB,MARR;IASH1gB,cAAc,EAAE6E;;CAXxB;;ACYO,IAAMqkB,cAAc,GAAG,CAC1BC,OAD0B,EACjBC,SADiB,EACNC,SADM,EACK1H,SADL,EACgB2H,SADhB,EAC2BC,SAD3B,EACsCC,QADtC,EACgDC,QADhD,EAC0DC,UAD1D,EACsEC,QADtE,EACgFC,MADhF,CAAvB;;ACPP,gBAAe;EACX7gC,IAAI,EAAE,WADK;EAEXsV,KAAK,EAAE;IACHwrB,kBAAkB,EAAEhlB,MADjB;IAEH3B,SAAS,EAAE0B;GAJJ;EAMXL,MAAM,EAAN,UAAOnJ,QAAP,EAAgCiF,KAAhC;QACUjC,OAAO,GAAGhD,QAAQ,CAACiD,KAAT,CAAeD,OAAf,IAA0B,EAA1C;IAEAhD,QAAQ,CAACuE,SAAT,GAAqB,EAArB;QACMhT,mBAAA;QAAEwB,cAAF;QAAQC,YAAR;QACAd,QAAQ,GAAG;MAAEa,IAAI,MAAN;MAAQC,GAAG;KAA5B;WAEOgQ,OAAO,CAAC/U,GAAR,CAAY,UAAC8D,MAAD,EAAST,CAAT;aACR2T,mBAAA,CAACmE,eAAD;QACHlE,GAAG,EAAE,aAAa5T;QAClByU,GAAG,EAAE2oB,IAAI,CAAC1uB,QAAD,EAAW,WAAX,EAAwB1O,CAAxB;QACTS,MAAM,EAAEA;QACRzB,MAAM,EAAE;QACR6V,cAAc,EAAEnG;QAChBsF,cAAc,EAAEpT;OANb,CAAP;KADG,CAAP;;CAbR;;ACIA,SAASy8B,SAAT,CAAmBx2B,KAAnB,EAAwC+J,KAAxC;SACW9U,IAAI,CAAC8J,GAAL,MAAA,CAAA9J,IAAA,EAAY+K,KAAK,CAAClK,GAAN,CAAU,UAACsD,EAAD;QAAEnC;QAAMC;QAAM2I;QAAMC;WACtC7K,IAAI,CAAC8J,GAAL,CAAS9H,IAAI,CAAC8S,KAAD,CAAb,EAAsB7S,IAAI,CAAC6S,KAAD,CAA1B,EAAmClK,IAAI,CAACkK,KAAD,CAAvC,EAAgDjK,IAAI,CAACiK,KAAD,CAApD,CAAP;GADe,CAAZ,CAAP;;;AAIJ,SAAS0sB,SAAT,CAAmBz2B,KAAnB,EAAwC+J,KAAxC;SACW9U,IAAI,CAAC+J,GAAL,MAAA,CAAA/J,IAAA,EAAY+K,KAAK,CAAClK,GAAN,CAAU,UAACsD,EAAD;QAAEnC;QAAMC;QAAM2I;QAAMC;WACtC7K,IAAI,CAAC+J,GAAL,CAAS/H,IAAI,CAAC8S,KAAD,CAAb,EAAsB7S,IAAI,CAAC6S,KAAD,CAA1B,EAAmClK,IAAI,CAACkK,KAAD,CAAvC,EAAgDjK,IAAI,CAACiK,KAAD,CAApD,CAAP;GADe,CAAZ,CAAP;;;AAIJ,SAAS2sB,YAAT,CAAsBtqB,SAAtB,EAAoD1I,QAApD;MACQ,CAAC0I,SAAS,CAAC3Q,MAAf,EAAuB;WACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAP;;;MAGEk7B,aAAa,GAAGvqB,SAAS,CAACtW,GAAV,CAAc,UAACsD,EAAD;QAAGgM;WAAYmB,uBAAuB,CAACnB,KAAD,CAAvB;GAA7B,CAAtB;MACIwxB,IAAI,GAAGzgC,OAAX;MACI0gC,IAAI,GAAG1gC,OAAX;MACI2gC,UAAU,GAAG,CAAjB;MACIC,WAAW,GAAG,CAAlB;MACMC,aAAa,GAAGtwB,QAAQ,CAAChD,QAAD,EAAWzN,QAAX,CAA9B;;MAEI+gC,aAAa,GAAG,EAApB,EAAwB;QACdC,KAAG,GAAGvzB,QAAQ,GAAG,GAAX,GAAiBzO,IAAI,CAACiO,EAAlC;QACMg0B,IAAE,GAAGjiC,IAAI,CAACkiC,GAAL,CAASF,KAAT,CAAX;QACMG,IAAE,GAAG,CAAC,CAAD,GAAKF,IAAhB;QACMG,KAAG,GAAG,CAAChhC,OAAD,EAAUF,OAAV,CAAZ;QACMmhC,KAAG,GAAG,CAACjhC,OAAD,EAAUF,OAAV,CAAZ;IAEAwgC,aAAa,CAACn5B,OAAd,CAAsB,UAAAwC,KAAA;MAClBA,KAAK,CAACxC,OAAN,CAAc,UAAAvC,GAAA;;;YAGJs8B,EAAE,GAAGt8B,GAAG,CAAC,CAAD,CAAH,GAASi8B,IAAE,GAAGj8B,GAAG,CAAC,CAAD,CAA5B;YACMu8B,EAAE,GAAGv8B,GAAG,CAAC,CAAD,CAAH,GAASm8B,IAAE,GAAGn8B,GAAG,CAAC,CAAD,CAA5B;QAEAo8B,KAAG,CAAC,CAAD,CAAH,GAASpiC,IAAI,CAAC8J,GAAL,CAASs4B,KAAG,CAAC,CAAD,CAAZ,EAAiBE,EAAjB,CAAT;QACAF,KAAG,CAAC,CAAD,CAAH,GAASpiC,IAAI,CAAC+J,GAAL,CAASq4B,KAAG,CAAC,CAAD,CAAZ,EAAiBE,EAAjB,CAAT;QACAD,KAAG,CAAC,CAAD,CAAH,GAASriC,IAAI,CAAC8J,GAAL,CAASu4B,KAAG,CAAC,CAAD,CAAZ,EAAiBE,EAAjB,CAAT;QACAF,KAAG,CAAC,CAAD,CAAH,GAASriC,IAAI,CAAC+J,GAAL,CAASs4B,KAAG,CAAC,CAAD,CAAZ,EAAiBE,EAAjB,CAAT;OATJ;KADJ;IAcAH,KAAG,CAAC75B,OAAJ,CAAY,UAAA+5B,EAAA;;MAERD,KAAG,CAAC95B,OAAJ,CAAY,UAAAg6B,EAAA;;YAEFj4B,CAAC,GAAG,CAACi4B,EAAE,GAAGD,EAAN,KAAaL,IAAE,GAAGE,IAAlB,CAAV;YACM53B,CAAC,GAAG03B,IAAE,GAAG33B,CAAL,GAASg4B,EAAnB;QAEAX,IAAI,GAAG3hC,IAAI,CAAC+J,GAAL,CAAS43B,IAAT,EAAer3B,CAAf,CAAP;QACAs3B,IAAI,GAAG5hC,IAAI,CAAC+J,GAAL,CAAS63B,IAAT,EAAer3B,CAAf,CAAP;OANJ;KAFJ;QAWMi4B,WAAW,GAAGd,aAAa,CAAC7gC,GAAd,CAAkB,UAACsD,EAAD;UAAEnC;UAAMC;UAAM2I;UAAMC;aAE/C,CACHoe,MAAM,CAACjnB,IAAD,EAAO,CAACggC,KAAR,CADH,EAEH/Y,MAAM,CAAChnB,IAAD,EAAO,CAAC+/B,KAAR,CAFH,EAGH/Y,MAAM,CAACre,IAAD,EAAO,CAACo3B,KAAR,CAHH,EAIH/Y,MAAM,CAACpe,IAAD,EAAO,CAACm3B,KAAR,CAJH,CAAP;KAFgB,CAApB;IASAH,UAAU,GAAGN,SAAS,CAACiB,WAAD,EAAc,CAAd,CAAT,GAA4BhB,SAAS,CAACgB,WAAD,EAAc,CAAd,CAAlD;IACAV,WAAW,GAAGP,SAAS,CAACiB,WAAD,EAAc,CAAd,CAAT,GAA4BhB,SAAS,CAACgB,WAAD,EAAc,CAAd,CAAnD;GA1CJ,MA4CO;IACHb,IAAI,GAAGH,SAAS,CAACE,aAAD,EAAgB,CAAhB,CAAhB;IACAE,IAAI,GAAGJ,SAAS,CAACE,aAAD,EAAgB,CAAhB,CAAhB;IACAG,UAAU,GAAGN,SAAS,CAACG,aAAD,EAAgB,CAAhB,CAAT,GAA8BC,IAA3C;IACAG,WAAW,GAAGP,SAAS,CAACG,aAAD,EAAgB,CAAhB,CAAT,GAA8BE,IAA5C;;QAEIG,aAAa,GAAG,GAApB,EAAyB;UACfU,YAAY,GAAGZ,UAArB;MAEAA,UAAU,GAAGC,WAAb;MACAA,WAAW,GAAGW,YAAd;;;;SAGD,CAACd,IAAD,EAAOC,IAAP,EAAaC,UAAb,EAAyBC,WAAzB,CAAP;;;AAGJ;;;EAA4B/uB,SAAA,cAAA,QAAA;;wBAA5B;wEAAA;;IAUWiF,YAAA,GAAmD,IAAI0qB,cAAJ,EAAnD;IACA1qB,eAAA,GAA+B,EAA/B;IACAA,cAAA,GAAmB,CAAnB;;;;;;qBAEA,GAAP,UAAmBiB,SAAnB;QACU9I,KAAK,GAAG,KAAKA,KAAnB;QACM0F,KAAK,GAAG,KAAKA,KAAnB;;QAEI,CAAC1F,KAAK,CAACxL,MAAX,EAAmB;MACfwL,KAAK,CAACxL,MAAN,GAAe,KAAK8R,WAApB;WAEKoC,UAAL,CAAgBC,UAAhB,GAA6B1U,KAA7B,CAAmCu+B,OAAnC,GAA6C,OAA7C;WACKxpB,aAAL,GAAqB7B,cAAc,CAAC,IAAD,EAAOnH,KAAK,CAACxL,MAAb,EAAsB,aAAtB,EAAqC,OAArC,CAAnC;WACKwV,cAAL,GAAsB7C,cAAc,CAAC,IAAD,EAAO,KAAKuB,UAAL,CAAgBC,UAAhB,EAAP,EAAqC,cAArC,EAAqD,cAArD,CAApC;;;QAEE8pB,kBAAkB,GAAG,CAACxuB,MAAM,CAAC6E,SAAS,CAAC/T,SAAX,EAAsB2Q,KAAK,CAAC3Q,SAA5B,CAAlC;;QAEI09B,kBAAJ,EAAwB;MACpBzyB,KAAK,CAACjL,SAAN,GAAkB2Q,KAAK,CAAC3Q,SAAxB;;;QAEEf,sCAAA;QAAE0+B,gBAAF;QAASC,oBAAT;QAAkBC,oBAAlB;;QAEFH,kBAAkB,IAAIC,KAAK,CAACr8B,MAA5B,IAAsCs8B,OAAO,CAACt8B,MAA9C,IAAwDu8B,OAAO,CAACv8B,MAApE,EAA4E;WACnEqQ,UAAL;;GAnBD;;qBAsBA,GAAP;SACSwE,WAAL;GADG;;oBAIA,GAAP,UAAkBhC,IAAlB,EAA+CC,QAA/C,EAAmEC,UAAnE;;;6BAAmE,EAAA;MAAAA,iBAAA;;;QAC3D,CAAC,KAAKV,UAAV,EAAsB;;;;SAGjB1B,SAAL,CAAe5O,OAAf,CAAuB,UAAAqK,QAAA;MACnBA,QAAQ,CAACiE,UAAT,CAAoBwC,IAApB,EAA0B,KAA1B,EAAiC,KAAjC;KADJ;QAIMlJ,KAAK,GAAG,KAAKA,KAAnB;QACM0F,KAAK,GAAG,KAAKA,KAAnB;QACMlR,MAAM,GAAGwL,KAAK,CAACxL,MAAN,IAAiBkR,KAAK,CAAClR,MAAtC;;QAEI,CAAC2U,QAAD,IAAcD,IAAI,KAAK,EAAT,IAAexD,KAAK,CAACmtB,WAAvC,EAAqD;;WAE5Cv0B,QAAL,GAAgBoH,KAAK,CAACwrB,kBAAtB;;;QAEE5yB,QAAQ,GAAG,KAAKA,QAAtB;;QACMzH,2CAAA;QAACrB,YAAD;QAAOC,WAAP;QAAYoD,aAAZ;QAAmBE,cAAnB;;;IAGNvE,MAAM,CAACP,KAAP,CAAao6B,OAAb,IAAwB,4BAA0Bx1B,KAA1B,gBAAA,GAA6CE,MAA7C,yBAAA,GAA0EuF,QAA1E,SAAxB;IACA0B,KAAK,CAACnH,KAAN,GAAcA,KAAd;IACAmH,KAAK,CAACjH,MAAN,GAAeA,MAAf;QAEMhE,SAAS,GAAG,KAAKgU,YAAL,EAAlB;QACM+pB,IAAI,GAAGhzB,aAAa,CACtBtL,MADsB,EAEtB,KAAKkU,UAAL,CAAgBC,UAAhB,EAFsB,EAGtB,KAAKI,YAAL,EAHsB,EAItB,KAAKrD,KAAL,CAAWpO,aAAX,IAA4BvC,SAJN,EAKtBiL,KALsB,CAA1B;QAOMnK,GAAG,GAAG,CAACi9B,IAAI,CAACt9B,IAAN,EAAas9B,IAAI,CAACr9B,GAAlB,CAAZ;IACAzB,kCAAA,EACI8+B,SAAA,QADJ,EAEIA,SAAA,QAFJ,EAGIA,SAAA,QAHJ,EAIIA,SAAA,QAJJ;IAMAA,IAAI,CAAC//B,MAAL,GAAcmO,IAAI,CAACrL,GAAD,EAAMi9B,IAAI,CAAC//B,MAAX,CAAlB;IACA+/B,IAAI,CAAC3yB,YAAL,GAAoBe,IAAI,CAACrL,GAAD,EAAMi9B,IAAI,CAAC3yB,YAAX,CAAxB;QAEM4yB,UAAU,GAAGD,IAAI,CAAC1yB,gBAAxB;IAEA2yB,UAAU,CAACt9B,GAAX,IAAmBA,GAAG,GAAGq9B,IAAI,CAACr9B,GAAZ,GAAoBuK,KAAK,CAACvK,GAA5C;IACAs9B,UAAU,CAACv9B,IAAX,IAAoBA,IAAI,GAAGs9B,IAAI,CAACt9B,IAAb,GAAsBwK,KAAK,CAACxK,IAA/C;SAEK6T,WAAL,cAEWypB;MACHt9B,IAAI,EAAEA,IAAI,GAAGs9B,IAAI,CAACt9B;MAClBC,GAAG,EAAEA,GAAG,GAAGq9B,IAAI,CAACr9B;MAJxB,EAMI2T,UANJ;GA/CG;;sBAwDA,GAAP,UAAoBhZ,IAApB,EAAkCkB,CAAlC;QACQlB,IAAI,CAACC,OAAL,CAAa,OAAb,IAAwB,CAAC,CAA7B,EAAgC;aACrB2iC,gBAAA,CAAM/vB,YAAN,KAAA,KAAA,EAAmB7S,IAAnB,EAAgCkB,CAAhC,CAAP;;GAFD;;qBAKG,GAAV;IACI0hC,gBAAA,CAAM9nB,WAAN,KAAA,KAAA,EAAsB,KAAKxF,KAAL,CAAWtC,KAAX,OAAA,EAAmB6vB,UAAnB,CAAtB,EAAqD,OAArD;GADM;;EApGIC,0BAAA,gBACPrnB,eAAe,CAACsnB;IACnBj/B,eAAe,EAAE,CAAC,KAAD,EAAQ,KAAR;IACjBqW,SAAS,EAAE;IACXX,QAAQ,EAAE;IACV0K,SAAS,EAAE;IACX7O,OAAO,EAAE;IACTyrB,kBAAkB,EAAE;IAPV;sBAuGlB;EAxG4BrlB,gBAA5B;;AClFA;;;EAA8CjJ,SAAA,SAAA,QAAA;;mBAA9C;;;;;;gBAEW,GAAP;QACU8C,KAAK,GAAG,KAAKA,KAAnB;QACMtC,KAAK,GAAWsC,KAAK,CAACtC,KAAN,IAAyB,EAA/C;QACM5O,MAAM,GAAG,KAAKkR,KAAL,CAAWlR,MAAX,IAAqB,KAAKkR,KAAL,CAAWD,OAA/C;QACM2tB,KAAK,GAAGpH,OAAO,CAACx3B,MAAD,CAArB;QACM8Q,OAAO,GAAG8tB,KAAK,IAAK5+B,MAAgB,CAAC6B,MAAjB,GAA0B,CAApD;;QAEIiP,OAAJ,EAAa;UACH+tB,SAAS,gBACR,KAAK3tB;QACRlR,MAAM,EAAE;QACRiR,OAAO,EAAEjR;QACT4O,KAAK,EAAMmtB,cAAc,OAAd,EAAgB0C,UAAhB,EAA8B7vB,KAA9B;QAJf;;aAMOsE,aAAA,CAACwrB,aAAD;QAAevrB,GAAG,EAAC;QAAQa,GAAG,EAAEA,GAAG,CAAC,IAAD,EAAO,UAAP;SAClC6qB,UADD,CAAP;KAPJ,MASO;UACGC,cAAc,GAAGF,KAAK,GAAI5+B,MAAgB,CAAC,CAAD,CAApB,GAA0BA,MAAtD;aAEOkT,aAAA,CAACmE,eAAD;QAAgClE,GAAG,EAAC;QAASa,GAAG,EAAEA,GAAG,CAAC,IAAD,EAAO,UAAP;sBAC/C,KAAK9C;QAAOlR,MAAM,EAAE8+B;QAAgBlwB,KAAK,EAAMmtB,cAAc,OAAd,CAAmBntB,KAAnB;SADrD,CAAP;;GAnBD;;;;;;;;;;;;;;;;;;2BAsCA,GAAP,UAAyB5O,MAAzB;WACW,KAAKiO,QAAL,CAAcysB,iBAAd,CAAgC16B,MAAhC,CAAP;GADG;;;;;;;;;;;;;;;;;;mBAkBA,GAAP,UAAiBlD,CAAjB;SACSmR,QAAL,CAAc4I,SAAd,CAAwB/Z,CAAxB;GADG;;;;;;;;;;;;;;;;;;;;kBAqBA,GAAP,UAAgBuR,OAAhB,EAAiCC,OAAjC;WACW,KAAKL,QAAL,CAAcZ,QAAd,CAAuBgB,OAAvB,EAAgCC,OAAhC,CAAP;GADG;;;;;;;;;;;;;;;oBAgBA,GAAP;SACSL,QAAL,CAAciE,UAAd;GADG;;;;;;;;;;;;;sBAcA,GAAP;SACSjE,QAAL,CAAc8wB,YAAd;GADG;;;;;;;;;;;;;;iBAeA,GAAP;WACW,KAAK9wB,QAAL,CAAc9H,OAAd,EAAP;GADG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBA+BA,GAAP,UAAeyP,QAAf,EAAiC1H,MAAjC;WACW,KAAKD,QAAL,CAAciI,OAAd,CAAsBN,QAAtB,EAAgC1H,MAAhC,CAAP;GADG;;;;;;;;;;;;;iBAaA,GAAP;SACSD,QAAL,CAAc+wB,oBAAd;GADG;;iBAGX;EA3K8C9rB,cAA9C;;;;"}